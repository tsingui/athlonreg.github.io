<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Canvas&#39;s Blog</title>
  
  <subtitle>套陆的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://iamzhl.top/"/>
  <updated>2019-03-11T16:21:49.900Z</updated>
  <id>https://iamzhl.top/</id>
  
  <author>
    <name>Canvas/套陆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS 安装配置 GitLab</title>
    <link href="https://iamzhl.top/Setup-gitlab-to-support-frame.html"/>
    <id>https://iamzhl.top/Setup-gitlab-to-support-frame.html</id>
    <published>2019-02-01T02:55:52.000Z</published>
    <updated>2019-03-11T16:21:49.900Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h2 id="CentOS-安装-GitLab"><a href="#CentOS-安装-GitLab" class="headerlink" title="CentOS 安装 GitLab"></a>CentOS 安装 GitLab</h2><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install curl</span></span><br><span class="line"><span class="comment"># yum -y install postfix</span></span><br><span class="line"><span class="comment"># systemctl start postfix</span></span><br><span class="line"><span class="comment"># systemctl enable postfix</span></span><br></pre></td></tr></table></figure><h3 id="下载-GitLab-的-RPM-包"><a href="#下载-GitLab-的-RPM-包" class="headerlink" title="下载 GitLab 的 RPM 包"></a>下载 GitLab 的 RPM 包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>在<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2dpdGxhYi1jZS95dW0vZWw3Lw==" title="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/<i class="fa fa-external-link"></i></span>找自己需要的版本，下载到本地，然后安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh  gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><p>也可以这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum localinstall gitlab-ce-11.7.0-ce.0.el7.x86_64.rpm</span></span><br></pre></td></tr></table></figure><h2 id="配置-gitlab-repo"><a href="#配置-gitlab-repo" class="headerlink" title="配置 gitlab repo"></a>配置 gitlab repo</h2><p>为了后续升级方便，建议添加<code>gitlab</code>的<code>repo</code>源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sh</span></span><br></pre></td></tr></table></figure><h2 id="端口修改"><a href="#端口修改" class="headerlink" title="端口修改"></a>端口修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/gitlab/gitlab.rb</span></span><br></pre></td></tr></table></figure><p>修改下面的属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">external_url &apos;http://devops.iamzhl.top:8090&apos;</span><br><span class="line">unicorn[&apos;port&apos;] = 8070</span><br><span class="line">nginx[&apos;listen_port&apos;] = 8090</span><br></pre></td></tr></table></figure><p><em>请根据个人需要进行定制</em></p><h2 id="重新部署并重启"><a href="#重新部署并重启" class="headerlink" title="重新部署并重启"></a>重新部署并重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab-ctl reconfigure</span></span><br><span class="line"><span class="comment"># gitlab-ctl restart</span></span><br></pre></td></tr></table></figure><h2 id="设置页面嵌套支持"><a href="#设置页面嵌套支持" class="headerlink" title="设置页面嵌套支持"></a>设置页面嵌套支持</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/opt/gitlab/nginx/conf/gitlab-http.conf</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzqr3dsb7gj31p818kgzc.jpg" alt></p><p>如图，添加标注的属性设置后重启<code>GitLab</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitlab-ctl restart</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS 安装配置 GitLab
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="GitLab" scheme="https://iamzhl.top/tags/GitLab/"/>
    
      <category term="frame" scheme="https://iamzhl.top/tags/frame/"/>
    
  </entry>
  
  <entry>
    <title>高效利用有道云笔记</title>
    <link href="https://iamzhl.top/How-to-use-youdao-note-in-a-special-way.html"/>
    <id>https://iamzhl.top/How-to-use-youdao-note-in-a-special-way.html</id>
    <published>2019-01-20T13:12:25.000Z</published>
    <updated>2019-03-11T16:21:49.892Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>先说几个博主和其他的码字农民工比较头疼的问题</p><ul><li>云同步</li></ul><p>现在是云的时代，没有云同步的码文环境不是一个好的环境，可能每个人都有不止一个码文平台，比如工作配的机器和私人的机器，我在其中一台机器写好的文章还要再写一份到另外的机器。。。简直不要太lower。可能有人说我们用某度网盘。。。What’s that？已经放弃好久，本文不做赘述，想用的就用吧。。。</p><ul><li>跨平台</li></ul><p>这里假设上面的环境成立，你有两台机器，私人的是Mac环境，工作机器是Windows，那么问题来了，之前我在Mac非常喜欢MWeb，因为它的图床集成让我着迷 ，截图粘贴一张引用外链的图片就这么完成了，就是这么快，但是现在也已经放弃了，因为Windows平台人家不做，不要问我为什么，我不想喷Windows太垃圾🌝🌝但是无奈单位只有Windows，于是我要用两套环境。。。记住两套快捷键。。。</p><ul><li>MarkDown</li></ul><p>关于MarkDown的介绍这里不赘述。于我而言，不支持MarkDown解析的编辑器，我是绝对不会用的，Word就工作用用。。。为何呢？因为MarkDown太优雅了，在我看来，Word和MarkDown就像50岁的大妈和20岁的妙龄少女，写文档发博文用Word简直是遭罪，用MarkDown简直是享受，当然啦，纯属个人看法，不喜勿喷。。。</p><ul><li>图床</li></ul><p>说完了MarkDown和云的问题，有一个问题很明显，云上的数据文字可以，图片甚至视频怎么办？难道我还要买个云存储甚至是云服务器？当然不用啦！国内有些大公司还是相当良心的，先神秘一下，具体用什么，下面详细说😄</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>编辑器<ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cudHlwb3JhLmlv" title="https://www.typora.io">Typora<i class="fa fa-external-link"></i></span></li></ul></li><li>截图工具<ul><li>Windows：<span class="exturl" data-url="aHR0cHM6Ly9zbmlwLnFxLmNvbQ==" title="https://snip.qq.com">Snip<i class="fa fa-external-link"></i></span></li><li>macOS：<span class="exturl" data-url="aHR0cHM6Ly96aC54bmlwYXBwLmNvbQ==" title="https://zh.xnipapp.com">Xnip<i class="fa fa-external-link"></i></span></li></ul></li><li>图床<ul><li>Sina Weobo账号(Sina的微博平台提供了一个图床服务，自带cdn)</li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz" title="https://github.com/Molunerfinn/PicGo/releases">PicGo<i class="fa fa-external-link"></i></span></li></ul></li><li>云同步<ul><li><span class="exturl" data-url="aHR0cDovL25vdGUueW91ZGFvLmNvbQ==" title="http://note.youdao.com">有道云笔记<i class="fa fa-external-link"></i></span></li></ul></li></ul><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p>其他的都没什么好说的，说一下PicGo的配置吧！首先在新浪微博官网登录微博账号，然后打开<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vbWluaXB1Ymxpc2g=" title="https://weibo.com/minipublish">minipublish<i class="fa fa-external-link"></i></span>页面，如下图所示</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde3dq3hvj326w1e047w.jpg" alt></p><p>然后打开调试窗口，<code>Chrome</code>快捷键为<code>F12</code>，然后调到网络选项卡，如下图所示</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde59wlkyj326w1e0gzx.jpg" alt></p><p>点击<code>minipublish</code>，查看一下Cookie值如下图所示</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde6i4je7j326w1e0tpj.jpg" alt></p><p>选中Cookie后面那一串字符，拷贝一下，打开<code>PicGo</code>窗口，找到图床设置 -&gt; 新浪图床，在Cookie后面的输入框粘贴刚才的字符串，勾选cookie模式，点击确定 -&gt; 设为默认图床，如下图</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzde7rnurvj31eo0v847r.jpg" alt></p><p>这时候，用前文所说的截图工具或者自己喜欢的工具截图，然后按下刚刚设置的快捷键，图片就会上传到新浪微博的图床服务器，然后将图片的外链返回给剪贴板了。</p><p>在有道云随便建一个MarkDown文档，粘贴一下，如图</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzdem32mcej320w1e0nep.jpg" alt></p><p>文档保存后，有道云笔记会自动帮我们进行云同步，从此不必担心其3G的空间不够用了。</p><p>当然啦，快捷键根据个人习惯在PicGo设置里面自行定义吧。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      高效利用有道云笔记
    
    </summary>
    
      <category term="高效利用有道云笔记" scheme="https://iamzhl.top/categories/%E9%AB%98%E6%95%88%E5%88%A9%E7%94%A8%E6%9C%89%E9%81%93%E4%BA%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="有道云笔记" scheme="https://iamzhl.top/tags/%E6%9C%89%E9%81%93%E4%BA%91%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Picbed" scheme="https://iamzhl.top/tags/Picbed/"/>
    
      <category term="图床" scheme="https://iamzhl.top/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>TestLink 整合 LDAP 和 CAS 单点登录</title>
    <link href="https://iamzhl.top/TestLink-integrate-with-ldap-and-CAS.html"/>
    <id>https://iamzhl.top/TestLink-integrate-with-ldap-and-CAS.html</id>
    <published>2018-12-04T06:55:56.000Z</published>
    <updated>2019-03-11T16:21:49.903Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>TestLink 版本：2.18</li><li>TestLink URL：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wL3Rlc3RsaW5r" title="http://devops.iamzhl.top/testlink">http://devops.iamzhl.top/testlink<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改TestLink配置文件"><a href="#修改TestLink配置文件" class="headerlink" title="修改TestLink配置文件"></a>修改<code>TestLink</code>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/custom_config.inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>添加<code>LDAP</code>配置文件</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$tlCfg-&gt;authentication[<span class="string">'method'</span>] = <span class="string">'LDAP'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>] = <span class="keyword">array</span>();</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_server'</span>] = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_port'</span>] = <span class="string">'389'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_version'</span>] = <span class="string">'3'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_root_dn'</span>] = <span class="string">'dc=iamzhl,dc=top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_bind_dn'</span>] = <span class="string">'cn=Manager,dc=iamzhl,dc=top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_bind_passwd'</span>] = <span class="string">'123456'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_tls'</span>] = <span class="keyword">false</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_organization'</span>] = <span class="string">''</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_uid_field'</span>] = <span class="string">'uid'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_email_field'</span>] = <span class="string">'mail'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_firstname_field'</span>] = <span class="string">'givenname'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap'</span>][<span class="number">1</span>][<span class="string">'ldap_surname_field'</span>] = <span class="string">'sn'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_automatic_user_creation'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_email_field'</span>] = <span class="string">'mail'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_firstname_field'</span>] = <span class="string">'givenname'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'ldap_surname_field'</span>] = <span class="string">'sn'</span>;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>打开<code>TestLink</code>网址<code>http://devops.iamzhl.top/testlink</code></p></blockquote><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvp6j1abej328s1f8qb2.jpg" alt></p><p>如图，正常跳转到<code>TestLink</code>登录界面，输入<code>LDAP</code>服务器中的用户名密码后点击<code>Log in</code></p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvuh6h46uj328s1f8k01.jpg" alt></p><p>如图所示，登陆成功后正常的获取到了用户名，点击左上角的登出按钮，正常退出后跳转到了<code>TestLink</code>的登录界面</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvuj3kqkjj328s1f8gtv.jpg" alt></p><p>至此，<code>TestLink</code>整合<code>LDAP</code>完成。</p><h2 id="整合CAS单点登录"><a href="#整合CAS单点登录" class="headerlink" title="整合CAS单点登录"></a>整合<code>CAS</code>单点登录</h2><h3 id="添加依赖的phpCAS库文件"><a href="#添加依赖的phpCAS库文件" class="headerlink" title="添加依赖的phpCAS库文件"></a>添加依赖的<code>phpCAS</code>库文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://github.com/apereo/phpCAS/archive/1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># mv 1.3.6.tar.gz phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># tar zxvf phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># chown -R apache:apache phpCAS-1.3.6</span></span><br><span class="line"><span class="comment"># cp -arf phpCAS-1.3.6/source/CAS.php /var/www/html/testlink/lib/functions/</span></span><br><span class="line"><span class="comment"># cp -arf phpCAS-1.3.6/source/CAS /var/www/html/testlink/lib/functions/</span></span><br></pre></td></tr></table></figure><h3 id="修改TestLink配置文件-1"><a href="#修改TestLink配置文件-1" class="headerlink" title="修改TestLink配置文件"></a>修改<code>TestLink</code>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/custom_config.inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>添加<code>CAS</code>配置项</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** CAS server parameters */</span></span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_enable'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_name'</span>] = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_port'</span>] = <span class="number">8080</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_path'</span>] = <span class="string">'cas'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_enable'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_file'</span>] = <span class="string">'/var/logs/testlink/phpCAS.log'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_protocol'</span>] = <span class="string">'2.0'</span>;</span><br></pre></td></tr></table></figure><h3 id="修改登录界面"><a href="#修改登录界面" class="headerlink" title="修改登录界面"></a>修改登录界面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/login.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>switch($args-&gt;action)</code>分支选择语句段内找到<code>case &#39;loginform&#39;</code>部分，添加<code>CAS</code>的认证</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>($args-&gt;action) </span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'doLogin'</span>:</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'ajaxlogin'</span>:</span><br><span class="line">    doSessionStart(<span class="keyword">true</span>);</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// When doing ajax login we need to skip control regarding session already open</span></span><br><span class="line">    <span class="comment">// that we use when doing normal login.</span></span><br><span class="line">    <span class="comment">// If we do not proceed this way we will enter an infinite loop</span></span><br><span class="line">    $options = <span class="keyword">array</span>(<span class="string">'doSessionExistsCheck'</span> =&gt; ($args-&gt;action==<span class="string">'doLogin'</span>));</span><br><span class="line">    $op = doAuthorize($db,$args-&gt;login,$args-&gt;pwd,$options);</span><br><span class="line">    $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">    $gui-&gt;draw = <span class="keyword">true</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="string">'ajaxcheck'</span>:</span><br><span class="line">    processAjaxCheck($db);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="string">'oauth'</span>:</span><br><span class="line">    <span class="comment">//If code is empty then break</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">        renderLoginScreen($gui);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Switch between oauth providers</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">include_once</span>(<span class="string">'lib/functions/oauth_providers/'</span>.$_GET[<span class="string">'oauth'</span>].<span class="string">'.php'</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Oauth client doesn't exist"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $oau = config_get(<span class="string">'OAuthServers'</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($oau <span class="keyword">as</span> $oprov) &#123;</span><br><span class="line">      <span class="keyword">if</span> (strcmp($oprov[<span class="string">'oauth_name'</span>],$_GET[<span class="string">'oauth'</span>]) == <span class="number">0</span>)&#123;</span><br><span class="line">        $oauth_params = $oprov;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $user_token = oauth_get_token($oauth_params, $_GET[<span class="string">'code'</span>]);</span><br><span class="line">    <span class="keyword">if</span>($user_token-&gt;status[<span class="string">'status'</span>] == tl::OK) &#123;</span><br><span class="line">      doSessionStart(<span class="keyword">true</span>);</span><br><span class="line">      $op = doAuthorize($db,$user_token-&gt;options-&gt;user,<span class="string">'oauth'</span>,$user_token-&gt;options);</span><br><span class="line">      $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $gui-&gt;note = $user_token-&gt;status[<span class="string">'msg'</span>];</span><br><span class="line">        renderLoginScreen($gui);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="string">'loginform'</span>:</span><br><span class="line">  <span class="comment">//zhanghl start</span></span><br><span class="line">  <span class="keyword">if</span>($authCfg[<span class="string">'cas_enable'</span>])</span><br><span class="line">    &#123;    </span><br><span class="line">       <span class="keyword">if</span>($authCfg[<span class="string">'cas_debug_enable'</span>])</span><br><span class="line">       &#123;</span><br><span class="line">          phpCAS::setDebug($authCfg[<span class="string">'cas_debug_file'</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// Initialize phpCAS</span></span><br><span class="line">       phpCAS::client($authCfg[<span class="string">'cas_server_protocol'</span>], $authCfg[<span class="string">'cas_server_name'</span>], $authCfg[<span class="string">'cas_server_port'</span>], $authCfg[<span class="string">'cas_server_path'</span>]);</span><br><span class="line">       <span class="comment">// For production use set the CA certificate that is the issuer of the cert</span></span><br><span class="line">       <span class="comment">// on the CAS server and uncomment the line below</span></span><br><span class="line">       <span class="comment">// phpCAS::setCasServerCACert($cas_server_ca_cert_path);</span></span><br><span class="line">       </span><br><span class="line">       <span class="comment">// For quick testing you can disable SSL validation of the CAS server.</span></span><br><span class="line">       <span class="comment">// THIS SETTING IS NOT RECOMMENDED FOR PRODUCTION.</span></span><br><span class="line">       <span class="comment">// VALIDATING THE CAS SERVER IS CRUCIAL TO THE SECURITY OF THE CAS PROTOCOL!</span></span><br><span class="line">       phpCAS::setNoCasServerValidation();</span><br><span class="line">               </span><br><span class="line">       <span class="comment">// Override the validation url for any (ST and PT) CAS 2.0 validation</span></span><br><span class="line">       <span class="comment">//phpCAS::setServerProxyValidateURL('http://devops.iamzhl.top:8080/cas/proxyValidate');</span></span><br><span class="line">               </span><br><span class="line">       <span class="comment">// Override the validation url for any CAS 1.0 validation</span></span><br><span class="line">       <span class="comment">//phpCAS::setServerServiceValidateURL('http://devops.iamzhl.top:8080/cas/serviceValidate');</span></span><br><span class="line">              </span><br><span class="line">       phpCAS::handleLogoutRequests();</span><br><span class="line">       phpCAS::forceAuthentication();</span><br><span class="line">       $options = <span class="keyword">array</span>(<span class="string">'doSessionExistsCheck'</span> =&gt; ($args-&gt;action==<span class="string">'doLogin'</span>));</span><br><span class="line">       $op = doCASAuthorize($db,$options);</span><br><span class="line">       $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">//zhanghl end</span></span><br><span class="line">    $doRenderLoginScreen = <span class="keyword">true</span>;</span><br><span class="line">    $gui-&gt;draw = <span class="keyword">true</span>;</span><br><span class="line">    $op = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// unfortunatelly we use $args-&gt;note in order to do some logic.</span></span><br><span class="line">    <span class="keyword">if</span>( ($args-&gt;note=trim($args-&gt;note)) == <span class="string">""</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>( $gui-&gt;authCfg[<span class="string">'SSO_enabled'</span>] )</span><br><span class="line">      &#123;</span><br><span class="line">        doSessionStart(<span class="keyword">true</span>);</span><br><span class="line">        $doAuthPostProcess = <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span> ($gui-&gt;authCfg[<span class="string">'SSO_method'</span>]) </span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'CLIENT_CERTIFICATE'</span>:</span><br><span class="line">            $op = doSSOClientCertificate($db,$_SERVER,$gui-&gt;authCfg);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">case</span> <span class="string">'WEBSERVER_VAR'</span>:</span><br><span class="line">            <span class="comment">//DEBUGsyslogOnCloud('Trying to execute SSO using SAML');</span></span><br><span class="line">            $op = doSSOWebServerVar($db,$gui-&gt;authCfg);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//zhanghl start</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//zhanghl end</span></span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在<code>init_gui</code>函数内找到<code>switch($args-&gt;note)</code>分支语句，在<code>expired</code>分支下添加一行重定向调用</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>($args-&gt;note) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'expired'</span>:</span><br><span class="line">      <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION)) &#123;</span><br><span class="line">        session_start();</span><br><span class="line">      &#125;</span><br><span class="line">      session_unset();</span><br><span class="line">      session_destroy();</span><br><span class="line">      $gui-&gt;note = lang_get(<span class="string">'session_expired'</span>);</span><br><span class="line">      $gui-&gt;reqURI = <span class="keyword">null</span>;</span><br><span class="line">      <span class="comment">// 添加重定向调用</span></span><br><span class="line">      redirect(TL_BASE_HREF .<span class="string">"login.php?destination="</span>.$args-&gt;destination);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'first'</span>:</span><br><span class="line">      $gui-&gt;note = lang_get(<span class="string">'your_first_login'</span>);</span><br><span class="line">      $gui-&gt;reqURI = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">'lost'</span>:</span><br><span class="line">      $gui-&gt;note = lang_get(<span class="string">'passwd_lost'</span>);</span><br><span class="line">      $gui-&gt;reqURI = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      $gui-&gt;note = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="修改登出界面"><a href="#修改登出界面" class="headerlink" title="修改登出界面"></a>修改登出界面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /var/www/html/testlink/logout.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>$authCfg = config_get(&#39;authentication&#39;);</code>语句之后添加<code>CAS</code>的登出处理</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($authCfg[<span class="string">'cas_enable'</span>])</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span>($authCfg[<span class="string">'cas_debug_enable'</span>])</span><br><span class="line">   &#123;</span><br><span class="line">      phpCAS::setDebug($authCfg[<span class="string">'cas_debug_file'</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// Initialize phpCAS</span></span><br><span class="line">   phpCAS::client($authCfg[<span class="string">'cas_server_protocol'</span>], $authCfg[<span class="string">'cas_server_name'</span>], $authCfg[<span class="string">'cas_server_port'</span>], $authCfg[<span class="string">'cas_server_path'</span>]);</span><br><span class="line">   phpCAS::logout();</span><br><span class="line">&#125;</span><br><span class="line">redirect(<span class="string">"login.php?note=logout"</span>);</span><br></pre></td></tr></table></figure><h3 id="修改common-php全局引用文件"><a href="#修改common-php全局引用文件" class="headerlink" title="修改common.php全局引用文件"></a>修改<code>common.php</code>全局引用文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/lib/functions/common.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在<code>require_once(&#39;tlsmarty.inc.php&#39;);</code>引用的前面增加对<code>CAS</code>的引用</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** TestLink CAS Authentication Ref */</span></span><br><span class="line">$authCfg = config_get(<span class="string">'authentication'</span>);</span><br><span class="line"><span class="keyword">if</span>($authCfg[<span class="string">'cas_enable'</span>])</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Load the CAS lib</span></span><br><span class="line">   <span class="keyword">require_once</span> <span class="string">'CAS.php'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvnthnmyaj31p818kn8o.jpg" alt></p><h3 id="修改认证函数"><a href="#修改认证函数" class="headerlink" title="修改认证函数"></a>修改认证函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/lib/functions/doAuthorize.php</span></span><br></pre></td></tr></table></figure><blockquote><p>在开头<code>require_once</code>语句的后面添加<code>CAS</code>认证函数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// zhanghl start</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doCASAuthorize</span><span class="params">(&amp;$db,$options=null)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">global</span> $g_tlLogger;</span><br><span class="line">   $result = <span class="keyword">array</span>(<span class="string">'status'</span> =&gt; tl::ERROR, <span class="string">'msg'</span> =&gt; <span class="keyword">null</span>);</span><br><span class="line">   $user = <span class="keyword">new</span> tlUser();</span><br><span class="line">   $user-&gt;login = $_SESSION[<span class="string">'phpCAS'</span>][<span class="string">'user'</span>];</span><br><span class="line">   $login_exists = ($user-&gt;readFromDB($db,tlUser::USER_O_SEARCH_BYLOGIN) &gt;= tl::OK);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(!$login_exists)</span><br><span class="line">   &#123;</span><br><span class="line">      $user = <span class="keyword">new</span> tlUser();</span><br><span class="line">      $user-&gt;login = $_SESSION[<span class="string">'phpCAS'</span>][<span class="string">'user'</span>];</span><br><span class="line">      $user-&gt;isActive = <span class="keyword">true</span>;</span><br><span class="line">      $user-&gt;authentication = <span class="string">'LDAP'</span>;  <span class="comment">// force for auth_does_password_match</span></span><br><span class="line">      $user-&gt;setPassword($user-&gt;login);  <span class="comment">// write password on DB anyway</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//$user-&gt;emailAddress = $_SESSION['phpCAS']['attributes']['mail'];</span></span><br><span class="line">   <span class="comment">//$user-&gt;firstName = $_SESSION['phpCAS']['attributes']['sn'];</span></span><br><span class="line">   <span class="comment">//$user-&gt;lastName = $_SESSION['phpCAS']['attributes']['givenName'];</span></span><br><span class="line">   $doLogin = ($user-&gt;writeToDB($db) == tl::OK);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>( $doLogin )</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">// Need to do set COOKIE following Mantis model</span></span><br><span class="line">      $auth_cookie_name = config_get(<span class="string">'auth_cookie'</span>);</span><br><span class="line">      $expireOnBrowserClose=<span class="keyword">false</span>;</span><br><span class="line">      setcookie($auth_cookie_name,$user-&gt;getSecurityCookie(),$expireOnBrowserClose,<span class="string">'/'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Disallow two sessions within one browser</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'currentUser'</span>]) &amp;&amp; !is_null($_SESSION[<span class="string">'currentUser'</span>]))</span><br><span class="line">      &#123;</span><br><span class="line">         $result[<span class="string">'msg'</span>] = lang_get(<span class="string">'login_msg_session_exists1'</span>) .</span><br><span class="line">            <span class="string">' &lt;a style="color:white;" href="logout.php"&gt;'</span> .</span><br><span class="line">            lang_get(<span class="string">'logout_link'</span>) . <span class="string">'&lt;/a&gt;'</span> . lang_get(<span class="string">'login_msg_session_exists2'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">// Setting user's session information</span></span><br><span class="line">         $_SESSION[<span class="string">'currentUser'</span>] = $user;</span><br><span class="line">         $_SESSION[<span class="string">'lastActivity'</span>] = time();</span><br><span class="line"></span><br><span class="line">         $g_tlLogger-&gt;endTransaction();</span><br><span class="line">         $g_tlLogger-&gt;startTransaction();</span><br><span class="line">         setUserSession($db,$user-&gt;login, $user-&gt;dbID,$user-&gt;globalRoleID,$user-&gt;emailAddress,$user-&gt;locale,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">         $result[<span class="string">'status'</span>] = tl::OK;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// zhanghl end</span></span><br></pre></td></tr></table></figure><h3 id="修改全局配置文件-可选"><a href="#修改全局配置文件-可选" class="headerlink" title="修改全局配置文件 (可选)"></a>修改全局配置文件 (可选)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/config.inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>增加<code>CAS</code>认证属性</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** CAS server properties */</span></span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_enable'</span>] = <span class="keyword">false</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_name'</span>] = <span class="string">''</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_port'</span>] = <span class="number">8080</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_path'</span>] = <span class="string">'cas'</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_enable'</span>] = <span class="keyword">true</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_debug_file'</span>] = <span class="string">''</span>;</span><br><span class="line">$tlCfg-&gt;authentication[<span class="string">'cas_server_protocol'</span>] = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><p><strong><em>Note：此选项用以设置默认属性值，主要用来日后查阅，可以不写，<code>/var/www/html/testlink/custom_config.inc.php</code>文件相同的属性配置会覆盖生效。</em></strong></p><h3 id="修改CAS的Client-php启用http连接-根据个人CAS服务器来定"><a href="#修改CAS的Client-php启用http连接-根据个人CAS服务器来定" class="headerlink" title="修改CAS的Client.php启用http连接(根据个人CAS服务器来定)"></a>修改<code>CAS</code>的<code>Client.php</code>启用<code>http</code>连接(根据个人<code>CAS</code>服务器来定)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/testlink/lib/functions/CAS/Client.php</span></span><br></pre></td></tr></table></figure><blockquote><p>将如下几个函数中的<code>https</code>改为<code>http</code>即可</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getServerBaseURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// the URL is build only when needed</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>]) ) &#123;</span><br><span class="line">        <span class="comment">// $this-&gt;_server['base_url'] = 'https://' . $this-&gt;_getServerHostname();</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] = <span class="string">'http://'</span> . <span class="keyword">$this</span>-&gt;_getServerHostname();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_getServerPort()!=<span class="number">443</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="string">':'</span></span><br><span class="line">                .<span class="keyword">$this</span>-&gt;_getServerPort();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="keyword">$this</span>-&gt;_getServerURI();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getCallbackURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// the URL is built when needed only</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_callback_url) ) &#123;</span><br><span class="line">        $final_uri = <span class="string">''</span>;</span><br><span class="line">        <span class="comment">// remove the ticket if present in the URL</span></span><br><span class="line">        <span class="comment">// $final_uri = 'https://';</span></span><br><span class="line">        $final_uri = <span class="string">'http://'</span>;</span><br><span class="line">        $final_uri .= <span class="keyword">$this</span>-&gt;_getClientUrl();</span><br><span class="line">        $request_uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">        $request_uri = preg_replace(<span class="string">'/\?.*$/'</span>, <span class="string">''</span>, $request_uri);</span><br><span class="line">        $final_uri .= $request_uri;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_callback_url = $final_uri;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_callback_url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phpCAS::traceBegin();</span><br><span class="line">    <span class="comment">// the URL is built when needed only</span></span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_url) ) &#123;</span><br><span class="line">        $final_uri = <span class="string">''</span>;</span><br><span class="line">        <span class="comment">// remove the ticket if present in the URL</span></span><br><span class="line">        <span class="comment">// $final_uri = ($this-&gt;_isHttps()) ? 'https' : 'http';</span></span><br><span class="line">        $final_uri = (<span class="keyword">$this</span>-&gt;_isHttps()) ? <span class="string">'http'</span> : <span class="string">'http'</span>;</span><br><span class="line">        $final_uri .= <span class="string">'://'</span>;</span><br><span class="line"></span><br><span class="line">        $final_uri .= <span class="keyword">$this</span>-&gt;_getClientUrl();</span><br><span class="line">        $request_uri= explode(<span class="string">'?'</span>, $_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="number">2</span>);</span><br><span class="line">        $final_uri.= $request_uri[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($request_uri[<span class="number">1</span>]) &amp;&amp; $request_uri[<span class="number">1</span>]) &#123;</span><br><span class="line">            $query_string= <span class="keyword">$this</span>-&gt;_removeParameterFromQueryString(<span class="string">'ticket'</span>, $request_uri[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// If the query string still has anything left,</span></span><br><span class="line">            <span class="comment">// append it to the final URI</span></span><br><span class="line">            <span class="keyword">if</span> ($query_string !== <span class="string">''</span>) &#123;</span><br><span class="line">                $final_uri.= <span class="string">"?$query_string"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        phpCAS::trace(<span class="string">"Final URI: $final_uri"</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setURL($final_uri);</span><br><span class="line">    &#125;</span><br><span class="line">    phpCAS::traceEnd(<span class="keyword">$this</span>-&gt;_url);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><blockquote><p>新建<code>debug</code>调试目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/testlink</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/log/testlink</span></span><br></pre></td></tr></table></figure><blockquote><p>打开<code>TestLink</code>网址<code>http://devops.iamzhl.top/testlink</code></p></blockquote><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvougi1woj32221fcdv4.jpg" alt></p><p>如图所示，正常跳转到<code>CAS</code>的登录界面，地址变成了<code>http://devops.iamzhl.top:8080/cas/login?service=http%3A%2F%2Fdevops.iamzhl.top%2Ftestlink%2Flogin.php</code>，输入用户名密码后点击登录</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fxvuh6h46uj328s1f8k01.jpg" alt></p><p>如图登陆成功后正常获取用户名，点击左上角的登出按钮后，正常退出到<code>CAS</code>登出页面</p><p><img src="/Users/canvas/Library/Application Support/typora-user-images/image-20181205173735167.png" alt="image-20181205173735167"></p><p>至此，<code>TestLink</code>整合<code>CAS</code>单点登录完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      TestLink 整合 LDAP 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://iamzhl.top/tags/CAS/"/>
    
      <category term="LDAP" scheme="https://iamzhl.top/tags/LDAP/"/>
    
      <category term="TestLink" scheme="https://iamzhl.top/tags/TestLink/"/>
    
  </entry>
  
  <entry>
    <title>MantisBT 整合 LDAP 和 CAS 单点登录</title>
    <link href="https://iamzhl.top/MantisBT-integrate-with-ldap-and-CAS.html"/>
    <id>https://iamzhl.top/MantisBT-integrate-with-ldap-and-CAS.html</id>
    <published>2018-12-03T07:07:11.000Z</published>
    <updated>2019-03-11T16:21:49.897Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>MantisBT 版本：2.18</li><li>Mantis URL：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wL21hbnRpcw==" title="http://devops.iamzhl.top/mantis">http://devops.iamzhl.top/mantis<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改MantisBT配置文件"><a href="#修改MantisBT配置文件" class="headerlink" title="修改MantisBT配置文件"></a>修改<code>MantisBT</code>配置文件</h3><blockquote><p>添加以下配置项</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MantisBT Authentication and LDAP Settings #</span></span><br><span class="line">$g_login_method = LDAP;</span><br><span class="line">$g_reauthentication = ON;</span><br><span class="line">$g_reauthentication_expiry = TOKEN_EXPIRY_AUTHENTICATED;</span><br><span class="line">$g_ldap_server = <span class="string">'ldap://devops.iamzhl.top:389'</span>;</span><br><span class="line">$g_ldap_root_dn = <span class="string">'ou=People,dc=iamzhl,dc=top'</span>;</span><br><span class="line">$g_ldap_protocol_version = <span class="number">3</span>;</span><br><span class="line">$g_ldap_organization = <span class="string">''</span>;</span><br><span class="line">$g_ldap_bind_dn = <span class="string">'cn=Manager,dc=iamzhl,dc=top'</span>;</span><br><span class="line">$g_ldap_bind_passwd = <span class="string">'123456'</span>;</span><br><span class="line">$g_ldap_uid_field = <span class="string">'uid'</span>;</span><br><span class="line">$g_ldap_realname_field = <span class="string">'cn'</span>;</span><br><span class="line">$g_use_ldap_realname = ON;</span><br><span class="line">$g_use_ldap_email = ON;</span><br></pre></td></tr></table></figure><p>打开<code>MantisBT</code>网址，输入用户名密码点击登录</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/dd/a754582a7218fd2860d31fb543c667.jpg" alt></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/07/158dfd797dce0fa01335dd8d9b5085.jpg" alt></p><p>登陆成功后，正常获取用户名</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/5d/e2fd0f937861208615ce61fae90423.jpg" alt></p><p>点击右上角的用户名 -&gt; 注销，会正常退出并跳转到登录界面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/5e/e198803ba7693b67b5e6c5fc075ab5.jpg" alt></p><p>至此，<code>MantisBT</code>整合<code>LDAP</code>完成。</p><h2 id="整合-CAS-单点登录"><a href="#整合-CAS-单点登录" class="headerlink" title="整合 CAS 单点登录"></a>整合 CAS 单点登录</h2><h3 id="下载phpCAS放到MantisBT下"><a href="#下载phpCAS放到MantisBT下" class="headerlink" title="下载phpCAS放到MantisBT下"></a>下载<code>phpCAS</code>放到<code>MantisBT</code>下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://github.com/apereo/phpCAS/archive/1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># mv 1.3.6.tar.gz phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># tar zxvf phpCAS-1.3.6.tar.gz</span></span><br><span class="line"><span class="comment"># chown -R apache:apache phpCAS-1.3.6</span></span><br><span class="line"><span class="comment"># cp -arf phpCAS-1.3.6 /var/www/html/mantis/phpCAS</span></span><br></pre></td></tr></table></figure><h3 id="修改MantisBT配置文件-1"><a href="#修改MantisBT配置文件-1" class="headerlink" title="修改MantisBT配置文件"></a>修改<code>MantisBT</code>配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/config/config_inc.php</span></span><br></pre></td></tr></table></figure><blockquote><p>添加<code>CAS</code>认证需要的变量(请按照自己的<code>LDAP</code>服务器进行修改)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MantisBT Authentication With CAS Settings #</span></span><br><span class="line">$g_login_method = CAS;</span><br><span class="line">$g_cas_server = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$g_cas_port = <span class="number">8080</span>;</span><br><span class="line">$g_cas_uri = <span class="string">'/cas'</span>;</span><br><span class="line">$g_cas_validate = <span class="string">''</span>;</span><br><span class="line">$g_cas_version = <span class="string">'2.0'</span>;</span><br><span class="line">$g_cas_debug = <span class="string">'/var/www/html/mantis/cas.log'</span>;</span><br><span class="line">$g_cas_saml_attributes = OFF;</span><br><span class="line">$g_cas_saml_map = <span class="keyword">array</span>( <span class="string">'name'</span> =&gt; <span class="string">''</span>, <span class="string">'mail'</span> =&gt; <span class="string">''</span> );</span><br><span class="line">$g_cas_use_ldap = ON;</span><br><span class="line">$g_ldap_mantis_uid  = <span class="string">'uid'</span>;</span><br><span class="line">$g_cas_ldap_update  = OFF;</span><br><span class="line">$g_cas_ldap_update_fields = <span class="string">''</span>;</span><br><span class="line">$g_cas_ldap_update_map    = <span class="string">''</span>;</span><br><span class="line">$g_ldap_language_field = <span class="string">''</span>;</span><br><span class="line">$g_ldap_language_keys = <span class="string">''</span>;</span><br></pre></td></tr></table></figure><h3 id="修改登录页面"><a href="#修改登录页面" class="headerlink" title="修改登录页面"></a>修改登录页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/login_page.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在文件开头的 require_once 部分增加对 phpCAS 的引入</span></span><br><span class="line"><span class="keyword">require_once</span>( <span class="string">'/var/www/html/mantis/phpCAS/login_cas.php'</span> );</span><br><span class="line"><span class="comment">// 在 $f_username 变量的定义之前添加判断语句，当检测到用户已经认证时，跳转到主页</span></span><br><span class="line"><span class="keyword">if</span>( auth_is_user_authenticated() &amp;&amp; !current_user_is_anonymous() ) &#123;</span><br><span class="line">print_header_redirect( config_get( <span class="string">'default_home_page'</span> ) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/login.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在判断变量 f_install 的判断语句之后添加下面的判断语句来判断验证方式，若为 CAS ，则利用 auth_cas_get_name 函数来处理</span></span><br><span class="line"><span class="keyword">if</span> ( CAS == config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line"><span class="comment"># This will detour to the CAS login page if needed</span></span><br><span class="line">$f_password = <span class="string">''</span>;</span><br><span class="line">$f_username = auth_cas_get_name();</span><br><span class="line"><span class="comment"># User is always authenticated by this point</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/login_password_page.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在 $f_username 变量的定义之前添加判断语句，当检测到用户已经认证时，跳转到主页</span></span><br><span class="line"><span class="keyword">if</span>( auth_is_user_authenticated() &amp;&amp; !current_user_is_anonymous() ) &#123;</span><br><span class="line">print_header_redirect( config_get( <span class="string">'default_home_page'</span> ) );</span><br><span class="line">&#125;</span><br><span class="line">$f_username              = gpc_get_string( <span class="string">'username'</span>, <span class="string">''</span> );</span><br><span class="line"><span class="comment"># zhanghl start</span></span><br><span class="line"><span class="keyword">if</span>( $f_username == <span class="string">''</span> ) &#123;</span><br><span class="line">        $f_username = $staffid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># zhanghl end</span></span><br></pre></td></tr></table></figure><h3 id="修改登出页面"><a href="#修改登出页面" class="headerlink" title="修改登出页面"></a>修改登出页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/logout_page.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在文件开头的 require_once 部分增加对 phpCAS 的引入</span></span><br><span class="line"><span class="keyword">require_once</span>( <span class="string">'/var/www/html/mantis/phpCAS/login_cas.php'</span> );</span><br><span class="line"><span class="comment"># Cache the current logout redirect page as it will be cleared by auth_logout()</span></span><br><span class="line"><span class="comment">//$t_logout_redirect = auth_logout_redirect_page();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//auth_logout();</span></span><br><span class="line">phpCAS::setDebug();</span><br><span class="line">phpCAS::setVerbose(<span class="keyword">true</span>);</span><br><span class="line">phpCAS::handleLogoutRequests();</span><br><span class="line">phpCAS::logout();</span><br><span class="line"></span><br><span class="line"><span class="comment">//print_header_redirect( $t_logout_redirect, true, false );</span></span><br><span class="line">print_header_redirect( config_get( <span class="string">'logout_redirect_page'</span> ), <span class="keyword">true</span>, <span class="keyword">false</span> );</span><br></pre></td></tr></table></figure><h3 id="修改验证逻辑"><a href="#修改验证逻辑" class="headerlink" title="修改验证逻辑"></a>修改验证逻辑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/core/authentication_api.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在变量 g_cache_current_user_id 的定义后面添加以下函数，定义 CAS 的登录逻辑</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Initialize phpCAS.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment"># phpCAS must be installed in the include path</span></span><br><span class="line">       <span class="comment"># or in the Mantis directory.</span></span><br><span class="line">       <span class="keyword">require_once</span>(<span class="string">'/var/www/html/mantis/phpCAS/CAS.php'</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">static</span> $s_initialized=<span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (! $s_initialized ) &#123;</span><br><span class="line">               phpCAS::setDebug( config_get( <span class="string">'cas_debug'</span> ) );</span><br><span class="line">              <span class="comment">## These should be set in config_inc.php</span></span><br><span class="line">               $t_server_version = config_get( <span class="string">'cas_version'</span> );</span><br><span class="line">               $t_server_cas_server = config_get( <span class="string">'cas_server'</span> );</span><br><span class="line">               $t_server_port = config_get( <span class="string">'cas_port'</span> );</span><br><span class="line">               $t_server_uri = config_get( <span class="string">'cas_uri'</span> );</span><br><span class="line">               $t_start_session = (boolean)<span class="keyword">FALSE</span>; <span class="comment"># Mantis takes care of its own session</span></span><br><span class="line"></span><br><span class="line">               phpCAS::client($t_server_version, $t_server_cas_server, $t_server_port, $t_server_uri, $t_start_session);</span><br><span class="line">               <span class="keyword">if</span> ($t_server_version == <span class="string">"S1"</span>)</span><br><span class="line">                       phpCAS::setServerSamlValidateURL( config_get( <span class="string">'cas_validate'</span> ) );</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                       phpCAS::setServerProxyValidateURL( config_get( <span class="string">'cas_validate'</span> ) );</span><br><span class="line">               <span class="keyword">if</span> (method_exists(<span class="string">'phpCAS'</span>, <span class="string">'setNoCasServerValidation'</span>)) &#123;</span><br><span class="line">                       <span class="comment">// no SSL validation for the CAS server</span></span><br><span class="line">                       phpCAS::setNoCasServerValidation();</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               $s_initialized = <span class="keyword">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Fetches the user's CAS name, authenticating if needed.</span></span><br><span class="line"><span class="comment">* Can translate CAS login name to Mantis username through LDAP.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_get_name</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="comment"># Get CAS username from phpCAS</span></span><br><span class="line">       auth_cas_init();</span><br><span class="line">       phpCAS::forceAuthentication();</span><br><span class="line">       $t_cas_id = phpCAS::getUser();</span><br><span class="line">       $t_cas_attribs = phpCAS::getAttributes();</span><br><span class="line"></span><br><span class="line">       <span class="comment"># If needed, translate the CAS username through LDAP</span></span><br><span class="line">       $t_username = $t_cas_id;</span><br><span class="line">       <span class="keyword">if</span> (config_get( <span class="string">'cas_use_ldap'</span>, <span class="keyword">false</span> )) &#123;</span><br><span class="line">               $t_username = auth_cas_ldap_translate( $t_cas_id );</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">elseif</span> (config_get( <span class="string">'cas_saml_attributes'</span>, <span class="keyword">false</span> )) &#123;</span><br><span class="line">               $t_cas_attribmap = config_get( <span class="string">'cas_saml_map'</span>, <span class="keyword">array</span>() );</span><br><span class="line">               $t_cas_attrib_name = $t_cas_attribs[$t_cas_attribmap[<span class="string">'name'</span>]];</span><br><span class="line">               $t_cas_attrib_mail = $t_cas_attribs[$t_cas_attribmap[<span class="string">'mail'</span>]];</span><br><span class="line">               <span class="keyword">if</span> ( user_get_id_by_name($t_cas_id) == <span class="keyword">false</span> ) &#123;</span><br><span class="line">                       user_create( $t_cas_id, <span class="string">''</span>, $t_cas_attrib_mail, <span class="keyword">null</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, $t_cas_attrib_name );</span><br><span class="line">       &#125;</span><br><span class="line">       &#125;</span><br><span class="line">                               </span><br><span class="line">       <span class="keyword">return</span> $t_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Takes an ID string, and looks up the LDAP directory to find</span></span><br><span class="line"><span class="comment">* the matching username for Mantis.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Optionally, also update the user information in the Mantis user</span></span><br><span class="line"><span class="comment">* table.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $p_cas_id string Typically, the username given by phpCAS.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $p_update_user bool Whether or not to update user details from LDAP.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_ldap_translate</span><span class="params">( $p_cas_id, $p_update_user=<span class="string">''</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment"># Please make sure the Mantis CAS and LDAP settings are set in config_inc.php</span></span><br><span class="line"></span><br><span class="line">       $t_ldap_organization    = config_get( <span class="string">'ldap_organization'</span> );</span><br><span class="line">       $t_ldap_root_dn         = config_get( <span class="string">'ldap_root_dn'</span> );</span><br><span class="line"></span><br><span class="line">       <span class="comment"># Required fields in LDAP for CAS</span></span><br><span class="line">       $t_ldap_language_field = config_get( <span class="string">'ldap_language_field'</span>, <span class="string">''</span> );</span><br><span class="line">       $t_ldap_uid_field = config_get( <span class="string">'ldap_uid_field'</span>, <span class="string">'uid'</span> ) ;</span><br><span class="line">       $t_ldap_mantis_uid = config_get( <span class="string">'ldap_mantis_uid'</span>, <span class="string">'uid'</span> );</span><br><span class="line">       $t_ldap_required = <span class="keyword">array</span>( $t_ldap_uid_field, $t_ldap_mantis_uid, <span class="string">'dn'</span> );</span><br><span class="line">       <span class="keyword">if</span> ($t_ldap_language_field) &#123;</span><br><span class="line">               <span class="comment">// Add language field to attributes list only if it is configured.</span></span><br><span class="line">               $t_ldap_required[] = $t_ldap_language_field;</span><br><span class="line">       &#125;</span><br><span class="line">       $t_ldap_required = array_combine( $t_ldap_required, $t_ldap_required );</span><br><span class="line"></span><br><span class="line">       <span class="comment"># User-defined fields to fetch from LDAP...</span></span><br><span class="line">       $t_ldap_fields = explode( <span class="string">','</span>, config_get( <span class="string">'cas_ldap_update_fields'</span> ) );</span><br><span class="line">       $t_ldap_fields = array_combine( $t_ldap_fields, $t_ldap_fields );</span><br><span class="line">       <span class="comment"># ...which are mapped to Mantis user fields</span></span><br><span class="line">       $t_ldap_map = explode( <span class="string">','</span>, config_get( <span class="string">'cas_ldap_update_map'</span> ) );</span><br><span class="line">       $t_ldap_map = array_combine( $t_ldap_map, $t_ldap_map );</span><br><span class="line"></span><br><span class="line">       <span class="comment"># Build LDAP search filter, attribute list from CAS ID</span></span><br><span class="line">       $t_search_filter = <span class="string">"(&amp;$t_ldap_organization($t_ldap_uid_field=$p_cas_id))"</span>;</span><br><span class="line">       $t_search_attrs = array_values($t_ldap_required + $t_ldap_fields);      <span class="comment"># array union</span></span><br><span class="line"></span><br><span class="line">       <span class="comment"># Use Mantis ldap_api to connect to LDAP</span></span><br><span class="line">       $t_ds = ldap_connect_bind();</span><br><span class="line">       $t_sr   = ldap_search( $t_ds, $t_ldap_root_dn, $t_search_filter, $t_search_attrs );</span><br><span class="line">       $t_info = ldap_get_entries( $t_ds, $t_sr );</span><br><span class="line">       <span class="comment"># Parse the LDAP entry to find the Mantis username</span></span><br><span class="line">       <span class="keyword">if</span> ( $t_info ) &#123;</span><br><span class="line">               <span class="comment"># Get Mantis username</span></span><br><span class="line">               $t_username = $t_info[<span class="number">0</span>][$t_ldap_mantis_uid][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">               <span class="comment"># @@@ The fact that we got here means the user is authenticated</span></span><br><span class="line">               <span class="comment"># @@@ by CAS, and has an LDAP entry.</span></span><br><span class="line">               <span class="comment"># @@@ We might as well update other user details since we are here.</span></span><br><span class="line"></span><br><span class="line">               <span class="comment"># If no argument given, check settings</span></span><br><span class="line">               <span class="keyword">if</span> ( <span class="string">''</span> == $p_update_user ) &#123;</span><br><span class="line">                       $p_update_user = config_get( <span class="string">'cas_ldap_update'</span>, <span class="keyword">FALSE</span> );</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment"># If there's a user record, then update it</span></span><br><span class="line">               <span class="keyword">if</span> ( $p_update_user ) &#123;</span><br><span class="line">                       <span class="comment"># Only proceed if the field map arrays are the same length</span></span><br><span class="line">                       $t_field_map = array_combine( $t_ldap_fields, $t_ldap_map );</span><br><span class="line">                       <span class="keyword">if</span> ($t_field_map) &#123;</span><br><span class="line">                               <span class="comment"># If user is new, then we must create their account before updating it</span></span><br><span class="line">                               <span class="comment"># @@@ ( make sure $g_allow_blank_email == ON )</span></span><br><span class="line">                               $t_userid = user_get_id_by_name($t_username);</span><br><span class="line">                               <span class="keyword">if</span> ( <span class="keyword">false</span> == $t_userid ) &#123;</span><br><span class="line">                                       user_create( $t_username, <span class="string">''</span> );</span><br><span class="line">                                       <span class="comment"># @@@ Wow, this is pretty lame</span></span><br><span class="line">                                       $t_userid = user_get_id_by_name($t_username);</span><br><span class="line">                               &#125;</span><br><span class="line">                               <span class="comment"># @@@ maybe we can optimize this to write all fields at once?</span></span><br><span class="line">                             <span class="keyword">foreach</span> ( $t_field_map <span class="keyword">as</span> $key=&gt;$t_userfield ) &#123;</span><br><span class="line">                                     <span class="keyword">if</span> (<span class="keyword">isset</span>($t_info[<span class="number">0</span>][$key][<span class="number">0</span>])) &#123;</span><br><span class="line">                                             user_set_field( $t_userid, $t_userfield, $t_info[<span class="number">0</span>][$key][<span class="number">0</span>] );</span><br><span class="line">                                     &#125;</span><br><span class="line">                             &#125;</span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                       <span class="comment">// Update user's overall language preference</span></span><br><span class="line">                       <span class="keyword">if</span> ($t_ldap_language_field) &#123;</span><br><span class="line">                               $t_language = $t_info[<span class="number">0</span>][$t_ldap_language_field][<span class="number">0</span>];</span><br><span class="line">                               <span class="comment">// Map the LDAP language field to Mantis' language field if needed</span></span><br><span class="line">                               $t_language_keys = config_get( <span class="string">'ldap_language_keys'</span>, <span class="string">''</span>);</span><br><span class="line">                               $t_language_values = config_get( <span class="string">'ldap_language_values'</span>, <span class="string">''</span>);</span><br><span class="line">                               $t_language_map = array_combine(</span><br><span class="line">                                       explode(<span class="string">','</span>, $t_language_keys),</span><br><span class="line">                                       explode(<span class="string">','</span>, $t_language_values)</span><br><span class="line">                               );</span><br><span class="line">                               <span class="keyword">if</span> (<span class="keyword">isset</span>($t_language_map[$t_language])) &#123;</span><br><span class="line">                                       $t_language = $t_language_map[$t_language];</span><br><span class="line">                               &#125;</span><br><span class="line">                               user_pref_set_pref($t_userid, <span class="string">'language'</span>, $t_language);</span><br><span class="line">                       &#125;</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       ldap_free_result( $t_sr );</span><br><span class="line">       ldap_unbind( $t_ds );</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> $t_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Logs out of CAS, redirecting to Mantis on re-login.</span></span><br><span class="line"><span class="comment">* User should already be logged out of Mantis by the time this is called.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> auth_logout()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_cas_logout</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       $t_path = config_get(<span class="string">'path'</span>);</span><br><span class="line">       auth_cas_init();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (method_Exists(<span class="string">'phpCAS'</span>, <span class="string">'logoutWithUrl'</span>)) &#123;</span><br><span class="line">               phpCAS::logoutWithUrl($t_path);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               phpCAS::logout($t_path);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// zhanghl end</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改 auth_auto_create_user 函数实现 CAS 自动创建用户</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_auto_create_user</span><span class="params">( $p_username, $p_password )</span> </span>&#123;</span><br><span class="line">$t_login_method = config_get_global( <span class="string">'login_method'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// if( $t_login_method == BASIC_AUTH ) &#123;</span></span><br><span class="line"><span class="keyword">if</span> ( in_array( $t_login_method, <span class="keyword">array</span>( BASIC_AUTH, CAS ) ) ) &#123;</span><br><span class="line"><span class="comment"># attempt to create the user if using BASIC_AUTH or CAS</span></span><br><span class="line">$t_auto_create = <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>( $t_login_method == LDAP &amp;&amp; ldap_authenticate_by_username( $p_username, $p_password ) ) &#123;</span><br><span class="line">$t_auto_create = <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$t_auto_create = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( CAS == config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line"><span class="comment"># Redirect to CAS page to logout</span></span><br><span class="line">auth_cas_logout();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( $t_auto_create ) &#123;</span><br><span class="line"><span class="comment"># attempt to create the user</span></span><br><span class="line">$t_cookie_string = user_create( $p_username, md5( $p_password ) );</span><br><span class="line"><span class="keyword">if</span>( $t_cookie_string === <span class="keyword">false</span> ) &#123;</span><br><span class="line"><span class="comment"># it didn't work</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ok, we created the user, get the row again</span></span><br><span class="line"><span class="keyword">return</span> user_get_id_by_name( $p_username );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_clean();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_attempt_login</span><span class="params">( $p_username, $p_password, $p_perm_login = false )</span> </span>&#123;</span><br><span class="line">$t_user_id = auth_get_user_id_from_login_name( $p_username );</span><br><span class="line">$t_login_method = config_get( <span class="string">'login_method'</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( $t_user_id === <span class="keyword">false</span> ) &#123;</span><br><span class="line"><span class="keyword">if</span> ( in_array( $t_login_method, <span class="keyword">array</span>( BASIC_AUTH, CAS ) ) ) &#123;</span><br><span class="line">            <span class="comment"># attempt to create the user if using BASIC_AUTH or CAS</span></span><br><span class="line">            <span class="comment"># ( note: CAS must have $g_allow_blank_email == ON )</span></span><br><span class="line"> $t_auto_create = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">$t_user_id = auth_auto_create_user( $p_username, $p_password );</span><br><span class="line"><span class="keyword">if</span>( $t_user_id === <span class="keyword">false</span> ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># max. failed login attempts achieved...</span></span><br><span class="line"><span class="keyword">if</span>( !user_is_login_request_allowed( $t_user_id ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># check for anonymous login</span></span><br><span class="line"><span class="keyword">if</span>( !user_is_anonymous( $t_user_id ) ) &#123;</span><br><span class="line"><span class="comment"># anonymous login didn't work, so check the password</span></span><br><span class="line"><span class="keyword">if</span>( !auth_does_password_match( $t_user_id, $p_password ) ) &#123;</span><br><span class="line">user_increment_failed_login_count( $t_user_id );</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> auth_login_user( $t_user_id, $p_perm_login );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_logout</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $g_cache_current_user_id, $g_cache_cookie_valid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># clear cached userid</span></span><br><span class="line">user_clear_cache( $g_cache_current_user_id );</span><br><span class="line">current_user_set( <span class="keyword">null</span> );</span><br><span class="line">$g_cache_cookie_valid = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># clear cookies, if they were set</span></span><br><span class="line"><span class="keyword">if</span>( auth_clear_cookies() ) &#123;</span><br><span class="line">helper_clear_pref_cookies();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( HTTP_AUTH == config_get_global( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line">auth_http_set_logout_pending( <span class="keyword">true</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">elseif</span> ( CAS == config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line">        <span class="comment"># Redirect to CAS page to logout</span></span><br><span class="line">        auth_cas_logout();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_clean();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_automatic_logon_bypass_form</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>( config_get( <span class="string">'login_method'</span> ) ) &#123;</span><br><span class="line">                <span class="keyword">case</span> HTTP_AUTH:</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">case</span> CAS:</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//return config_get_global( 'login_method' ) == HTTP_AUTH;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_does_password_match</span><span class="params">( $p_user_id, $p_test_password )</span> </span>&#123;</span><br><span class="line">$t_configured_login_method = config_get_global( <span class="string">'login_method'</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( LDAP == $t_configured_login_method ) &#123;</span><br><span class="line"><span class="keyword">return</span> ldap_authenticate( $p_user_id, $p_test_password );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">elseif</span> ( CAS == $t_configured_login_method ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( !auth_can_use_standard_login( $p_user_id ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$t_password = user_get_field( $p_user_id, <span class="string">'password'</span> );</span><br><span class="line">$t_login_methods = <span class="keyword">array</span>(</span><br><span class="line">MD5,</span><br><span class="line">CRYPT,</span><br><span class="line">PLAIN,</span><br><span class="line">BASIC_AUTH,</span><br><span class="line">CAS,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>( $t_login_methods <span class="keyword">as</span> $t_login_method ) &#123;</span><br><span class="line"><span class="comment"># pass the stored password in as the salt</span></span><br><span class="line"><span class="keyword">if</span>( auth_process_plain_password( $p_test_password, $t_password, $t_login_method ) == $t_password ) &#123;</span><br><span class="line"><span class="comment"># Do not support migration to PLAIN, since this would be a crazy thing to do.</span></span><br><span class="line"><span class="comment"># Also if we do, then a user will be able to login by providing the MD5 value</span></span><br><span class="line"><span class="comment"># that is copied from the database.  See #8467 for more details.</span></span><br><span class="line"><span class="keyword">if</span>( ( $t_configured_login_method != PLAIN &amp;&amp; $t_login_method == PLAIN ) ||</span><br><span class="line">( $t_configured_login_method != BASIC_AUTH &amp;&amp; $t_login_method == BASIC_AUTH ) ) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for migration to another login method and test whether the password was encrypted</span></span><br><span class="line"><span class="comment"># with our previously insecure implementation of the CRYPT method</span></span><br><span class="line"><span class="keyword">if</span>( ( $t_login_method != $t_configured_login_method ) || (( CRYPT == $t_configured_login_method ) &amp;&amp; mb_substr( $t_password, <span class="number">0</span>, <span class="number">2</span> ) == mb_substr( $p_test_password, <span class="number">0</span>, <span class="number">2</span> ) ) ) &#123;</span><br><span class="line">user_set_password( $p_user_id, $p_test_password, <span class="keyword">true</span> );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_reauthenticate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//if( !auth_reauthentication_enabled() || BASIC_AUTH == config_get_global( 'login_method' ) || HTTP_AUTH == config_get_global( 'login_method' ) ) &#123;</span></span><br><span class="line"><span class="keyword">if</span>( !auth_reauthentication_enabled() || in_array(config_get(<span class="string">'login_method'</span>), <span class="keyword">array</span>(BASIC_AUTH, HTTP_AUTH, CAS)) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$t_auth_token = token_get( TOKEN_AUTHENTICATED );</span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">null</span> != $t_auth_token ) &#123;</span><br><span class="line">token_touch( $t_auth_token[<span class="string">'id'</span>], auth_reauthentication_expiry() );</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$t_anon_account = auth_anonymous_account();</span><br><span class="line">$t_anon_allowed = auth_anonymous_enabled();</span><br><span class="line"></span><br><span class="line">$t_user_id = auth_get_current_user_id();</span><br><span class="line">$t_username = user_get_username( $t_user_id );</span><br><span class="line"></span><br><span class="line"><span class="comment"># check for anonymous login</span></span><br><span class="line"><span class="keyword">if</span>( ON == $t_anon_allowed &amp;&amp; $t_anon_account == $t_username ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$t_request_uri = string_url( $_SERVER[<span class="string">'REQUEST_URI'</span>] );</span><br><span class="line"></span><br><span class="line">$t_query_params = http_build_query(</span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line"><span class="string">'reauthenticate'</span> =&gt; <span class="number">1</span>,</span><br><span class="line"><span class="string">'username'</span> =&gt; $t_username,</span><br><span class="line"><span class="string">'return'</span> =&gt; $t_request_uri,</span><br><span class="line">),</span><br><span class="line"><span class="string">''</span>, <span class="string">'&amp;'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># redirect to login page</span></span><br><span class="line">print_header_redirect( auth_credential_page( $t_query_params ) );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新建login-cas-php处理拦截利用CAS认证登录"><a href="#新建login-cas-php处理拦截利用CAS认证登录" class="headerlink" title="新建login_cas.php处理拦截利用CAS认证登录"></a>新建<code>login_cas.php</code>处理拦截利用<code>CAS</code>认证登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  vi /var/www/html/mantis/phpCAS/login_cas.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>( <span class="string">'CAS.php'</span> );</span><br><span class="line">define(<span class="string">'CAS_ENABLE'</span>, <span class="keyword">true</span>);</span><br><span class="line">$cas_host = <span class="string">'devops.iamzhl.top'</span>;</span><br><span class="line">$cas_context = <span class="string">'/cas'</span>;</span><br><span class="line">$cas_port = <span class="number">8080</span>;</span><br><span class="line">$cas_real_hosts = <span class="keyword">array</span> (</span><br><span class="line"><span class="string">'devops.iamzhl.top'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">phpCAS::setDebug();</span><br><span class="line">phpCAS::setVerbose(<span class="keyword">true</span>);</span><br><span class="line">phpCAS::client(CAS_VERSION_2_0, $cas_host, $cas_port, $cas_context);</span><br><span class="line">phpCAS::setNoCasServerValidation();</span><br><span class="line">phpCAS::handleLogoutRequests(<span class="keyword">true</span>, $cas_real_hosts);</span><br><span class="line">phpCAS::forceAuthentication();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改CAS的Client-php启用http连接-根据个人CAS服务器来定"><a href="#修改CAS的Client-php启用http连接-根据个人CAS服务器来定" class="headerlink" title="修改CAS的Client.php启用http连接(根据个人CAS服务器来定)"></a>修改<code>CAS</code>的<code>Client.php</code>启用<code>http</code>连接(根据个人<code>CAS</code>服务器来定)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /var/www/html/mantis/phpCAS/source/CAS/Client.php</span></span><br></pre></td></tr></table></figure><blockquote><p>将如下几个函数中的https改为http即可</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getServerBaseURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// the URL is build only when needed</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>]) ) &#123;</span><br><span class="line">            <span class="comment">//$this-&gt;_server['base_url'] = 'https://' . $this-&gt;_getServerHostname();</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] = <span class="string">'http://'</span> . <span class="keyword">$this</span>-&gt;_getServerHostname();</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_getServerPort()!=<span class="number">443</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="string">':'</span></span><br><span class="line">                .<span class="keyword">$this</span>-&gt;_getServerPort();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>] .= <span class="keyword">$this</span>-&gt;_getServerURI();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_server[<span class="string">'base_url'</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_getCallbackURL</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// the URL is built when needed only</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_callback_url) ) &#123;</span><br><span class="line">            $final_uri = <span class="string">''</span>;</span><br><span class="line">            <span class="comment">// remove the ticket if present in the URL</span></span><br><span class="line">            <span class="comment">//$final_uri = 'https://';</span></span><br><span class="line">            $final_uri = <span class="string">'http://'</span>;</span><br><span class="line">            $final_uri .= <span class="keyword">$this</span>-&gt;_getClientUrl();</span><br><span class="line">            $request_uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">            $request_uri = preg_replace(<span class="string">'/\?.*$/'</span>, <span class="string">''</span>, $request_uri);</span><br><span class="line">            $final_uri .= $request_uri;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_callback_url = $final_uri;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_callback_url;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">public function getURL()</span><br><span class="line">    &#123;</span><br><span class="line">        phpCAS::traceBegin();</span><br><span class="line">        // the URL is built when needed only</span><br><span class="line">        if ( empty($this-&gt;_url) ) &#123;</span><br><span class="line">            $final_uri = &apos;&apos;;</span><br><span class="line">            // remove the ticket if present in the URL</span><br><span class="line">            //$final_uri = ($this-&gt;_isHttps()) ? &apos;https&apos; : &apos;http&apos;;</span><br><span class="line">            $final_uri = ($this-&gt;_isHttps()) ? &apos;http&apos; : &apos;http&apos;;</span><br><span class="line">            $final_uri .= &apos;://&apos;;</span><br><span class="line"></span><br><span class="line">            $final_uri .= $this-&gt;_getClientUrl();</span><br><span class="line">            $request_uri        = explode(&apos;?&apos;, $_SERVER[&apos;REQUEST_URI&apos;], 2);</span><br><span class="line">            $final_uri          .= $request_uri[0];</span><br><span class="line"></span><br><span class="line">            if (isset($request_uri[1]) &amp;&amp; $request_uri[1]) &#123;</span><br><span class="line">                $query_string= $this-&gt;_removeParameterFromQueryString(&apos;ticket&apos;, $request_uri[1]);</span><br><span class="line"></span><br><span class="line">                // If the query string still has anything left,</span><br><span class="line">                // append it to the final URI</span><br><span class="line">                if ($query_string !== &apos;&apos;) &#123;</span><br><span class="line">                    $final_uri  .= &quot;?$query_string&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            phpCAS::trace(&quot;Final URI: $final_uri&quot;);</span><br><span class="line">            $this-&gt;setURL($final_uri);</span><br><span class="line">        &#125;</span><br><span class="line">        phpCAS::traceEnd($this-&gt;_url);</span><br><span class="line">        return $this-&gt;_url;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>新建<code>log</code>目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/mantis</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/log/mantis</span></span><br></pre></td></tr></table></figure><p>打开<code>MantisBT</code>网址，正常跳转至<code>CAS</code>登录界面，网址是<code>http://devops.iamzhl.top:8080/cas/login?service=http%3A%2F%2Fdevops.iamzhl.top%2Fmantis%2Flogin_page.php</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/fa/f707556ce41d95b71052d07834f5d8.jpg" alt></p><p>如图，输入用户名密码后点击登录，正常登陆后跳转至<code>MantisBT</code>主页，并且正常获取用户名</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/49/1365298ec15c90fbf95612a38606ed.jpg" alt></p><p>点击右上角的用户名 -&gt; 注销，会正常退出并跳转到<code>CAS</code>的登出界面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/85/2d25e40bdf97b6f06dad6239cf3167.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      MantisBT 整合 LDAP 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://iamzhl.top/tags/CAS/"/>
    
      <category term="LDAP" scheme="https://iamzhl.top/tags/LDAP/"/>
    
      <category term="MantisBT" scheme="https://iamzhl.top/tags/MantisBT/"/>
    
  </entry>
  
  <entry>
    <title>Gerrit 整合 ldap 和 CAS 单点登录</title>
    <link href="https://iamzhl.top/Gerrit-integrate-with-ldap-and-CAS.html"/>
    <id>https://iamzhl.top/Gerrit-integrate-with-ldap-and-CAS.html</id>
    <published>2018-12-03T01:42:41.000Z</published>
    <updated>2019-03-11T16:21:49.891Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>Gerrit 版本：2.16</li><li>Gerrit URL：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgy" title="http://devops.iamzhl.top:82">http://devops.iamzhl.top:82<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-LDAP"><a href="#整合-LDAP" class="headerlink" title="整合 LDAP"></a>整合 LDAP</h2><h3 id="修改-gerrit-config"><a href="#修改-gerrit-config" class="headerlink" title="修改 gerrit.config"></a>修改 gerrit.config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/review_site/etc/gerrit.config</span></span><br></pre></td></tr></table></figure><blockquote><p>请根据自己的<code>LDAP</code>服务器信息进行定制</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[auth]</span><br><span class="line">        type = LDAP</span><br><span class="line">[ldap]</span><br><span class="line">        server = ldap://devops.iamzhl.top:389</span><br><span class="line">        username = cn=Manager,dc=iamzhl,dc=top</span><br><span class="line">        password = passwd</span><br><span class="line">        accountBase = ou=People,dc=iamzhl,dc=top</span><br><span class="line">        groupBase = ou=People,dc=iamzhl,dc=top</span><br><span class="line">        accountFullName = uid</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gerrit restart</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:8081</code>，进入到<code>Gerrit</code>主页面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/4d/42f6d16ca0cd469d5b5bd9cfb9f471.jpg" alt></p><p>点击右上角<code>Sign in</code>，进入登录界面，输入<code>LDAP</code>服务器中的用户名和密码，然后点击<code>Sign in</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/5e/3a439fb1bcfae0116018eaca7dd987.jpg" alt></p><p>登录成功后跳转到用户主页面，正常获取用户名</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/3d/ea561210f011755f97aec7c4a90b59.jpg" alt></p><p>点击用户名 -&gt; Sign Out，正常退出</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/4d/42f6d16ca0cd469d5b5bd9cfb9f471.jpg" alt></p><p>至此，<code>Gerrit</code>整合<code>LDAP</code>完成。</p><h2 id="整合-CAS"><a href="#整合-CAS" class="headerlink" title="整合 CAS"></a>整合 CAS</h2><h3 id="修改-gerrit-config-1"><a href="#修改-gerrit-config-1" class="headerlink" title="修改 gerrit.config"></a>修改 gerrit.config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/review_site/etc/gerrit.config</span></span><br></pre></td></tr></table></figure><p>修改<code>[auth]</code>部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[auth]</span><br><span class="line">        type = HTTP</span><br><span class="line">        httpHeader = X-Forwarded-Gerrit</span><br><span class="line">        logoutUrl = http://devops.iamzhl.top:8080/cas/logout</span><br></pre></td></tr></table></figure><h3 id="mod-auth-cas修改"><a href="#mod-auth-cas修改" class="headerlink" title="mod_auth_cas修改"></a><code>mod_auth_cas</code>修改</h3><p>然后安装<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install mod_auth_cas</span></span><br></pre></td></tr></table></figure><p>配置<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf.d/auth_cas.conf</span></span><br></pre></td></tr></table></figure><p>修改<code>CAS</code>的<code>Cookie</code>存储位置以及登录地址和验证地址等参数如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LogLevel Debug</span><br><span class="line">CASDebug On</span><br><span class="line">CASVersion 2</span><br><span class="line">CASTimeout 1740</span><br><span class="line">CASIdleTimeout 1740</span><br><span class="line">CASSSOEnabled On</span><br><span class="line">CASCookiePath /var/cache/httpd/mod_auth_cas/</span><br><span class="line">CASLoginURL http://devops.iamzhl.top:8080/cas/login</span><br><span class="line">CASValidateURL http://devops.iamzhl.top:8080/cas/serviceValidate</span><br></pre></td></tr></table></figure><h3 id="修改-apache-配置文件"><a href="#修改-apache-配置文件" class="headerlink" title="修改 apache 配置文件"></a>修改 apache 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure><blockquote><p>添加反向代理</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 添加一个监听端口 82 用作 Gerrit 的代理主机</span><br><span class="line">Listen 82</span><br><span class="line"></span><br><span class="line"># 加载 mod_auth_cas 模块，如果已经加载请忽略</span><br><span class="line">LoadModule auth_cas_module modules/mod_auth_cas.so</span><br><span class="line"></span><br><span class="line"># 设置 Gerrit 的虚拟主机</span><br><span class="line">&lt;VirtualHost *:82&gt;</span><br><span class="line">    ServerName devops.iamzhl.top</span><br><span class="line">    ServerAdmin 15563836030@163.com</span><br><span class="line"></span><br><span class="line">    CASRootProxiedAs http://devops.iamzhl.top:82</span><br><span class="line"></span><br><span class="line">    ProxyRequests Off</span><br><span class="line">    ProxyVia Off</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line"></span><br><span class="line">    &lt;Proxy *&gt;</span><br><span class="line">          Order deny,allow</span><br><span class="line">          Allow from all</span><br><span class="line">    &lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Location &quot;/login/&quot;&gt;</span><br><span class="line">        AuthType CAS</span><br><span class="line">        AuthName &quot;Welcome To Gerrit Code Review&quot;</span><br><span class="line">        Require valid-user</span><br><span class="line">        CASAuthNHeader X-Forwarded-Gerrit</span><br><span class="line">    &lt;/Location&gt;</span><br><span class="line"></span><br><span class="line">    AllowEncodedSlashes On</span><br><span class="line"></span><br><span class="line">    ProxyPass / http://devops.iamzhl.top:8081/</span><br><span class="line">    ProxyPassReverse / http://devops.iamzhl.top:8081</span><br><span class="line"></span><br><span class="line">    ErrorLog /var/log/gerrit/error.log</span><br><span class="line">    CustomLog /var/log/gerrit/access.log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/gerrit</span></span><br><span class="line"><span class="comment"># gerrit restart</span></span><br><span class="line"><span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:82</code>，发现自动跳转到了<code>CAS</code>的登录界面，网址是<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2FzL2xvZ2luP3NlcnZpY2U9aHR0cCUzYSUyZiUyZmRldm9wcy5pYW16aGwudG9wJTNhODIlMmY=" title="http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a82%2f">http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a82%2f<i class="fa fa-external-link"></i></span></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/dc/a298cbb27df3f031b6a75d41b8ae3b.jpg" alt></p><p>输入用户名密码后，点击登录，登陆成功，地址是<code>http://devops.iamzhl.top:82//#/dashboard/self</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/6b/7e1c3e774f6d188f2a2a7203776be1.jpg" alt></p><p>点击用户名 -&gt; Sign Out，就会登出</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/a2/726b245663641d5b6aaf1eef3e17bf.jpg" alt></p><p>登出界面如下，地址是<code>http://devops.iamzhl.top:8080/cas/logout</code></p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/e9/a067be6a85ec888bc9ab25bcf0d0e7.jpg" alt></p><p>至此，<code>Gerrit</code>整合<code>CAS</code>单点登录完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Gerrit 整合 ldap 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://iamzhl.top/tags/CAS/"/>
    
      <category term="Gerrit" scheme="https://iamzhl.top/tags/Gerrit/"/>
    
      <category term="ldap" scheme="https://iamzhl.top/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>SonarQube 整合 LDAP 和 CAS 单点登录</title>
    <link href="https://iamzhl.top/SonarQube-integrate-with-ldap-and-CAS.html"/>
    <id>https://iamzhl.top/SonarQube-integrate-with-ldap-and-CAS.html</id>
    <published>2018-11-30T05:23:17.000Z</published>
    <updated>2019-03-11T16:21:49.901Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li><code>SonarQube</code>版本：7.4</li><li><code>SonarQube</code> URL: <span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjkwMDA=" title="http://devops.iamzhl.top:9000">http://devops.iamzhl.top:9000<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合LDAP"><a href="#整合LDAP" class="headerlink" title="整合LDAP"></a>整合<code>LDAP</code></h2><p>修改<code>sonar</code>配置文件<code>sonar.properties</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /usr/<span class="built_in">local</span>/sonarqube-7.4/conf/sonar.properties</span><br></pre></td></tr></table></figure><p>找到下面的部分修改<code>LDAP</code>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#--------------------------------------------------------------------------------------------------</span><br><span class="line"># LDAP CONFIGURATION</span><br><span class="line"></span><br><span class="line"># Enable the LDAP feature</span><br><span class="line"># sonar.security.realm=LDAP</span><br><span class="line"></span><br><span class="line"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span><br><span class="line"># sonar.authenticator.downcase=true</span><br><span class="line"></span><br><span class="line"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span><br><span class="line"># ldap.url=ldap://localhost:10389</span><br><span class="line"></span><br><span class="line"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line"># ldap.bindDn=cn=sonar,ou=users,o=mycompany</span><br><span class="line"></span><br><span class="line"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line"># ldap.bindPassword=secret</span><br><span class="line"></span><br><span class="line"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span><br><span class="line"># ldap.authentication=simple</span><br></pre></td></tr></table></figure><p>修改如下(请将具体信息按照自己的<code>LDAP</code>服务器信息进行修改):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#--------------------------------------------------------------------------------------------------</span><br><span class="line"># LDAP CONFIGURATION</span><br><span class="line"></span><br><span class="line"># Enable the LDAP feature</span><br><span class="line">sonar.security.realm=LDAP</span><br><span class="line"></span><br><span class="line"># Set to true when connecting to a LDAP server using a case-insensitive setup.</span><br><span class="line"># sonar.authenticator.downcase=true</span><br><span class="line"></span><br><span class="line"># URL of the LDAP server. Note that if you are using ldaps, then you should install the server certificate into the Java truststore.</span><br><span class="line">ldap.url=ldap://devops.iamzhl.top:389</span><br><span class="line"></span><br><span class="line"># Bind DN is the username of an LDAP user to connect (or bind) with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line">ldap.bindDn=cn=Manager,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line"># Bind Password is the password of the user to connect with. Leave this blank for anonymous access to the LDAP directory (optional)</span><br><span class="line">ldap.bindPassword=passwd</span><br><span class="line"></span><br><span class="line"># Possible values: simple | CRAM-MD5 | DIGEST-MD5 | GSSAPI See http://java.sun.com/products/jndi/tutorial/ldap/security/auth.html (default: simple)</span><br><span class="line">ldap.authentication=simple</span><br><span class="line"></span><br><span class="line"># See :</span><br><span class="line">#   * http://java.sun.com/products/jndi/tutorial/ldap/security/digest.html</span><br><span class="line">#   * http://java.sun.com/products/jndi/tutorial/ldap/security/crammd5.html</span><br><span class="line"># (optional)</span><br><span class="line"># ldap.realm=example.org</span><br><span class="line"></span><br><span class="line"># Context factory class (optional)</span><br><span class="line"># ldap.contextFactoryClass=com.sun.jndi.ldap.LdapCtxFactory</span><br><span class="line"></span><br><span class="line"># Enable usage of StartTLS (default : false)</span><br><span class="line"># ldap.StartTLS=true</span><br><span class="line"></span><br><span class="line"># Follow or not referrals. See http://docs.oracle.com/javase/jndi/tutorial/ldap/referral/jndi.html (default: true)</span><br><span class="line"># ldap.followReferrals=false</span><br><span class="line"></span><br><span class="line"># USER MAPPING</span><br><span class="line"></span><br><span class="line"># Distinguished Name (DN) of the root node in LDAP from which to search for users (mandatory)</span><br><span class="line">ldap.user.baseDn=ou=People,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line"># LDAP user request. (default: (&amp;(objectClass=inetOrgPerson)(uid=&#123;login&#125;)) )</span><br><span class="line"># ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))</span><br><span class="line">ldap.user.request=(&amp;(objectClass=inetOrgPerson)(uid=&#123;login&#125;))</span><br><span class="line"></span><br><span class="line"># Attribute in LDAP defining the user’s real name. (default: cn)</span><br><span class="line"># ldap.user.realNameAttribute=name</span><br><span class="line">ldap.user.realNameAttribute=cn</span><br><span class="line"></span><br><span class="line"># Attribute in LDAP defining the user’s email. (default: mail)</span><br><span class="line"># ldap.user.emailAttribute=email</span><br><span class="line">ldap.user.emailAttribute=mail</span><br><span class="line"></span><br><span class="line"># GROUP MAPPING</span><br><span class="line"></span><br><span class="line"># Distinguished Name (DN) of the root node in LDAP from which to search for groups. (optional, default: empty)</span><br><span class="line"># ldap.group.baseDn=cn=groups,dc=example,dc=org</span><br><span class="line">ldap.group.baseDn=ou=People,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line"># LDAP group request (default: (&amp;(objectClass=groupOfUniqueNames)(uniqueMember=&#123;dn&#125;)) )</span><br><span class="line"># ldap.group.request=(&amp;(objectClass=group)(member=&#123;dn&#125;))</span><br><span class="line">ldap.group.request=(&amp;(objectClass=posixGroup)(memberUid=&#123;uid&#125;))</span><br><span class="line"></span><br><span class="line"># Property used to specifiy the attribute to be used for returning the list of user groups in the compatibility mode. (default: cn)</span><br><span class="line"># ldap.group.idAttribute=sAMAccountName</span><br></pre></td></tr></table></figure><p>修改完成后，重启<code>sonar</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sonar restart</span><br></pre></td></tr></table></figure><p>打开<code>sonar</code>网址，输入<code>LDAP</code>中的用户名和密码后点击登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/89/7728c5a52a96a6841a426155062a56.jpg" alt></p><p>登陆成功后，正常获取用户名</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/dd/53d39dc0858679e2a4949419417678.jpg" alt></p><p>至此，<code>SonarQube</code>整合<code>LDAP</code>完成</p><h2 id="整合CAS单点登录"><a href="#整合CAS单点登录" class="headerlink" title="整合CAS单点登录"></a>整合<code>CAS</code>单点登录</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><code>SonarQube</code>提供了一种<code>SSO</code>机制，可以用来作为单点登录的实现方式，就是使用<code>HTTP header</code>的方式，而<code>CAS</code>也提供了一种用于<code>apache</code>服务的认证方式，这就是<code>mod_auth_cas</code>，思路很简单，我们利用<code>apache</code>反向代理，做一个端口用于虚拟主机来转发<code>SonarQube</code>服务，然后在这个虚拟主机内部加入<code>mod_auth_cas</code>提供的认证拦截，同时在里面指定一个<code>HTTP header</code>用于发送认证后的请求到<code>SonarQube</code>，然后，<code>SonarQube</code>接收到这个请求后，发现正是自己设定的<code>HTTP header</code>，于是予以通过认证。这就是整个认证流程，下面开始介绍整合方法。</p><h3 id="SonarQube修改"><a href="#SonarQube修改" class="headerlink" title="SonarQube修改"></a><code>SonarQube</code>修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /usr/<span class="built_in">local</span>/sonarqube-7.4/conf/sonar.properties</span><br></pre></td></tr></table></figure><p>修改如下部分(就是将<code>SSO AUTHENTICATION</code>部分的参数取消注释，令其生效)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#--------------------------------------------------------------------------------------------------</span><br><span class="line"># SSO AUTHENTICATION</span><br><span class="line"></span><br><span class="line"># Enable authentication using HTTP headers</span><br><span class="line">sonar.web.sso.enable=true</span><br><span class="line"></span><br><span class="line"># Name of the header to get the user login.</span><br><span class="line"># Only alphanumeric, &apos;.&apos; and &apos;@&apos; characters are allowed</span><br><span class="line">sonar.web.sso.loginHeader=X-Forwarded-Login</span><br><span class="line"></span><br><span class="line"># Name of the header to get the user name</span><br><span class="line">sonar.web.sso.nameHeader=X-Forwarded-Name</span><br><span class="line"></span><br><span class="line"># Name of the header to get the user email (optional)</span><br><span class="line">sonar.web.sso.emailHeader=X-Forwarded-Email</span><br><span class="line"></span><br><span class="line"># Name of the header to get the list of user groups, separated by comma (optional).</span><br><span class="line"># If the sonar.sso.groupsHeader is set, the user will belong to those groups if groups exist in SonarQube.</span><br><span class="line"># If none of the provided groups exists in SonarQube, the user will only belong to the default group.</span><br><span class="line"># Note that the default group will always be set.</span><br><span class="line">sonar.web.sso.groupsHeader=X-Forwarded-Groups</span><br><span class="line"></span><br><span class="line"># Interval used to know when to refresh name, email and groups.</span><br><span class="line"># During this interval, if for instance the name of the user is changed in the header, it will only be updated after X minutes.</span><br><span class="line">sonar.web.sso.refreshIntervalInMinutes=5</span><br></pre></td></tr></table></figure><p>修改<code>app.d5dba530.chunk.js</code>，解决登出问题，不同的版本不同，<code>7.2.1</code>的在<code>main</code>开头的一个<code>js</code>文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/sonarqube-7.4/web/js/app.d5dba530.chunk.js</span></span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t.handleLogout = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line"><span class="comment">// e.preventDefault(), t.context.router.push("/sessions/logout") </span></span><br><span class="line">t.context.router.push(<span class="string">"/sessions/logout"</span>)  <span class="comment">//去掉e.preventDefault()方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">r.createElement(<span class="string">"li"</span>, <span class="literal">null</span>, r.createElement(<span class="string">"a"</span>, &#123;</span><br><span class="line"><span class="comment">//href: "#",</span></span><br><span class="line">href: <span class="string">"http://192.168.6.99:8080/cas/logout"</span>,  <span class="comment">//将此注销按钮的href改为CAS服务器的登出页面</span></span><br><span class="line">onClick: <span class="keyword">this</span>.handleLogout</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mod-auth-cas修改"><a href="#mod-auth-cas修改" class="headerlink" title="mod_auth_cas修改"></a><code>mod_auth_cas</code>修改</h3><p>然后安装<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install mod_auth_cas</span></span><br></pre></td></tr></table></figure><p>配置<code>mod_auth_cas</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf.d/auth_cas.conf</span></span><br></pre></td></tr></table></figure><p>修改<code>CAS</code>的<code>Cookie</code>存储位置以及登录地址和验证地址等参数如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LogLevel Debug</span><br><span class="line">CASDebug On</span><br><span class="line">CASVersion 2</span><br><span class="line">CASTimeout 1740</span><br><span class="line">CASIdleTimeout 1740</span><br><span class="line">CASSSOEnabled On</span><br><span class="line">CASCookiePath /var/cache/httpd/mod_auth_cas/</span><br><span class="line">CASLoginURL http://devops.iamzhl.top:8080/cas/login</span><br><span class="line">CASValidateURL http://devops.iamzhl.top:8080/cas/serviceValidate</span><br></pre></td></tr></table></figure><h3 id="apache修改"><a href="#apache修改" class="headerlink" title="apache修改"></a><code>apache</code>修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure><p>添加虚拟主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># 添加一个监听端口 83 用作 SonarQube 的代理主机</span><br><span class="line">Listen 83</span><br><span class="line"></span><br><span class="line"># 加载 mod_auth_cas 模块，如果已经加载请忽略</span><br><span class="line">LoadModule auth_cas_module modules/mod_auth_cas.so</span><br><span class="line"></span><br><span class="line"># 设置 SonarQube 的虚拟主机</span><br><span class="line">&lt;VirtualHost *:83&gt;</span><br><span class="line">        ServerName devops.iamzhl.top</span><br><span class="line">        ServerAdmin 15563836030@163.com</span><br><span class="line"></span><br><span class="line">        CASRootProxiedAs http://devops.iamzhl.top:83</span><br><span class="line"></span><br><span class="line">        ProxyPreserveHost On</span><br><span class="line"></span><br><span class="line">        ProxyPass / http://devops.iamzhl.top:9000/</span><br><span class="line">        ProxyPassReverse / http://devops.iamzhl.top:9000/</span><br><span class="line">        ProxyPass /sessions/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line">        ProxyPassReverse /sessions/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line">        ProxyPass /api/authentication/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line">        ProxyPassReverse /api/authentication/logout http://devops.iamzhl.top:8080/cas/logout</span><br><span class="line"></span><br><span class="line">        ErrorLog /var/log/sonar/error.log</span><br><span class="line">        CustomLog /var/log/sonar/access.log common</span><br><span class="line"></span><br><span class="line">        &lt;Location /&gt;</span><br><span class="line">                AuthName &quot;Welcome to devops sonar&quot;</span><br><span class="line">                CASAuthNHeader X-Forwarded-Login</span><br><span class="line">                Authtype CAS</span><br><span class="line">                require valid-user</span><br><span class="line">        &lt;/Location&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Proxy *&gt;</span><br><span class="line">                Order deny,allow</span><br><span class="line">                Allow from all</span><br><span class="line">        &lt;/Proxy&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /var/log/sonar</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/log/sonar</span></span><br><span class="line"><span class="comment"># su sonar</span></span><br><span class="line">$ sonar restart</span><br><span class="line"><span class="comment"># su </span></span><br><span class="line"><span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打开网址<code>http://devops.iamzhl.top:83</code>，发现自动跳转到了<code>CAS</code>的登录界面，网址是<code>http://devops.iamzhl.top:8080/cas/login?service=http%3a%2f%2fdevops.iamzhl.top%3a83%2f</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/0b/b05aa63a31ffc624e42290d71c68e8.jpg" alt></p><p>输入用户名密码后点击登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/6d/548f70b5aba6e4399e06ae288adfa9.jpg" alt></p><p>如图所示，登陆成功，地址是<code>http://devops.iamzhl.top:83/projects</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e1/463c767ddd0147ed54fba65d91a0f7.jpg" alt></p><p>如上图所示，点击注销，就会登出并跳转至<code>CAS</code>的登出界面</p><p><img src="https://gitee.com/athlonreg/picbed/raw/master/Images/e9/a067be6a85ec888bc9ab25bcf0d0e7.jpg" alt></p><p>至此，<code>SonarQube</code>整合<code>CAS</code>单点登录完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      SonarQube 整合 LDAP 和 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://iamzhl.top/tags/CAS/"/>
    
      <category term="LDAP" scheme="https://iamzhl.top/tags/LDAP/"/>
    
      <category term="SonarQube" scheme="https://iamzhl.top/tags/SonarQube/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins 整合 LDAP 以及 CAS 单点登录</title>
    <link href="https://iamzhl.top/Jenkins-integrate-with-ldap-and-CAS.html"/>
    <id>https://iamzhl.top/Jenkins-integrate-with-ldap-and-CAS.html</id>
    <published>2018-11-30T02:17:09.000Z</published>
    <updated>2019-03-11T16:21:49.895Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><ul><li>Jenkins 版本：2.138.3</li><li>Jenkins 安装方式： Tomcat 容器部署 war 包</li><li>Jenkins 地址：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvamVua2lucw==" title="http://devops.iamzhl.top:8080/jenkins">http://devops.iamzhl.top:8080/jenkins<i class="fa fa-external-link"></i></span></li><li>openLDAP 服务：ldap://devops.iamzhl.top:389</li><li>CAS 服务：<span class="exturl" data-url="aHR0cDovL2Rldm9wcy5pYW16aGwudG9wOjgwODAvY2Fz" title="http://devops.iamzhl.top:8080/cas">http://devops.iamzhl.top:8080/cas<i class="fa fa-external-link"></i></span></li></ul><h2 id="整合-openLDAP"><a href="#整合-openLDAP" class="headerlink" title="整合 openLDAP"></a>整合 openLDAP</h2><p>首先去 Jenkins 插件官网下载 LDAP 和 CAS 插件</p><ul><li>LDAP：<span class="exturl" data-url="aHR0cHM6Ly91cGRhdGVzLmplbmtpbnMuaW8vZG93bmxvYWQvcGx1Z2lucy9sZGFwLw==" title="https://updates.jenkins.io/download/plugins/ldap/">https://updates.jenkins.io/download/plugins/ldap/<i class="fa fa-external-link"></i></span></li><li>CAS：<span class="exturl" data-url="aHR0cHM6Ly91cGRhdGVzLmplbmtpbnMuaW8vZG93bmxvYWQvcGx1Z2lucy9jYXMtcGx1Z2luLw==" title="https://updates.jenkins.io/download/plugins/cas-plugin/">https://updates.jenkins.io/download/plugins/cas-plugin/<i class="fa fa-external-link"></i></span></li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/46/53fb1f3e3cfa00c055965bc99c7fbd.jpg" alt></p><p>如图，点击<code>系统管理</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/86/4f0c2ebaef58a3c719397b0adfbc5b.jpg" alt></p><p>点击插件管理 -&gt; 高级 -&gt; 上传插件(选择文件)</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/65/bfd2b91d856ca8132434b2da51de6e.jpg" alt></p><p>弹出选择文件的对话框后，首先选择我们下载好的 LDAP 插件，然后点击上传，然后就会跳转到安装界面，我们勾选<code>安装完成后重启Jenkins(空闲时)</code>，等待一会Jenkins安装插件完成后就会重启</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c5/7cf7ef11ecd49b19b07ea7333cc26a.jpg" alt></p><p>输入用户名密码登录后，依次打开<code>系统管理</code> -&gt; <code>全局安全配置</code>，在安全域勾选 LDAP，点击<code>Advanced Server Configuration</code>,开始配置 LDAP 服务器的绑定信息</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/12/adf30303385802ce2fc45d175a7d16.jpg" alt></p><p>点击<code>Test LDAP settings</code>，测试<code>LDAP</code>配置是否可用，如下图，输入一个<code>LDAP</code>服务器中存在的用户账号和密码，点击<code>Test</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/93/bca0bd8c0ac21d1b2c4cffd7cea3bc.jpg" alt></p><p>如果测试成功，会打印出类似如下的信息</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f5/7453c8051a55d9622dbe1e461d1b25.jpg" alt></p><p>点击<code>应用</code>，然后点击<code>保存</code>。</p><p>测试一下，用<code>LDAP</code>中的用户进行登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/1e/46a5ac15c7611eff4ade4830966565.jpg" alt></p><p>登陆成功，配置完成，到这里，<code>Jenkins</code>整合<code>LDAP</code>认证就完成了。</p><h2 id="整合-CAS-单点登录"><a href="#整合-CAS-单点登录" class="headerlink" title="整合 CAS 单点登录"></a>整合 CAS 单点登录</h2><p>首先安装<code>CAS</code>插件，和上面安装<code>LDAP</code>插件步骤一样，安装完<code>CAS</code>打开<code>系统管理</code> -&gt; <code>全局安全配置</code>，在安全域勾选<code>CAS (Central Authentication Service)</code>，如图所示，配置好<code>CAS</code>的<code>URL</code>和<code>CAS 协议</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b7/99ca653df5281634fed8a6dcc4f3c2.jpg" alt></p><p>然后点击<code>应用</code>-&gt;<code>保存</code>，注销，然后重新登录</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/ce/bf7939fceebf45806037fd759179f4.jpg" alt></p><p>这时就可以跳转到<code>CAS</code>的登录界面了，输入用户名密码点击登录，就可以正常的登录进入<code>Jenkins</code>系统了。</p><p>至此，<code>Jenkins</code>整合<code>CAS</code>完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Jenkins 整合 LDAP 以及 CAS 单点登录
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://iamzhl.top/tags/CAS/"/>
    
      <category term="Jenkins" scheme="https://iamzhl.top/tags/Jenkins/"/>
    
      <category term="LDAP" scheme="https://iamzhl.top/tags/LDAP/"/>
    
  </entry>
  
  <entry>
    <title>shadowsocks-libev</title>
    <link href="https://iamzhl.top/shadowsocks-libev.html"/>
    <id>https://iamzhl.top/shadowsocks-libev.html</id>
    <published>2018-11-25T09:39:40.000Z</published>
    <updated>2019-03-11T16:21:49.905Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>国外服务器一台</li><li>CentOS 操作系统</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install pcre pcre-devel git wget gcc gcc-c++</span></span><br><span class="line"><span class="comment"># cd ~ &amp;&amp; git clone https://github.com/shadowsocks/shadowsocks-libev.git</span></span><br><span class="line"><span class="comment"># cd shadowsocks-libev &amp;&amp; git submodule update --init --recursive</span></span><br><span class="line"><span class="comment"># yum install gettext gcc autoconf libtool automake make asciidoc xmlto c-ares-devel libev-devel</span></span><br><span class="line"><span class="comment"># echo "LIBSODIUM_VER=1.0.13" &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz</span></span><br><span class="line"><span class="comment"># tar zxvf LATEST.tar.gz</span></span><br><span class="line"><span class="comment"># pushd libsodium-stable</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr &amp;&amp; make</span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line"><span class="comment"># popd</span></span><br><span class="line"><span class="comment"># ldconfig</span></span><br><span class="line"><span class="comment"># echo "export MBEDTLS_VER=2.6.0" &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># cd ~ &amp;&amp; wget wget https://tls.mbed.org/download/mbedtls-2.14.0-apache.tgz</span></span><br><span class="line"><span class="comment"># tar xvf mbedtls-2.14.0-apache.tgz</span></span><br><span class="line"><span class="comment"># pushd mbedtls-2.14.0</span></span><br><span class="line"><span class="comment"># make SHARED=1 CFLAGS=-fPIC</span></span><br><span class="line"><span class="comment"># make DESTDIR=/usr install</span></span><br><span class="line"><span class="comment"># popd</span></span><br><span class="line"><span class="comment"># ldconfig</span></span><br><span class="line"><span class="comment"># cd shadowsocks-libev &amp;&amp; ./autogen.sh &amp;&amp; ./configure &amp;&amp; make</span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line"><span class="comment"># cd /usr/local &amp;&amp;  wget  https://nchc.dl.sourceforge.net/project/pcre/pcre/8.41/pcre-8.41.tar.gz</span></span><br><span class="line"><span class="comment"># tar -zxvf  pcre-8.41.tar.gz</span></span><br><span class="line"><span class="comment"># cd pcre-8.41 &amp;&amp; ./configure &amp;&amp; make</span></span><br><span class="line"><span class="comment"># make install</span></span><br><span class="line"><span class="comment"># cd /usr/local &amp;&amp; mkdir ssr &amp;&amp; cd ssr</span></span><br><span class="line"><span class="comment"># vi conf.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">"server"</span>:<span class="string">"your server ip"</span>,</span><br><span class="line">        <span class="attr">"server_port"</span>:<span class="number">7788</span>,</span><br><span class="line">        <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">        <span class="attr">"password"</span>:<span class="string">"your password for ssr"</span>,</span><br><span class="line">        <span class="attr">"timeout"</span>:<span class="number">60</span>,</span><br><span class="line">        <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ss-server -c /usr/local/ssr/conf.conf //运行</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/d4/6463c41c237e134ade8219c099db8e.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/bin &amp;&amp; vi ssr //利用脚本后台运行</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">nohup ss-server -c /usr/local/ssr/conf.conf &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod +x /usr/local/bin/ssr</span></span><br><span class="line"><span class="comment"># ssr</span></span><br><span class="line"><span class="comment"># ps ax | grep ssr</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a4/ef69a4b5a7ca6de17e5744064ba11d.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      shadowsocks-libev
    
    </summary>
    
      <category term="study" scheme="https://iamzhl.top/categories/study/"/>
    
    
      <category term="shadowsocks" scheme="https://iamzhl.top/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>CentOS安装部署 openLDAP</title>
    <link href="https://iamzhl.top/CentOS-install-openLDAP.html"/>
    <id>https://iamzhl.top/CentOS-install-openLDAP.html</id>
    <published>2018-11-24T14:17:41.000Z</published>
    <updated>2019-03-11T16:21:49.884Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>OpenLDAP 是轻型目录访问协议<code>Lightweight Directory Access Protocol</code> - <code>LDAP</code>的自由和开源的实现，在其<code>OpenLDAP</code>许可证下发行，并已经被包含在众多流行的<code>Linux</code>发行版中。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd ~</span></span><br><span class="line"><span class="comment"># yum -y install openldap-servers openldap-clients</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/1c/02ad1e703c7187295361dbff3fad9c.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG</span></span><br><span class="line"><span class="comment"># chown ldap:ldap /var/lib/ldap/DB_CONFIG</span></span><br><span class="line"><span class="comment"># systemctl start slapd</span></span><br><span class="line"><span class="comment"># systemctl enable slapd</span></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slappasswd</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/75/c5c970bd59e02ac7434f217a5f27a6.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi chrootpw.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># specify the password generated above for &quot;olcRootPW&quot; section</span><br><span class="line">dn: olcDatabase=&#123;0&#125;config,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;xxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif</span></span><br></pre></td></tr></table></figure><h2 id="导入基本模式"><a href="#导入基本模式" class="headerlink" title="导入基本模式"></a>导入基本模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif </span></span><br><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif </span></span><br><span class="line"><span class="comment"># ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif</span></span><br></pre></td></tr></table></figure><h2 id="在ldap的DB中设置域名"><a href="#在ldap的DB中设置域名" class="headerlink" title="在ldap的DB中设置域名"></a>在ldap的DB中设置域名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slappasswd</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/de/9a4502a39d572493b8ae8d723a08ef.jpg" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi chdomain.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># replace to your own domain name for &quot;dc=***,dc=***&quot; section</span><br><span class="line"># specify the password generated above for &quot;olcRootPW&quot; section</span><br><span class="line">dn: olcDatabase=&#123;1&#125;monitor,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to * by dn.base=&quot;gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth&quot;</span><br><span class="line">  read by dn.base=&quot;cn=Manager,dc=iamzhl,dc=top&quot; read by * none</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcSuffix</span><br><span class="line">olcSuffix: dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">replace: olcRootDN</span><br><span class="line">olcRootDN: cn=Manager,dc=iamzhl,dc=top</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcRootPW</span><br><span class="line">olcRootPW: &#123;SSHA&#125;xxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line"></span><br><span class="line">dn: olcDatabase=&#123;2&#125;hdb,cn=config</span><br><span class="line">changetype: modify</span><br><span class="line">add: olcAccess</span><br><span class="line">olcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by</span><br><span class="line">  dn=&quot;cn=Manager,dc=iamzhl,dc=top&quot; write by anonymous auth by self write by * none</span><br><span class="line">olcAccess: &#123;1&#125;to dn.base=&quot;&quot; by * read</span><br><span class="line">olcAccess: &#123;2&#125;to * by dn=&quot;cn=Manager,dc=iamzhl,dc=top&quot; write by * read</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi basedomain.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># replace to your own domain name for &quot;dc=***,dc=***&quot; section</span><br><span class="line">dn: dc=iamzhl,dc=top</span><br><span class="line">objectClass: top</span><br><span class="line">objectClass: dcObject</span><br><span class="line">objectclass: organization</span><br><span class="line">o: iamzhl</span><br><span class="line">dc: iamzhl</span><br><span class="line"></span><br><span class="line">dn: cn=Manager,dc=iamzhl,dc=top</span><br><span class="line">objectClass: organizationalRole</span><br><span class="line">cn: Manager</span><br><span class="line">description: Directory Manager</span><br><span class="line"></span><br><span class="line">dn: ou=People,dc=iamzhl,dc=top</span><br><span class="line">objectClass: organizationalUnit</span><br><span class="line">ou: People</span><br><span class="line"></span><br><span class="line">dn: ou=Group,dc=iamzhl,dc=top</span><br><span class="line">objectClass: organizationalUnit</span><br><span class="line">ou: Group</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f basedomain.ldif</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/d1/46842e7f601199c0f78da4d97d30ad.jpg" alt></p><h2 id="添加一个用户"><a href="#添加一个用户" class="headerlink" title="添加一个用户"></a>添加一个用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># slappasswd </span></span><br><span class="line"><span class="comment"># vi ldapuser.ldif</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># create new</span><br><span class="line"># replace to your own domain name for &quot;dc=***,dc=***&quot; section</span><br><span class="line">dn: uid=cent,ou=People,dc=iamzhl,dc=top</span><br><span class="line">objectClass: inetOrgPerson</span><br><span class="line">objectClass: posixAccount</span><br><span class="line">objectClass: shadowAccount</span><br><span class="line">cn: Cent</span><br><span class="line">sn: Linux</span><br><span class="line">userPassword: &#123;SSHA&#125;xxxxxxxxxxxxxxxxx</span><br><span class="line">loginShell: /bin/bash</span><br><span class="line">uidNumber: 1000</span><br><span class="line">gidNumber: 1000</span><br><span class="line">homeDirectory: /home/cent</span><br><span class="line"></span><br><span class="line">dn: cn=cent,ou=Group,dc=iamzhl,dc=top</span><br><span class="line">objectClass: posixGroup</span><br><span class="line">cn: Cent</span><br><span class="line">gidNumber: 1000</span><br><span class="line">memberUid: cent</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f ldapuser.ldif</span></span><br></pre></td></tr></table></figure><h2 id="添加本机的用户和群组到ldap目录"><a href="#添加本机的用户和群组到ldap目录" class="headerlink" title="添加本机的用户和群组到ldap目录"></a>添加本机的用户和群组到ldap目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi ldapuser.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> extract <span class="built_in">local</span> users and groups who have 1000-9999 digit UID</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> replace <span class="string">"SUFFIX=***"</span> to your own domain name</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> this is an example</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SUFFIX='dc=iamzhl,dc=top'</span><br><span class="line">LDIF='ldapuser.ldif'</span><br><span class="line"></span><br><span class="line">echo -n &gt; $LDIF</span><br><span class="line">GROUP_IDS=()</span><br><span class="line">grep "x:[1-9][0-9][0-9][0-9]:" /etc/passwd | (while read TARGET_USER</span><br><span class="line">do</span><br><span class="line">    USER_ID="$(echo "$TARGET_USER" | cut -d':' -f1)"</span><br><span class="line"></span><br><span class="line">    USER_NAME="$(echo "$TARGET_USER" | cut -d':' -f5 | cut -d' ' -f1,2)"</span><br><span class="line">    [ ! "$USER_NAME" ] &amp;&amp; USER_NAME="$USER_ID"</span><br><span class="line"></span><br><span class="line">    LDAP_SN="$(echo "$USER_NAME" | cut -d' ' -f2)"</span><br><span class="line">    [ ! "$LDAP_SN" ] &amp;&amp; LDAP_SN="$USER_NAME"</span><br><span class="line"></span><br><span class="line">    LASTCHANGE_FLAG="$(grep "$&#123;USER_ID&#125;:" /etc/shadow | cut -d':' -f3)"</span><br><span class="line">    [ ! "$LASTCHANGE_FLAG" ] &amp;&amp; LASTCHANGE_FLAG="0"</span><br><span class="line"></span><br><span class="line">    SHADOW_FLAG="$(grep "$&#123;USER_ID&#125;:" /etc/shadow | cut -d':' -f9)"</span><br><span class="line">    [ ! "$SHADOW_FLAG" ] &amp;&amp; SHADOW_FLAG="0"</span><br><span class="line"></span><br><span class="line">    GROUP_ID="$(echo "$TARGET_USER" | cut -d':' -f4)"</span><br><span class="line">    [ ! "$(echo "$&#123;GROUP_IDS[@]&#125;" | grep "$GROUP_ID")" ] &amp;&amp; GROUP_IDS=("$&#123;GROUP_IDS[@]&#125;" "$GROUP_ID")</span><br><span class="line"></span><br><span class="line">    echo "dn: uid=$USER_ID,ou=People,$SUFFIX" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: inetOrgPerson" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: posixAccount" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: shadowAccount" &gt;&gt; $LDIF</span><br><span class="line">    echo "sn: $LDAP_SN" &gt;&gt; $LDIF</span><br><span class="line">    echo "givenName: $(echo "$USER_NAME" | awk '&#123;print $1&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "cn: $USER_NAME" &gt;&gt; $LDIF</span><br><span class="line">    echo "displayName: $USER_NAME" &gt;&gt; $LDIF</span><br><span class="line">    echo "uidNumber: $(echo "$TARGET_USER" | cut -d':' -f3)" &gt;&gt; $LDIF</span><br><span class="line">    echo "gidNumber: $(echo "$TARGET_USER" | cut -d':' -f4)" &gt;&gt; $LDIF</span><br><span class="line">    echo "userPassword: &#123;crypt&#125;$(grep "$&#123;USER_ID&#125;:" /etc/shadow | cut -d':' -f2)" &gt;&gt; $LDIF</span><br><span class="line">    echo "gecos: $USER_NAME" &gt;&gt; $LDIF</span><br><span class="line">    echo "loginShell: $(echo "$TARGET_USER" | cut -d':' -f7)" &gt;&gt; $LDIF</span><br><span class="line">    echo "homeDirectory: $(echo "$TARGET_USER" | cut -d':' -f6)" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowExpire: $(passwd -S "$USER_ID" | awk '&#123;print $7&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowFlag: $SHADOW_FLAG" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowWarning: $(passwd -S "$USER_ID" | awk '&#123;print $6&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowMin: $(passwd -S "$USER_ID" | awk '&#123;print $4&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowMax: $(passwd -S "$USER_ID" | awk '&#123;print $5&#125;')" &gt;&gt; $LDIF</span><br><span class="line">    echo "shadowLastChange: $LASTCHANGE_FLAG" &gt;&gt; $LDIF</span><br><span class="line">    echo &gt;&gt; $LDIF</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for TARGET_GROUP_ID in "$&#123;GROUP_IDS[@]&#125;"</span><br><span class="line">do</span><br><span class="line">    LDAP_CN="$(grep ":$&#123;TARGET_GROUP_ID&#125;:" /etc/group | cut -d':' -f1)"</span><br><span class="line"></span><br><span class="line">    echo "dn: cn=$LDAP_CN,ou=Group,$SUFFIX" &gt;&gt; $LDIF</span><br><span class="line">    echo "objectClass: posixGroup" &gt;&gt; $LDIF</span><br><span class="line">    echo "cn: $LDAP_CN" &gt;&gt; $LDIF</span><br><span class="line">    echo "gidNumber: $TARGET_GROUP_ID" &gt;&gt; $LDIF</span><br><span class="line"></span><br><span class="line">    for MEMBER_UID in $(grep ":$&#123;TARGET_GROUP_ID&#125;:" /etc/passwd | cut -d':' -f1,3)</span><br><span class="line">    do</span><br><span class="line">        UID_NUM=$(echo "$MEMBER_UID" | cut -d':' -f2)</span><br><span class="line">        [ $UID_NUM -ge 1000 -a $UID_NUM -le 9999 ] &amp;&amp; echo "memberUid: $(echo "$MEMBER_UID" | cut -d':' -f1)" &gt;&gt; $LDIF</span><br><span class="line">    done</span><br><span class="line">    echo &gt;&gt; $LDIF</span><br><span class="line">done</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sh ldapuser.sh </span></span><br><span class="line"><span class="comment"># ldapadd -x -D cn=Manager,dc=iamzhl,dc=top -W -f ldapuser.ldif</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/d5/aaa70f4f22ad6ee40fa74bf027bd4b.jpg" alt></p><h2 id="利用Apache-Directory-Studio进行管理"><a href="#利用Apache-Directory-Studio进行管理" class="headerlink" title="利用Apache Directory Studio进行管理"></a>利用Apache Directory Studio进行管理</h2><p>Apache Directory Studio 是一个 LDAP 的工具平台，用来连接到任何 LDAP 服务器并进行管理和开发工作。其可以实现以下功能：</p><ul><li>LDAP浏览器</li><li>LDIF编辑器</li><li>嵌入式 ApacheDS</li><li>ACI编辑器</li><li>属性管理</li></ul><p>下面以新建连接和新增用户为例进行演示</p><p>如图，点击 New Connection 新建一个 ldap 连接</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/12/d782ef026127039c48173727402ae1.jpg" alt></p><p>依次输入连接名、主机名以及端口号后点击<code>Next</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b4/8238cc5d14bd32906fb1bf4d2fb726.jpg" alt></p><p>再依次输入绑定的<code>DN</code>和密码后点击<code>Finish</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/6d/33932a9dccd444922051239295a40e.jpg" alt></p><p>新建一个 openLDAP 用户 test / 123456</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/0e/e69bb807212cc32a80cb28c4b927e1.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/01/ab9d40ac8d216e3e2b99a287082fa7.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/de8c6a3b3854b28bca29d84e338f9f.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/53/287f9a9a0cfe1c25c3c66d775fb214.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/af/af3a63b732070ac51f27b10f6e2dca.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b3/da28177e70ab2cb77421d6ae16ca95.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/70/749184f3907b06951093fc2a944e42.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c0/5ddca5f311e7f8b2ba598480c3636e.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e7/8a989532254213ac72efc235676a2a.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2e/ebca96c81bd780e9b90d9bdbd3415a.jpg" alt></p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>本文多处参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlbndlbnhpb25nL2FydGljbGUvZGV0YWlscy83Njg1NTA0Nw==" title="https://blog.csdn.net/wenwenxiong/article/details/76855047">centos7下ldap服务搭建<i class="fa fa-external-link"></i></span>，感谢<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlbndlbnhpb25n" title="https://blog.csdn.net/wenwenxiong">wenwenxiong<i class="fa fa-external-link"></i></span>的分享。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS安装部署 openLDAP
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="openLDAP" scheme="https://iamzhl.top/tags/openLDAP/"/>
    
  </entry>
  
  <entry>
    <title>CAS 5.3.4 安装部署</title>
    <link href="https://iamzhl.top/CAS-5-3-4-install-and-deploy.html"/>
    <id>https://iamzhl.top/CAS-5-3-4-install-and-deploy.html</id>
    <published>2018-11-24T12:59:49.000Z</published>
    <updated>2019-03-11T16:21:49.883Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CAS</code>全称<code>Central Authentication Service</code>，中央认证服务，一种独立开放指令协议。CAS 是 Yale 大学发起的一个开源项目，旨在为 Web 应用系统提供一种可靠的单点登录方法，CAS 在 2004 年 12 月正式成为 JA-SIG 的一个项目，目前是一种企业级的单点登录解决方案。</p><h2 id="协议介绍"><a href="#协议介绍" class="headerlink" title="协议介绍"></a>协议介绍</h2><p>关于 oauth2.0 的原理及介绍可以参考<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTQvMDUvb2F1dGhfMl8wLmh0bWw=" title="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html">理解OAuth 2.0 - 阮一峰的网络日志<i class="fa fa-external-link"></i></span>，这里不做赘述。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p><code>CAS</code>是基于Spring写的，因此需要准备Java环境，官方提供了一种非常好用的编译方法，我们在使用时可以根据自己的需求来决定依赖的选择，本文主要以openLDAP和oauth为例。编译时需要maven环境。运行时需要 Tomcat 容器，因此需要提前准备好 Tomcat 环境。后续我们会整合 openLDAP 做统一用户管理，因此请先安装好 openLDAP。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>首先去项目地址下载编译模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/apereo/cas-overlay-template</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone https://github.com/apereo/cas-overlay-template</span></span><br><span class="line"><span class="comment"># cd cas-overlay-template</span></span><br><span class="line"><span class="comment"># vi pom.xml</span></span><br></pre></td></tr></table></figure><p>找到下面的部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-webapp$&#123;app.server&#125;&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;type&gt;war&lt;/type&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    ...Additional dependencies may be placed here...</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>将注释的部分替换为我们需要的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-webapp$&#123;app.server&#125;&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;type&gt;war&lt;/type&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-oauth-webflow&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;mysql.driver.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jdbc&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jdbc-drivers&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-rest&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-ldap&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jpa-ticket-registry&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-jpa-service-registry&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-rest-services&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apereo.cas&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;cas-server-support-json-service-registry&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;cas.version&#125;&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>上面例子中我添加了openLDAP oauth2.0 mysql的依赖，具体请按照自己需求选择。</p><p>编辑好pom文件后，执行下面的命令开始编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mvn clean package</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/42/20e1a20a856b8d98083544240e949b.jpg" alt></p><p>过程很长，需要联网。如上图所示，编译完成后，会在此目录下生成一个 target 目录，我们需要的 war 包就在里面。</p><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><p>安装过程就比较简单了，将 war 包保存至 Tomcat 下 webapps 目录下，然后运行 Tomcat 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># startup.sh</span></span><br><span class="line"><span class="comment"># tail -f /usr/local/tomcat/logs/catalina.out</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b7/bfb043dc833a972751ad396ccc63c5.jpg" alt></p><p>运行完成后日志如上图所示，然后我们打开 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo4MDgwL2Nhcw==" title="http://localhost:8080/cas">http://localhost:8080/cas<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/91/6097314bc496dd2404ecc7ccac8a28.jpg" alt></p><p>默认的用户名密码为 casuser / Mellon，输入用户名密码点击登录，登录成功后如图跳转至登录成功页面</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/41/4c9e1c4a3a9632ffd3475df7798005.jpg" alt></p><p>安装至此完成</p><h2 id="开启-oauth-2-0-授权"><a href="#开启-oauth-2-0-授权" class="headerlink" title="开启 oauth 2.0 授权"></a>开启 oauth 2.0 授权</h2><blockquote><p>application.properties 增加配置文件如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cas.authn.oauth.refreshToken.timeToKillInSeconds=2592000</span><br><span class="line">cas.authn.oauth.code.timeToKillInSeconds=30</span><br><span class="line">cas.authn.oauth.code.numberOfUses=1</span><br><span class="line">cas.authn.oauth.accessToken.releaseProtocolAttributes=true</span><br><span class="line">cas.authn.oauth.accessToken.timeToKillInSeconds=7200</span><br><span class="line">cas.authn.oauth.accessToken.maxTimeToLiveInSeconds=28800</span><br><span class="line">cas.authn.oauth.grants.resourceOwner.requireServiceHeader=true</span><br><span class="line">cas.authn.oauth.userProfileViewType=NESTED</span><br></pre></td></tr></table></figure><blockquote><p>增加 OAUTH-1002.json service 注册文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/servies/OAUTH-1002.json</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;@class&quot; : &quot;org.apereo.cas.support.oauth.services.OAuthRegisteredService&quot;,</span><br><span class="line">  &quot;clientId&quot;: &quot;20181124&quot;,</span><br><span class="line">  &quot;clientSecret&quot;: &quot;123456&quot;,</span><br><span class="line">  &quot;serviceId&quot; : &quot;^(https|http|imaps)://.*&quot;,</span><br><span class="line">  &quot;name&quot; : &quot;OAuthService&quot;,</span><br><span class="line">  &quot;id&quot; : 1002</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>重启 Tomcat 测试</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown.sh                   </span></span><br><span class="line">Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr</span><br><span class="line">Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/usr/<span class="built_in">local</span>/tomcat/bin/tomcat-juli.jar</span><br><span class="line"><span class="comment"># startup.sh </span></span><br><span class="line">Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr</span><br><span class="line">Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/usr/<span class="built_in">local</span>/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>重启完成后，我们利用本博客作为目标访问网址进行测试，浏览器打开 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo4MDgwL2Nhcy9vYXV0aDIuMC9hdXRob3JpemU/cmVzcG9uc2VfdHlwZT1jb2RlJmFtcDtjbGllbnRfaWQ9MjAxODExMjQmYW1wO3JlZGlyZWN0X3VyaT1odHRwczovL2Jsb2cuaWFtemhsLnRvcA==" title="http://localhost:8080/cas/oauth2.0/authorize?response_type=code&amp;client_id=20181124&amp;redirect_uri=https://blog.iamzhl.top">http://localhost:8080/cas/oauth2.0/authorize?response_type=code&amp;client_id=20181124&amp;redirect_uri=https://blog.iamzhl.top<i class="fa fa-external-link"></i></span></p><p>发现跳转了一个示例网址</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b1/603980e19d03912f2c01b3a7c94b80.jpg" alt></p><p>这时我们需要设置一下两个变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><p>加入下面两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cas.server.name=http://devops.iamzhl.top:8080/cas</span><br><span class="line">cas.server.prefix=$&#123;cas.server.name&#125;</span><br></pre></td></tr></table></figure><p>请将 devops.iamzhl.top 改为你的 ip，然后重启 Tomcat 再次测试</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/66/574e93fdcc2b8ab686a46ec772627d.jpg" alt></p><p>这次能正常跳转了，但是出现了<code>未认证授权的服务</code>，这是因为我们没有开启 http 协议支持，因此只要再让我们的 CAS Server 支持 http 认证就行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><p>添加下面两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cas.tgc.secure=false</span><br><span class="line">cas.serviceRegistry.initFromJson=true</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/services/HTTPSandIMAPS-10000001.json</span></span><br></pre></td></tr></table></figure><p>将<code>&quot;serviceId&quot; : &quot;^(https|imaps)://.*&quot;,</code>改为<code>&quot;serviceId&quot; : &quot;^(https|http|imaps)://.*&quot;,</code>，如图</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2b/cca4a5df53dd47b94e73664bdc8ff3.jpg" alt></p><p>再次登录测试</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f5/c1a598cd7ecd0a96df200f38659aec.jpg" alt></p><p>这次终于正常了，输入用户名密码点击登录，就会跳转到授权页面</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/ae/c40e776bfcecf0ca8b48c4e9582dbc.jpg" alt></p><p>点击 Allow 即可成功授权跳转至本博客，我们会注意到 uri 会携带一个 code，这就是 CAS 目前在 oauth2.0 授权中最为完善的 code 授权模式了。</p><p>至此， CAS 5.3 集成 oauth2.0 的授权已经搭建完毕</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/13/f1a8df13c6ee93210a970833c5059a.jpg" alt></p><h2 id="整合-openLDAP"><a href="#整合-openLDAP" class="headerlink" title="整合 openLDAP"></a>整合 openLDAP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/local/tomcat/webapps/cas/WEB-INF/classes/application.properties</span></span><br></pre></td></tr></table></figure><p>注释掉默认的 <code>cas.authn.accept.users</code> 认证方式并添加与<code>LDAP Server</code>连接的配置(请根据自己的<code>LDAP</code>服务器信息进行修改)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"># CAS Authentication Credentials</span><br><span class="line">#</span><br><span class="line"># cas.authn.accept.users=casuser::Mellon</span><br><span class="line">cas.authn.ldap[0].principalAttributeList=sn,cn:commonName,givenName,eduPersonTargettedId:SOME_IDENTIFIER</span><br><span class="line">cas.authn.ldap[0].collectDnAttribute=false</span><br><span class="line">cas.authn.ldap[0].principalDnAttributeName=principalLdapDn</span><br><span class="line">cas.authn.ldap[0].allowMultiplePrincipalAttributeValues=true</span><br><span class="line">cas.authn.ldap[0].allowMissingPrincipalAttributeValue=true</span><br><span class="line">cas.authn.ldap[0].credentialCriteria=</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.uid=uid</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.displayName=displayName</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.cn=commonName</span><br><span class="line">cas.authn.attributeRepository.ldap[0].attributes.affiliation=groupMembership</span><br><span class="line">cas.authn.ldap[0].ldapUrl=ldap://devops.iamzhl.top:389</span><br><span class="line">cas.authn.ldap[0].bindDn=cn=Manager,dc=iamzhl,dc=top</span><br><span class="line">cas.authn.ldap[0].bindCredential=passwd</span><br><span class="line">cas.authn.ldap[0].poolPassivator=BIND</span><br><span class="line">cas.authn.ldap[0].connectionStrategy=</span><br><span class="line">cas.authn.ldap[0].providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider</span><br><span class="line">cas.authn.ldap[0].connectTimeout=5000</span><br><span class="line">cas.authn.ldap[0].trustCertificates=</span><br><span class="line">cas.authn.ldap[0].keystore=</span><br><span class="line">cas.authn.ldap[0].keystorePassword=</span><br><span class="line">cas.authn.ldap[0].keystoreType=PKCS12</span><br><span class="line">cas.authn.ldap[0].minPoolSize=3</span><br><span class="line">cas.authn.ldap[0].maxPoolSize=10</span><br><span class="line">cas.authn.ldap[0].validateOnCheckout=true</span><br><span class="line">cas.authn.ldap[0].validatePeriodically=true</span><br><span class="line">cas.authn.ldap[0].validatePeriod=500</span><br><span class="line">cas.authn.ldap[0].validateTimeout=5000</span><br><span class="line">cas.authn.ldap[0].failFast=true</span><br><span class="line">cas.authn.ldap[0].idleTime=500</span><br><span class="line">cas.authn.ldap[0].prunePeriod=24</span><br><span class="line">cas.authn.ldap[0].blockWaitTime=5000</span><br><span class="line">cas.authn.ldap[0].useSsl=false</span><br><span class="line">cas.authn.ldap[0].useStartTls=false</span><br><span class="line">cas.authn.ldap[0].responseTimeout=8000</span><br><span class="line">cas.authn.ldap[0].allowMultipleDns=false</span><br><span class="line">cas.authn.ldap[0].name=</span><br><span class="line">cas.authn.ldap[0].type=AUTHENTICATED</span><br><span class="line">cas.authn.ldap[0].searchFilter=uid=&#123;user&#125;</span><br><span class="line">#cas.authn.ldap[0].enhanceWithEntryResolver=true</span><br><span class="line">cas.authn.ldap[0].derefAliases=NEVER</span><br><span class="line">cas.authn.ldap[0].dnFormat=uid=%s,ou=People,dc=iamzhl,dc=top</span><br><span class="line">cas.authn.ldap[0].baseDn=ou=People,dc=iamzhl,dc=top</span><br></pre></td></tr></table></figure><p>重启 Tomcat 查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shutdown.sh</span></span><br><span class="line"><span class="comment"># startup.sh</span></span><br><span class="line"><span class="comment"># tail -f /usr/local/tomcat/logs/catalina.out</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f2/308f5dc1de191625e6087c1d040824.jpg" alt></p><p>新建一个 openLDAP 用户 test / 123456</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/0e/e69bb807212cc32a80cb28c4b927e1.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/01/ab9d40ac8d216e3e2b99a287082fa7.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/de8c6a3b3854b28bca29d84e338f9f.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/53/287f9a9a0cfe1c25c3c66d775fb214.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/af/af3a63b732070ac51f27b10f6e2dca.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b3/da28177e70ab2cb77421d6ae16ca95.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/70/749184f3907b06951093fc2a944e42.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c0/5ddca5f311e7f8b2ba598480c3636e.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e7/8a989532254213ac72efc235676a2a.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2e/ebca96c81bd780e9b90d9bdbd3415a.jpg" alt></p><p>打开 CAS 网址测试 <code>http://devops.iamzhl.top:8080/cas/login</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/48/9f8dc131728eda81cd522d5db954d4.jpg" alt></p><p>输入用户名密码登陆成功</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/89/2e8366b3accc1248a4043079a958a3.jpg" alt></p><p>日志输出如下</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c3/cf45af8f7ab6b3aa80267f95cb6a42.jpg" alt></p><p>至此，CAS 5.3 整合 openLDAP 结束。</p><h2 id="自定义登出跳转界面"><a href="#自定义登出跳转界面" class="headerlink" title="自定义登出跳转界面"></a>自定义登出跳转界面</h2><p>某些时候，我们可能需要对登出进行定制，比如等出后跳转到等出界面，在<code>CAS 5.3</code>以后的版本中，直接修改前端的<code>HTML</code>页面无法完成登出的定制跳转，不过官方提供了更为方便的设置方法，我们可以通过修改配置文件<code>application.properties</code>来实现，在文件中添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cas.logout.followServiceRedirects=true</span><br><span class="line">cas.logout.redirectParameter=service</span><br><span class="line">cas.logout.redirectUrl=https://default.cas.com</span><br><span class="line">cas.logout.confirmLogout=false</span><br><span class="line">cas.logout.removeDescendantTickets=true</span><br></pre></td></tr></table></figure><p><em>请根据需要将其中的<code>redirectUrl</code>改为要定制的登出跳转链接</em></p><h2 id="自定义默认的登录跳转界面"><a href="#自定义默认的登录跳转界面" class="headerlink" title="自定义默认的登录跳转界面"></a>自定义默认的登录跳转界面</h2><p>登出跳转可以定制，登录的也可以，有些时候，可能需要在直接访问的<code>CAS</code>的时候，登陆成功后直接跳转到指定的界面，比如直接访问<code>http://devops.iamzhl.top:8080/cas</code>，需要跳转到<code>http://devops.iamzhl.top/index.html</code>，那么就可以在<code>application.properties</code>中添加以下属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cas.view.defaultRedirectUrl=http://devops.iamzhl.top/index.html</span><br></pre></td></tr></table></figure><h2 id="自定义登录界面主题"><a href="#自定义登录界面主题" class="headerlink" title="自定义登录界面主题"></a>自定义登录界面主题</h2><p>在<code>cas/WEB-INF/classes/static/themes</code>中新建一个文件夹以要设置的主题名命名，比如<code>devops</code>，在此目录下建立<code>js</code>、<code>css</code>以及<code>images</code>等静态资源文件夹，将定制的静态资源保存好，结构如下</p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fzqqbpvu1cj31p818k4au.jpg" alt></p><p>然后在<code>application.properties</code>添加以下属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cas.theme.defaultThemeName=devops</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CAS 5.3.4 安装部署
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CAS" scheme="https://iamzhl.top/tags/CAS/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 安装部署邮件服务器</title>
    <link href="https://iamzhl.top/Install-and-deploy-mail-server-on-CentOS-7.html"/>
    <id>https://iamzhl.top/Install-and-deploy-mail-server-on-CentOS-7.html</id>
    <published>2018-10-19T13:31:24.000Z</published>
    <updated>2019-03-11T16:21:49.893Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h1 id="本文环境"><a href="#本文环境" class="headerlink" title="本文环境"></a>本文环境</h1><p>CentOS 7.2 1511</p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><h2 id="安装postfix"><a href="#安装postfix" class="headerlink" title="安装postfix"></a>安装postfix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install postfix</span></span><br></pre></td></tr></table></figure><p>如果机器已经安装了sendmail，需要将其卸载，下面两条命令均可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y remove sendmail</span></span><br><span class="line"><span class="comment"># rpm -e sendmail</span></span><br></pre></td></tr></table></figure><p>修改MTA(默认邮件代理)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alternatives --config mta</span></span><br></pre></td></tr></table></figure><p>检查是否配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alternatives --display mta</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/519a03d59c7bc4ff363f66a8620736.jpg" alt></p><p>这里我已经安装过postfix了</p><h2 id="安装dovecot"><a href="#安装dovecot" class="headerlink" title="安装dovecot"></a>安装dovecot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install dovecot</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/fd/d041b10136a8aea22008556cba508a.jpg" alt></p><h2 id="配置postfix"><a href="#配置postfix" class="headerlink" title="配置postfix"></a>配置postfix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/postfix/main.cf</span></span><br></pre></td></tr></table></figure><p>修改以下参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">myhostname = mail.zhanghl.cn  # 取消注释，设置hostname</span><br><span class="line">mydomain = zhanghl.cn  # 取消注释，设置域名</span><br><span class="line">myorigin = $mydomain  # 取消注释</span><br><span class="line">inet_interfaces = all  # 修改为all</span><br><span class="line">inet_protocols = ipv4  # 修改ipv4，如果支持ipv6，则可以为all</span><br><span class="line">mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain # 修改在最后添加$mydomain</span><br><span class="line">mynetworks = 127.0.0.0/8, 10.0.0.0/24  # 取消注释，指定内网和本地的IP地址范围</span><br><span class="line">home_mailbox = Maildir/  # 取消注释，邮件保存目录</span><br><span class="line">smtpd_banner = $myhostname ESMTP $mail_name ($mail_version)  # 取消注释，邮件服务器欢迎信息</span><br></pre></td></tr></table></figure><p>文件最后添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Setup max mail attachment to 10M</span><br><span class="line">message_size_limit = 10485760</span><br><span class="line"># Setup max capacity of Inbox to 1G</span><br><span class="line">mailbox_size_limit = 1073741824</span><br><span class="line"># SMTP Authentication</span><br><span class="line">smtpd_sasl_type = dovecot</span><br><span class="line">smtpd_sasl_path = private/auth</span><br><span class="line">smtpd_sasl_auth_enable = yes</span><br><span class="line">smtpd_sasl_security_options = noanonymous</span><br><span class="line">smtpd_sasl_local_domain = $myhostname</span><br><span class="line">smtpd_recipient_restrictions = permit_mynetworks,permit_auth_destination,permit_sasl_authenticated,reject</span><br></pre></td></tr></table></figure><p>启动并设置自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start postfix  //启动</span></span><br><span class="line"><span class="comment"># systemctl enable postfix  //自启动</span></span><br></pre></td></tr></table></figure><h2 id="配置dovecot"><a href="#配置dovecot" class="headerlink" title="配置dovecot"></a>配置dovecot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/dovecot.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen = *  //取消注释并修改</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/conf.d/10-auth.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">disable_plaintext_auth = no  //取消注释并修改</span><br><span class="line">auth_mechanisms = plain login  //修改添加login</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/conf.d/10-mail.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail_location = maildir:~/Maildir  //修改设置邮件存储位置</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dovecot/conf.d/10-master.conf</span></span><br></pre></td></tr></table></figure><p>取消注释并添加user和group属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">unix_listener /var/spool/postfix/private/auth &#123;</span><br><span class="line">    mode = 0666</span><br><span class="line">    user = postfix</span><br><span class="line">    group = postfix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动并设置自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start dovecot  //启动</span></span><br><span class="line"><span class="comment"># systemctl enable dovecot  //自启动</span></span><br></pre></td></tr></table></figure><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>添加一个子域名mail，A记录解析到服务器IP。</p><p>再添加一个MX记录，主机记录为空，记录值为上面解析的二级域名mail.zhanghl.cn，优先级10。</p><p>注意：解析生效可能需要一段时间。</p><p>也可以修改/etc/hosts添加邮件服务器域名实现。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/hosts</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e2/0e95d3345f60b59bffdf377e55fc3b.jpg" alt></p><h2 id="测试邮箱"><a href="#测试邮箱" class="headerlink" title="测试邮箱"></a>测试邮箱</h2><p>首先安装telnet，由于CentOS 7已经默认没有了xinetd和telnet，因此需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install xinetd telnet telnet-server</span></span><br></pre></td></tr></table></figure><p>设置xinetd启动并自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start xinetd</span></span><br><span class="line"><span class="comment"># systemctl enable xinetd</span></span><br></pre></td></tr></table></figure><p>利用telnet测试邮件服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">[zhanghl@centos-7 ~]$ telnet zhanghl.cn 25</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to zhanghl.cn.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line">220 mail.zhanghl.cn ESMTP Postfix (2.10.1)</span><br><span class="line">mail from:zhanghl</span><br><span class="line">250 2.1.0 Ok</span><br><span class="line">rcpt to:root</span><br><span class="line">250 2.1.5 Ok</span><br><span class="line">data</span><br><span class="line">354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</span><br><span class="line">Hello, i<span class="string">'m zhanghl!</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">250 2.0.0 Ok: queued as 731144191B7F</span></span><br><span class="line"><span class="string">quit</span></span><br><span class="line"><span class="string">221 2.0.0 Bye</span></span><br><span class="line"><span class="string">Connection closed by foreign host.</span></span><br><span class="line"><span class="string">[zhanghl@centos-7 ~]$ telnet zhanghl.cn 110</span></span><br><span class="line"><span class="string">Trying 127.0.0.1...</span></span><br><span class="line"><span class="string">Connected to zhanghl.cn.</span></span><br><span class="line"><span class="string">Escape character is '</span>^]<span class="string">'.</span></span><br><span class="line"><span class="string">+OK Dovecot ready.</span></span><br><span class="line"><span class="string">user zhanghl</span></span><br><span class="line"><span class="string">+OK</span></span><br><span class="line"><span class="string">pass 123456</span></span><br><span class="line"><span class="string">+OK Logged in.</span></span><br><span class="line"><span class="string">list</span></span><br><span class="line"><span class="string">+OK 1 messages:</span></span><br><span class="line"><span class="string">1 2381</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">retr 1</span></span><br><span class="line"><span class="string">+OK 2381 octets</span></span><br><span class="line"><span class="string">Return-Path: &lt;&gt;</span></span><br><span class="line"><span class="string">X-Original-To: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Delivered-To: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Received: by mail.zhanghl.cn (Postfix)</span></span><br><span class="line"><span class="string">id 61E594191B92; Fri, 19 Oct 2018 22:44:27 +0800 (CST)</span></span><br><span class="line"><span class="string">Date: Fri, 19 Oct 2018 22:44:27 +0800 (CST)</span></span><br><span class="line"><span class="string">From: MAILER-DAEMON@zhanghl.cn (Mail Delivery System)</span></span><br><span class="line"><span class="string">Subject: Undelivered Mail Returned to Sender</span></span><br><span class="line"><span class="string">To: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Auto-Submitted: auto-replied</span></span><br><span class="line"><span class="string">MIME-Version: 1.0</span></span><br><span class="line"><span class="string">Content-Type: multipart/report; report-type=delivery-status;</span></span><br><span class="line"><span class="string">boundary="731144191B7F.1539960267/mail.zhanghl.cn"</span></span><br><span class="line"><span class="string">Message-Id: &lt;20181019144427.61E594191B92@mail.zhanghl.cn&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This is a MIME-encapsulated message.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--731144191B7F.1539960267/mail.zhanghl.cn</span></span><br><span class="line"><span class="string">Content-Description: Notification</span></span><br><span class="line"><span class="string">Content-Type: text/plain; charset=us-ascii</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This is the mail system at host mail.zhanghl.cn.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">I'</span>m sorry to have to inform you that your message could not</span><br><span class="line">be delivered to one or more recipients. It<span class="string">'s attached below.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For further assistance, please send mail to postmaster.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you do so, please include this problem report. You can</span></span><br><span class="line"><span class="string">delete your own text from the attached returned message.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                   The mail system</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;root@zhanghl.cn&gt; (expanded from &lt;root&gt;): maildir delivery failed: create</span></span><br><span class="line"><span class="string">    maildir file /root/Maildir/tmp/1539960267.P14995.centos-7.shared:</span></span><br><span class="line"><span class="string">    Permission denied</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--731144191B7F.1539960267/mail.zhanghl.cn</span></span><br><span class="line"><span class="string">Content-Description: Delivery report</span></span><br><span class="line"><span class="string">Content-Type: message/delivery-status</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reporting-MTA: dns; mail.zhanghl.cn</span></span><br><span class="line"><span class="string">X-Postfix-Queue-ID: 731144191B7F</span></span><br><span class="line"><span class="string">X-Postfix-Sender: rfc822; zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string">Arrival-Date: Fri, 19 Oct 2018 22:43:58 +0800 (CST)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Final-Recipient: rfc822; root@zhanghl.cn</span></span><br><span class="line"><span class="string">Original-Recipient: rfc822;root</span></span><br><span class="line"><span class="string">Action: failed</span></span><br><span class="line"><span class="string">Status: 5.2.0</span></span><br><span class="line"><span class="string">Diagnostic-Code: X-Postfix; maildir delivery failed: create maildir file</span></span><br><span class="line"><span class="string">    /root/Maildir/tmp/1539960267.P14995.centos-7.shared: Permission denied</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">--731144191B7F.1539960267/mail.zhanghl.cn</span></span><br><span class="line"><span class="string">Content-Description: Undelivered Message</span></span><br><span class="line"><span class="string">Content-Type: message/rfc822</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Return-Path: &lt;zhanghl@zhanghl.cn&gt;</span></span><br><span class="line"><span class="string">Received: from mail.zhanghl.cn (mail.zhanghl.cn [127.0.0.1])</span></span><br><span class="line"><span class="string">by mail.zhanghl.cn (Postfix) with SMTP id 731144191B7F</span></span><br><span class="line"><span class="string">for &lt;root&gt;; Fri, 19 Oct 2018 22:43:58 +0800 (CST)</span></span><br><span class="line"><span class="string">Message-Id: &lt;20181019144410.731144191B7F@mail.zhanghl.cn&gt;</span></span><br><span class="line"><span class="string">Date: Fri, 19 Oct 2018 22:43:58 +0800 (CST)</span></span><br><span class="line"><span class="string">From: zhanghl@zhanghl.cn</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Hello, i'</span>m zhanghl!</span><br><span class="line"></span><br><span class="line">--731144191B7F.1539960267/mail.zhanghl.cn--</span><br><span class="line">.</span><br><span class="line">quit</span><br><span class="line">+OK Logging out.</span><br><span class="line">Connection closed by foreign host.</span><br><span class="line">[zhanghl@centos-7 ~]$</span><br></pre></td></tr></table></figure><h2 id="使用邮箱"><a href="#使用邮箱" class="headerlink" title="使用邮箱"></a>使用邮箱</h2><p>一切都弄好以后，就可以使用Foxmail等第三方软件来收发邮件了。在这里需要说一下，系统用户就是邮件的用户，例如root，就是一个邮箱用户，邮箱是<span class="exturl" data-url="bWFpbHRvOnJvb3RAemhhbmdobC5jbg==" title="mailto:root@zhanghl.cn">root@zhanghl.cn<i class="fa fa-external-link"></i></span>，密码就是root的密码，所以需要创建用户，只要使用useradd创建用户，再使用passwd设置密码。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS 7安装部署邮件服务器
    
    </summary>
    
      <category term="运维" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Linux" scheme="https://iamzhl.top/categories/%E8%BF%90%E7%BB%B4/Linux/"/>
    
    
      <category term="运维" scheme="https://iamzhl.top/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Linux" scheme="https://iamzhl.top/tags/Linux/"/>
    
      <category term="SMTP" scheme="https://iamzhl.top/tags/SMTP/"/>
    
      <category term="Mail Server" scheme="https://iamzhl.top/tags/Mail-Server/"/>
    
  </entry>
  
  <entry>
    <title>TestLink安装部署</title>
    <link href="https://iamzhl.top/TestLink-install-and-deploy.html"/>
    <id>https://iamzhl.top/TestLink-install-and-deploy.html</id>
    <published>2018-08-26T11:51:29.000Z</published>
    <updated>2019-03-11T16:21:49.903Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h1 id="TestLink安装部署"><a href="#TestLink安装部署" class="headerlink" title="TestLink安装部署"></a><center>TestLink安装部署</center></h1><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum -y install mysql mysql-server mysql-devel</span></span><br></pre></td></tr></table></figure><p>启动MySQL服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><p>获取安装MySQL时的初始密码并登录MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep 'temporary password' /var/log/mysqld.log</span></span><br><span class="line"><span class="comment"># mysql -u root -p</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global validate_password_policy=0;</span><br><span class="line">mysql&gt; set global validate_password_length=1;</span><br><span class="line">mysql&gt; set password for root@localhost=password(&apos;root&apos;);</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt></p><p>创建testlink用户并创建testlink要用的数据库并把testlink数据库的所有权限赋给testlink用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER &apos;testlink&apos;@&apos;%&apos; IDENTIFIED BY &apos;root&apos;;</span><br><span class="line">mysql&gt; CREATE DATABASE testlink; </span><br><span class="line">mysql&gt; GRANT ALL ON testlink.* TO &apos;testlink&apos;@&apos;%&apos;; </span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>设置MySQL启动与自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable mysqld    //自启动</span></span><br><span class="line"><span class="comment"># systemctl start mysqld     //启动</span></span><br></pre></td></tr></table></figure><h2 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd</span></span><br></pre></td></tr></table></figure><h3 id="启动自启动"><a href="#启动自启动" class="headerlink" title="启动自启动"></a>启动自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl enable httpd  //自启动</span></span><br><span class="line"><span class="comment"># systemctl start httpd   //启动</span></span><br></pre></td></tr></table></figure><h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br><span class="line"><span class="comment"># yum -y install `yum search php | grep php56w | grep -v "===" | grep -v mysqlnd | awk -F '.' '&#123;print $1&#125;'`</span></span><br></pre></td></tr></table></figure><h3 id="测试一下PHP环境"><a href="#测试一下PHP环境" class="headerlink" title="测试一下PHP环境"></a>测试一下PHP环境</h3><p>写一个phpinfo测试php环境是否正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /var/www/html/info.php</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器打开<code>http://IP:httpd端口/info.php</code></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/bf/a51c4fe3482af30d3b54a102c5a844.jpg" alt></p><p>如图，PHP环境安装完成。</p><p><strong>Note:</strong><br>PHP无法正确解析，网页显示源码的解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/php.ini</span><br></pre></td></tr></table></figure><p>将short_open_tag = Off修改为short_open_tag = On，然后重启httpd服务即可</p><h2 id="安装TestLink"><a href="#安装TestLink" class="headerlink" title="安装TestLink"></a>安装TestLink</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://jaist.dl.sourceforge.net/project/testlink/TestLink%201.9/TestLink%201.9.18/testlink-1.9.18.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="解压重命名"><a href="#解压重命名" class="headerlink" title="解压重命名"></a>解压重命名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar zxvf testlink-1.9.18.tar.gz</span></span><br><span class="line"><span class="comment"># mv testlink-1.9.18 testlink</span></span><br><span class="line"><span class="comment"># mv testlink /var/www/html/</span></span><br><span class="line"><span class="comment"># chown -R apache:apache /var/www/html/testlink</span></span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sed -i -e "s/AllowOverride None/AllowOverride All/g" /etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="comment"># sed -i -e "s/DirectoryIndex index.html/DirectoryIndex index.html index.php index.shtm/g" /etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="comment"># sed -i -e "s/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 2400/g" /etc/php.ini</span></span><br><span class="line"><span class="comment"># sed -i -e "s/max_execution_time = 30/max_execution_time = 120/g" /etc/php.ini</span></span><br><span class="line"><span class="comment"># service httpd restart</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/49/3c7f4c9291a6c276e5dad2200d5571.jpg" alt></p><h3 id="新建一些PHP环境要求必备的文件夹并赋予适当权限"><a href="#新建一些PHP环境要求必备的文件夹并赋予适当权限" class="headerlink" title="新建一些PHP环境要求必备的文件夹并赋予适当权限"></a>新建一些PHP环境要求必备的文件夹并赋予适当权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /var/www/html/testlink/gui/templates_c</span></span><br><span class="line"><span class="comment"># mkdir -p /var/testlink/logs/</span></span><br><span class="line"><span class="comment"># mkdir -p /var/testlink/upload_area/</span></span><br><span class="line"><span class="comment"># chmod 777 /var/www/html/testlink/gui/templates_c</span></span><br><span class="line"><span class="comment"># chmod 777 /var/testlink/logs/</span></span><br><span class="line"><span class="comment"># chmod 777 /var/testlink/upload_area/</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/23/c132221e0b416226f6f7df1e63b12c.jpg" alt></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>浏览器打开<code>http://IP:port/testlink/install</code>(将IP换成自己主机IP，端口号换为自己主机的Apache服务端口号)。如图，点击New installation开始安装</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/14/da839143e11bec790a2a77f7247529.jpg" alt></p><p>选中同意协议，continue</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/7c/b33fa4f939e6447fa43f36b5577b43.jpg" alt></p><p>进入系统环境检测阶段，这一步需要根据错误提示进行配置，前面已经在安装php和testlink时解决了，所以现在已经没有错误了，图中橙色的提示可以忽略，点击continue</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/8c/84dad1406d9a22e95913b060326730.jpg" alt></p><p>如图，设定数据库管理员登录账户密码，自定义TestLink的数据库登录账户密码，其余均保持默认，点击Process TestLink Setup</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/58/736d782618beafcda69918ffca7749.jpg" alt></p><p><strong>这里有一点提示，如上图中黑体所说 ，需要手动导入<code>udf0</code>结尾的<code>sql</code>文件，只需在<code>mysql</code>命令行中执行<code>source /var/www/html/testlink/install/sql/mysql/testlink_create_udf0.sql</code>即可，需要说明的是，需要手动修改其中的<code>use</code>字段，如下图，修改为<code>mysql</code>新建的<code>testlink</code>数据库名</strong></p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fytosr0ucnj31p818kk2a.jpg" alt></p><p><em>如果安装到最后出现了打印数据库调试信息，请检查<code>php</code>的<code>mysql</code>模块，命令是<code>php -m | grep mysql</code>，如下图则是正常的</em></p><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fytouqtrwgj31p818k7a4.jpg" alt></p><p><em>如果提示动态库无法加载之类的错误，只需重新安装<code>php-mysql</code>，然后重启<code>php-fpm</code>和<code>httpd</code>即可</em></p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>安装完成网址输入<span class="exturl" data-url="aHR0cDovL0lQL3Rlc3RsaW5r5Y2z5Y+v6Ieq5Yqo6Lez6L2s5Yiw55m75b2V6aG16Z2i77yM6buY6K6k55So5oi3YWRtaW4vYWRtaW4=" title="http://IP/testlink即可自动跳转到登录页面，默认用户admin/admin">http://IP/testlink即可自动跳转到登录页面，默认用户admin/admin<i class="fa fa-external-link"></i></span></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      TestLink安装部署
    
    </summary>
    
      <category term="Linux" scheme="https://iamzhl.top/categories/Linux/"/>
    
      <category term="运维" scheme="https://iamzhl.top/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="TestLink" scheme="https://iamzhl.top/tags/TestLink/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 安装部署 Gerrit</title>
    <link href="https://iamzhl.top/Gerrit-install-and-deploy.html"/>
    <id>https://iamzhl.top/Gerrit-install-and-deploy.html</id>
    <published>2018-08-22T03:36:45.000Z</published>
    <updated>2019-03-11T16:21:49.890Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h2 id="Gerrit-安装配置过程"><a href="#Gerrit-安装配置过程" class="headerlink" title="Gerrit 安装配置过程"></a><cneter><code>Gerrit</code> 安装配置过程</cneter></h2><h1 id="安装过程如下"><a href="#安装过程如下" class="headerlink" title="安装过程如下"></a>安装过程如下</h1><h2 id="步骤一：创建专用账户和工作目录"><a href="#步骤一：创建专用账户和工作目录" class="headerlink" title="步骤一：创建专用账户和工作目录"></a>步骤一：创建专用账户和工作目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adduser gerrit  // 创建专用账户</span></span><br><span class="line"><span class="comment"># passwd gerrit  //为专有账户设置密码</span></span><br></pre></td></tr></table></figure><h2 id="步骤二：配置Java环境"><a href="#步骤二：配置Java环境" class="headerlink" title="步骤二：配置Java环境"></a>步骤二：配置<code>Java</code>环境</h2><ul><li>去官网下载<code>JDK</code>：<span class="exturl" data-url="aHR0cDovL3d3dy5vcmFjbGUuY29tL3RlY2huZXR3b3JrL2phdmEvamF2YXNlL2Rvd25sb2Fkcy9qYXZhLWFyY2hpdmUtamF2YXNlOC0yMTc3NjQ4Lmh0bWw=" title="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html<i class="fa fa-external-link"></i></span></li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/81/1b33b7e9dbe92a1515154d0193194f.jpg" alt></p><ul><li>安装<code>JDK</code><br>将下载得到的<code>jdk-8u161-linux-x64.rpm</code>包保存到<code>Linux</code>主机</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh jdk-8u161-linux-x64.rpm</span></span><br></pre></td></tr></table></figure><ul><li>设置环境变量，编辑<code>~/.bashrc</code>，</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bashrc</span></span><br></pre></td></tr></table></figure><p>在文件的末尾添加以下行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_161</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br><span class="line">export CLASSPATH=$JAVA_HOME/lib</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$CLASSPATH</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/49/6ac74e90a641e355b29b9c4d17deb9.jpg" alt></p><p>使环境配置生效<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><p></p><ul><li>测试<code>Java</code>环境，在终端输入：<code>java -version</code>查看是否正常显示版本信息，若显示则安装成功</li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2f/49c7d622b298ae690db3c13754c1b1.jpg" alt></p><h2 id="步骤三：安装MySQL"><a href="#步骤三：安装MySQL" class="headerlink" title="步骤三：安装MySQL"></a>步骤三：安装MySQL</h2><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum -y install mysql mysql-server mysql-devel</span></span><br></pre></td></tr></table></figure><p>启动MySQL服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><p>获取安装MySQL时的初始密码并登录MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep 'temporary password' /var/log/mysqld.log</span></span><br><span class="line"><span class="comment"># mysql -u root -p</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global validate_password_policy=0;</span><br><span class="line">mysql&gt; set global validate_password_length=1;</span><br><span class="line">mysql&gt; set password for root@localhost=password(&apos;root&apos;);</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt></p><p>创建gerrit用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER &apos;gerrit&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;</span><br></pre></td></tr></table></figure><p>创建gerrit要用的数据表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE DATABASE ReviewDB;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/d2/49b9ee020b217374593ca9bf2333b3.jpg" alt></p><p>把ReviewDB的所有权限赋给gerrit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; GRANT ALL ON ReviewDB.* TO &apos;gerrit&apos;@&apos;%&apos;;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/73/94a9f46a5dd2572e26ac02b13ec1d8.jpg" alt></p><h2 id="步骤四：安装Git"><a href="#步骤四：安装Git" class="headerlink" title="步骤四：安装Git"></a>步骤四：安装Git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install git</span></span><br></pre></td></tr></table></figure><h2 id="步骤五：下载安装gerrit"><a href="#步骤五：下载安装gerrit" class="headerlink" title="步骤五：下载安装gerrit"></a>步骤五：下载安装<code>gerrit</code></h2><ul><li>从官网下载<code>gerrit</code>，存放于<code>/home/gerrit</code>目录：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://gerrit-releases.storage.googleapis.com/gerrit-2.15.5.war</span></span><br></pre></td></tr></table></figure><ul><li>安装<code>gerrit</code>：</li></ul><p>首先切换为gerrit用户，然后运行gerrit的war包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su gerrit</span></span><br><span class="line">$ <span class="built_in">cd</span> </span><br><span class="line">$ java -jar gerrit-2.15.war init -d review_site</span><br></pre></td></tr></table></figure><p>一路回车默认安装(其中的认证方式处改为HTTP)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-7 gerrit]<span class="comment"># su gerrit</span></span><br><span class="line">[gerrit@centos-7 ~]$ ll</span><br><span class="line">总用量 83864</span><br><span class="line">-rwxr-xr-x. 1 root root 85872756 8月  21 12:49 gerrit-2.14.war</span><br><span class="line">[gerrit@centos-7 ~]$ java -jar gerrit-2.15.5.war init -d review_site</span><br><span class="line">Using secure store: com.google.gerrit.server.securestore.DefaultSecureStore</span><br><span class="line">[2018-08-21 12:51:37,463] [main] INFO  com.google.gerrit.server.config.GerritServerConfigProvider : No /home/gerrit/review_site/etc/gerrit.config; assuming defaults</span><br><span class="line"></span><br><span class="line">*** Gerrit Code Review 2.15.5</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Create <span class="string">'/home/gerrit/review_site'</span> [Y/n]?</span><br><span class="line"></span><br><span class="line">*** Git Repositories</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Location of Git repositories   [git]:</span><br><span class="line"></span><br><span class="line">*** SQL Database</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Database server <span class="built_in">type</span>           [h2]:</span><br><span class="line"></span><br><span class="line">*** Index</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Type                           [LUCENE/?]:</span><br><span class="line"></span><br><span class="line">*** User Authentication</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Authentication method          [OPENID/?]: HTTP</span><br><span class="line">Get username from custom HTTP header [y/N]?</span><br><span class="line">SSO <span class="built_in">logout</span> URL                 :</span><br><span class="line">Enable signed push support     [y/N]?</span><br><span class="line"></span><br><span class="line">*** Review Labels</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Install Verified label         [y/N]?</span><br><span class="line"></span><br><span class="line">*** Email Delivery</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">SMTP server hostname           [localhost]:</span><br><span class="line">SMTP server port               [(default)]:</span><br><span class="line">SMTP encryption                [NONE/?]:</span><br><span class="line">SMTP username                  :</span><br><span class="line"></span><br><span class="line">*** Container Process</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Run as                         [gerrit]:</span><br><span class="line">Java runtime                   [/usr/java/jdk1.8.0_161/jre]:</span><br><span class="line">Copy gerrit-2.15.5.war to review_site/bin/gerrit.war [Y/n]?</span><br><span class="line">Copying gerrit-2.15.5.war to review_site/bin/gerrit.war</span><br><span class="line"></span><br><span class="line">*** SSH Daemon</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Listen on address              [*]:</span><br><span class="line">Listen on port                 [29418]:</span><br><span class="line">Generating SSH host key ... rsa... dsa... <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">*** HTTP Daemon</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Behind reverse proxy           [y/N]?</span><br><span class="line">Use SSL (https://)             [y/N]?</span><br><span class="line">Listen on address              [*]:</span><br><span class="line">Listen on port                 [8080]:</span><br><span class="line">Canonical URL                  [http://centos-7.shared:8080/]:</span><br><span class="line"></span><br><span class="line">*** Cache</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*** Plugins</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Installing plugins.</span><br><span class="line">Install plugin commit-message-length-validator version v2.15.5 [y/N]?</span><br><span class="line">Install plugin download-commands version v2.15.5 [y/N]?</span><br><span class="line">Install plugin hooks version v2.15.5 [y/N]?</span><br><span class="line">Install plugin replication version v2.15.5 [y/N]?</span><br><span class="line">Install plugin reviewnotes version v2.15.5 [y/N]?</span><br><span class="line">Install plugin singleusergroup version v2.15.5 [y/N]?</span><br><span class="line">Initializing plugins.</span><br><span class="line">No plugins found with init steps.</span><br><span class="line"></span><br><span class="line">Initialized /home/gerrit/review_site</span><br><span class="line">Executing /home/gerrit/review_site/bin/gerrit.sh start</span><br><span class="line">Starting Gerrit Code Review: OK</span><br><span class="line">Waiting <span class="keyword">for</span> server on centos-7.shared:8080 ... OK</span><br><span class="line">Opening http://centos-7.shared:8080/<span class="comment">#/admin/projects/ ...FAILED</span></span><br><span class="line">Open Gerrit with a JavaScript capable browser:</span><br><span class="line">  http://centos-7.shared:8080/<span class="comment">#/admin/projects/</span></span><br><span class="line">[gerrit@centos-7 ~]$</span><br></pre></td></tr></table></figure><p>授权文件夹权限给gerrit用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R gerrit:gerrit review_site</span></span><br></pre></td></tr></table></figure><ul><li>修改<code>gerrit</code>配置文件，说明如下</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim review_site/etc/gerrit.config</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[gerrit]</span><br><span class="line">        basePath = git                          //指定被gerrit管理的所有git库存放位置，即review_site_project/git/</span><br><span class="line">        canonicalWebUrl = http://10.211.55.19:8081/project   //指定web访问gerrit的网址//填自己的ip和端口号</span><br><span class="line">[database]</span><br><span class="line">        type = mysql                             //指定gerrit所默认数据库类型，可以选用mysql，安装并创建gerrit账户</span><br><span class="line">        database = /home/gerrit/review_site/db/ReviewDB</span><br><span class="line">[auth]</span><br><span class="line">        type = HTTP                           //指定浏览器登录gerrit时的认证方式</span><br><span class="line">[sendemail]</span><br><span class="line">        smtpServer = localhost                //局域网邮件服务器，可使用hMailSever搭建</span><br><span class="line">[container]</span><br><span class="line">        user = gerrit                             //指定gerrit所在机器的用户身份与上文创建的用户对应一致,可以是root</span><br><span class="line">        javaHome = /usr/java/jdk1.8.0_161/jre</span><br><span class="line">[sshd]</span><br><span class="line">        listenAddress = *:29418                   //指定sshd服务监听的端口号</span><br><span class="line">[httpd]</span><br><span class="line">        listenUrl = http://*:8081/                //指定http代理地址</span><br><span class="line">[cache]</span><br><span class="line">        directory = cache                        //缓存位置</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/31/8e586e93c265a2f6ff36d3db0454e7.jpg" alt></p><p>重启gerrit服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ review_site/bin/gerrit.sh restart</span><br></pre></td></tr></table></figure><p>设置gerrit服务开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ln -snf /home/gerrit/review_site/bin/gerrit.sh /etc/init.d/gerrit.sh</span></span><br></pre></td></tr></table></figure><h2 id="步骤六：配置反向代理服务-nginx"><a href="#步骤六：配置反向代理服务-nginx" class="headerlink" title="步骤六：配置反向代理服务(nginx)"></a>步骤六：配置反向代理服务(nginx)</h2><blockquote><p>说明： 局域网本地安装，设置本地<code>repo</code>库</p></blockquote><h3 id="安装nginx反向代理服务器"><a href="#安装nginx反向代理服务器" class="headerlink" title="安装nginx反向代理服务器"></a>安装<code>nginx</code>反向代理服务器</h3><ul><li>安装<code>gcc-c++ pcre pcre-devel zlib zlib-devel openssl</code>：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl</span></span><br></pre></td></tr></table></figure><ul><li>安装启动<code>nginx</code>并设置自启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum update &amp;&amp; yum -y install nginx </span></span><br><span class="line"><span class="comment"># systemctl enable nginx</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.</span><br><span class="line"><span class="comment"># systemctl start nginx</span></span><br></pre></td></tr></table></figure><h3 id="配置nginx："><a href="#配置nginx：" class="headerlink" title="配置nginx："></a>配置<code>nginx</code>：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nginx/conf.d/default.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       82;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    auth_basic &quot;Welcome to Gerrit Code Review !&quot;;</span><br><span class="line">    auth_basic_user_file /home/gerrit/review_site/etc/passwd;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        #root   /usr/share/nginx/html;</span><br><span class="line">        #index  index.html index.htm index.php index.jsp;</span><br><span class="line">        proxy_pass http://127.0.0.1:8081;</span><br><span class="line">        #proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a1/7b9e070ca210075f5fec8631a40d8b.jpg" alt></p><p>启动<code>nginx</code>服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setenforce 0                 //关闭selinux以避免造成权限问题</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld  //禁用防火墙</span></span><br><span class="line"><span class="comment"># systemctl stop firewalld     //关闭防火墙</span></span><br><span class="line"><span class="comment"># systemctl start nginx</span></span><br></pre></td></tr></table></figure><h3 id="设置第一个gerrit用户的账号和密码"><a href="#设置第一个gerrit用户的账号和密码" class="headerlink" title="设置第一个gerrit用户的账号和密码"></a>设置第一个<code>gerrit</code>用户的账号和密码</h3><p>要用到htpasswd命令需要首先安装有httpd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd</span></span><br><span class="line">$ touch ./review_site/etc/passwd</span><br><span class="line">$ htpasswd -b ./review_site/etc/passwd gerrit 123456</span><br></pre></td></tr></table></figure><h2 id="步骤七：安装配置gitweb"><a href="#步骤七：安装配置gitweb" class="headerlink" title="步骤七：安装配置gitweb"></a>步骤七：安装配置<code>gitweb</code></h2><h3 id="安装gitweb-最好在联网环境下安装，或者在离线环境下下载对应的依赖包"><a href="#安装gitweb-最好在联网环境下安装，或者在离线环境下下载对应的依赖包" class="headerlink" title="安装gitweb,最好在联网环境下安装，或者在离线环境下下载对应的依赖包"></a>安装<code>gitweb</code>,最好在联网环境下安装，或者在离线环境下下载对应的依赖包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install gitweb</span></span><br></pre></td></tr></table></figure><h3 id="配置gitweb-与gerrit集成"><a href="#配置gitweb-与gerrit集成" class="headerlink" title="配置gitweb,与gerrit集成"></a>配置<code>gitweb</code>,与<code>gerrit</code>集成</h3><p>修改<code>gitweb</code>的配置文件（/etc/gitweb.conf），将配置项 “$projectroot”修改为<code>gerrit</code>的<code>git</code>仓库目录。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/35/3723767206d90e1f1fbf859d5df6ba.jpg" alt></p><p>修改/home/gerrit/review_site/etc/gerrit.config,添加：</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/26/432e046271c2658c8a203b86c19d5f.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/9d/b0b9039fc3682a7cdfae62ce5387d9.jpg" alt></p><h3 id="配置gerrit权限"><a href="#配置gerrit权限" class="headerlink" title="配置gerrit权限"></a>配置gerrit权限</h3><p>使用管理员账号登录<code>gerrit</code>,修改<code>All-Projects</code>的权限，为<code>refs/*</code>和<code>refs/meta/config</code>的<code>Read</code>配置项配置合适的权限。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/bc/d4431e93f304e1a913b244cadfd492.jpg" alt></p><p><strong>注意：如果你是在root用户下输入上面的命令 创建了password文件到/home/gerrit/review_site/etc目录中,你会发现在登录的时候永远登录不成功,永远会得到服务器500的错误页面。原因是password文件的权限问题。我们知道,/home/gerrit/是我们之前新建的gerrit用户的,那么这个文件夹的权限是700,也就是只允许gerrit用户访问,其他组的用户是访问不了的,虽然这个文件的权限拥有root用户的所有权限,但是因为它放在700权限的文件夹下面,所以同样其他用户是访问不到的。解决方法如下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R gerrit:gerrit /home/gerrit</span></span><br></pre></td></tr></table></figure><h3 id="重启gerrit服务和Nginx服务"><a href="#重启gerrit服务和Nginx服务" class="headerlink" title="重启gerrit服务和Nginx服务"></a>重启gerrit服务和Nginx服务</h3><p>重启<code>gerrit</code>和<code>nginx</code>服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /home/gerrit/review_site/bin/gerrit.sh restart</span><br><span class="line"><span class="comment"># systemctl restart nginx</span></span><br></pre></td></tr></table></figure><h2 id="步骤八：测试"><a href="#步骤八：测试" class="headerlink" title="步骤八：测试"></a>步骤八：测试</h2><p>访问<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdO+8jOeUqGdlcnJpdOeUqOaIt+eZu+W9le+8jOeZu+W9leeVjOmdouWmguS4iw==" title="http://localhost，用gerrit用户登录，登录界面如下">http://localhost，用gerrit用户登录，登录界面如下<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/74/51196a5c04235cfbd07cf5a09e1b95.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/79/114d466e1f80823db828265ede65ee.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      CentOS安装部署代码审查工具--Gerrit
    
    </summary>
    
      <category term="Linux" scheme="https://iamzhl.top/categories/Linux/"/>
    
      <category term="运维" scheme="https://iamzhl.top/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Gerrit" scheme="https://iamzhl.top/tags/Gerrit/"/>
    
      <category term="代码审查" scheme="https://iamzhl.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins 配置部署</title>
    <link href="https://iamzhl.top/Jenkins-configure-and-deploy.html"/>
    <id>https://iamzhl.top/Jenkins-configure-and-deploy.html</id>
    <published>2018-08-22T03:36:45.000Z</published>
    <updated>2019-03-11T16:21:49.895Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h1 id="Jenkins-配置部署"><a href="#Jenkins-配置部署" class="headerlink" title="Jenkins 配置部署"></a><center><code>Jenkins</code> 配置部署</center></h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用；常用的版本管理系统有SVN、GIT，构建工具有Maven、Ant、Gradle。其具备以下特点：</p><ul><li>易于安装：不需要安装、不需要数据库，只需通过java -jar jenkins.war或部署到一个servlet容器中。</li><li>易于配置：所有的配置都可能通过Jenkins提供的web界面完成，当然如果你喜欢，也可以通过手动修改xml文件进行配置。</li><li>消息通知及测试报告：能够生成各类测试报告并通过消息通知机制（Email等）进行报告，包括单元测试、覆盖率测试、静态分析等。</li><li>分布式构建：Jenkins支持多个Slave节点的动态挂载，完成分布式构建。</li><li>资源动态调度：Jenkins的容器资源通过Kubernetes动态调度，动态扩容收缩。</li><li>插件支持：Jenkins支持上千种插件，可以进行扩展，也可以根据需求近定制开发。</li></ul><h2 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h2><p>以CentOS环境安装部署为例，详细介绍Jenkins安装部署整体过程和常用设置。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>如果使用Jenkins.war包的形式进行安装，需要提前准备以下环境。</p><h5 id="Java环境准备"><a href="#Java环境准备" class="headerlink" title="Java环境准备"></a>Java环境准备</h5><h6 id="去官网下载JDK："><a href="#去官网下载JDK：" class="headerlink" title="去官网下载JDK："></a>去官网下载<code>JDK</code>：</h6><p><span class="exturl" data-url="aHR0cDovL3d3dy5vcmFjbGUuY29tL3RlY2huZXR3b3JrL2phdmEvamF2YXNlL2Rvd25sb2Fkcy9qYXZhLWFyY2hpdmUtamF2YXNlOC0yMTc3NjQ4Lmh0bWw=" title="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/81/1b33b7e9dbe92a1515154d0193194f.jpg" alt></p><h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><ul><li>将下载得到的<code>jdk-8u161-linux-x64.rpm</code>包保存到<code>Linux</code>主机</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh jdk-8u161-linux-x64.rpm</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/ad/4301bf0ab8d0d138ded7bc3709fd4a.jpg" alt></p><h6 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bashrc</span></span><br></pre></td></tr></table></figure><p>在文件的末尾添加以下行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_161</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br><span class="line">export CLASSPATH=$JAVA_HOME/lib</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$CLASSPATH</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/49/6ac74e90a641e355b29b9c4d17deb9.jpg" alt></p><p>使环境配置生效<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><p></p><h6 id="测试Java环境"><a href="#测试Java环境" class="headerlink" title="测试Java环境"></a>测试<code>Java</code>环境</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># java -version</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;查看是否正常显示版本信息，若显示则安装成功</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2f/49c7d622b298ae690db3c13754c1b1.jpg" alt></p><h5 id="Tomcat环境准备"><a href="#Tomcat环境准备" class="headerlink" title="Tomcat环境准备"></a>Tomcat环境准备</h5><h6 id="下载Tomcat"><a href="#下载Tomcat" class="headerlink" title="下载Tomcat"></a>下载Tomcat</h6><blockquote><p>地址: <span class="exturl" data-url="aHR0cDovL21pcnJvcnMuc2h1LmVkdS5jbi9hcGFjaGUvdG9tY2F0L3RvbWNhdC04L3Y4LjUuMzIvYmluL2FwYWNoZS10b21jYXQtOC41LjMyLnRhci5neg==" title="http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.32/bin/apache-tomcat-8.5.32.tar.gz">http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.32/bin/apache-tomcat-8.5.32.tar.gz<i class="fa fa-external-link"></i></span></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://mirrors.shu.edu.cn/apache/tomcat/tomcat-8/v8.5.32/bin/apache-tomcat-8.5.32.tar.gz</span></span><br></pre></td></tr></table></figure><h6 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar zxvf apache-tomcat-8.5.32.tar.gz</span></span><br><span class="line"><span class="comment"># mv apache-tomcat-8.5.32 /usr/local/</span></span><br></pre></td></tr></table></figure><h6 id="配置Tomcat环境"><a href="#配置Tomcat环境" class="headerlink" title="配置Tomcat环境"></a>配置Tomcat环境</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bashrc</span></span><br></pre></td></tr></table></figure><p>在文件的末尾添加以下行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export CATALINA_BASE=/usr/local/apache-tomcat-8.5.32</span><br><span class="line">export TOMCAT_HOME=/usr/local/apache-tomcat-8.5.32</span><br><span class="line">export CATALINA_HOME=/usr/local/apache-tomcat-8.5.32</span><br><span class="line">export PATH=$PATH:$CATALINA_HOME/bin:$CATALINA_HOME/lib</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/66/1656ee9280886c6c7de6057c8835cd.jpg" alt></p><p>使环境配置生效<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><p></p><h6 id="启动Tomcat服务"><a href="#启动Tomcat服务" class="headerlink" title="启动Tomcat服务"></a>启动Tomcat服务</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># startup.sh</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f9/4e6e503aa6fe748959adfb182e3e1c.jpg" alt></p><h6 id="测试Tomcat"><a href="#测试Tomcat" class="headerlink" title="测试Tomcat"></a>测试Tomcat</h6><p>打开浏览器，在地址栏中输入<span class="exturl" data-url="aHR0cDovL0lQOjgwODDlm57ovabvvIzlpoLmnpznnIvliLBUb21jYXToh6rluKbnmoTkuIDkuKpKU1DpobXpnaLvvIzor7TmmI7kvaDnmoRUb21jYXTlt7LmkK3lu7rmiJDlip8=" title="http://IP:8080回车，如果看到Tomcat自带的一个JSP页面，说明你的Tomcat已搭建成功">http://IP:8080回车，如果看到Tomcat自带的一个JSP页面，说明你的Tomcat已搭建成功<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/43/36596794bdf3af70f1ecd35f8c40a0.jpg" alt></p><h3 id="安装部署-1"><a href="#安装部署-1" class="headerlink" title="安装部署"></a>安装部署</h3><h4 id="下载war文件"><a href="#下载war文件" class="headerlink" title="下载war文件"></a>下载war文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war</span><br></pre></td></tr></table></figure><h4 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h4><p>将下载后的war包放到/usr/local/apache-tomcat-8.5.32/webapps/目录下，启动tomcat即可， 或者用命令<code>java -jar jenkins.war</code>。</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>打开浏览器输入<span class="exturl" data-url="aHR0cDovL0lQOjgwODAvamVua2luc+Wbnui9puWNs+WPr+eci+WIsGplbmtpbuWIneWni+mFjee9rueVjOmdou+8jOaMieeFp+aPkOekuui/m+ihjOiuvue9ruOAgg==" title="http://IP:8080/jenkins回车即可看到jenkin初始配置界面，按照提示进行设置。">http://IP:8080/jenkins回车即可看到jenkin初始配置界面，按照提示进行设置。<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/27/4f737ebea43eb34f747fb68a08b6fa.jpg" alt></p><h3 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h3><h5 id="邮件设置"><a href="#邮件设置" class="headerlink" title="邮件设置"></a>邮件设置</h5><p>Jenkins-&gt;系统管理-&gt;系统设置，弹出如下图所示：</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b0/075e39aad15468d3eb9cc0f6bf37f7.jpg" alt></p><ul><li>SMTP服务器：为邮箱服务地址。<ul><li>QQ: smtp.qq.com</li><li>163: smtp.163.com</li></ul></li><li>用户默认后缀：可以自动识别，只需填写用户即可。</li><li>其他配置为Jenkins邮箱默认用户及采用的认证方式。</li></ul><h5 id="Job设置"><a href="#Job设置" class="headerlink" title="Job设置"></a>Job设置</h5><p>在需要邮件通知的Job设置里面增加”构建后操作步骤” -&gt; 选择E-mail Notification。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/82/3005620b29b6fc4b2c9e3ce729af8b.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/9e/a3153b262215e17561eb34674635e2.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/6d/dce01f6fa0a84d625f0eb55759c422.jpg" alt></p><h5 id="扩展插件设置"><a href="#扩展插件设置" class="headerlink" title="扩展插件设置"></a>扩展插件设置</h5><p>但是如果你群发的收件人列表比较多，或者每次通知的人不一样，比如每次只想通知导致构建失败的那个人（即最后一次上传代码的人），那么简单的E-mail Notification就不能满足要求，需要使用Email extension plugin插件。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/18/0775061dcf193cc08da229cef10eda.jpg" alt></p><ul><li>SMTP server – 设置SMTP服务器地址</li><li>Default user E-mail suffix – 设置用户默认邮件后缀</li><li>Default Content Type – 默认内容类型(Plain Text HTML)</li><li>Default Subject – 默认邮件主题</li><li>Default Content – 默认邮件内容，可以设置模板</li><li><p>Default Triggers – 触发器</p></li><li><p>[ ] 全局配置<br>根据实际情况勾选需要触发邮件通知的事件。点击上图右下角Default Trigger，弹出如下触发项：</p></li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/69/3127442cf5a527b984d83738c31e6f.jpg" alt></p><ul><li style="list-style:none"><input type="checkbox"> 项目配置<br>进入到具体的项目配置界面点击”配置，在配置界面点击”增加构建后操作步骤”，选择”Editable Email Notification”。</li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/71/133a454b2ee120f2b1df930b4ca9fe.jpg" alt></p><p>可以在“Advanced Settings”中针对该项目进行个性化的配置。可以针对该项目定义该项目通知的收件人列表、主题、内容、附件等。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/53/67346392186853caab6ee621418aa4.jpg" alt></p><h4 id="任务创建"><a href="#任务创建" class="headerlink" title="任务创建"></a>任务创建</h4><h5 id="构建项目类型"><a href="#构建项目类型" class="headerlink" title="构建项目类型"></a>构建项目类型</h5><p>点击 Jenkins 首页”创建一个新任务”的链接，弹出如下图所示页面。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/04/c97a32a6b1285a76a6edb8497a1cd3.jpg" alt></p><p>Jenkins 提供了六种类型的任务。</p><ul><li><p>构建一个自由风格的软件项目<br>这是Jenkins的主要功能。Jenkins 会结合任何 SCM 和任何构建系统来构建你的项目, 甚至可以构建软件以外的系统。</p></li><li><p>Pipeline(流水线)<br>Orchestrates long-running activities that can span multiple build slaves. Suitable for building pipelines (formerly known as workflows) and/or organizing complex activities that do not easily fit in free-style job type. – 很难用一两句话说清 Pipeline, 参考 , 后面另起一文来介绍。</p></li><li><p>构建一个多配置项目<br>适用于多配置项目,例如多环境测试、平台指定构建,等等。</p></li><li><p>GitHub Organization<br>Scans a GitHub organization (or user account) for all repositories matching some defined markers. – 这个主要针对由 Github 托管的项目。</p></li><li><p>Multibranch Pipeline(多分支流水线)<br>Creates a set of Pipeline projects according to detected branches in one SCM repository. 根据一个SCM存储库中检测到的分支创建一组 Pipeline 项目。</p></li><li><p>文件夹<br>创建一个可以嵌套存储的容器。利用它可以进行分组。 视图仅仅是一个过滤器，而文件夹则是一个独立的命名空间， 因此你可以有多个相同名称的的内容，只要它们在不同的文件 夹里即可。</p></li></ul><p>这里选择第一个：构建一个自由风格的软件项目， 输入项目名称：python test project ，点击”确定”按钮。</p><h5 id="构建-Windows-测试任务"><a href="#构建-Windows-测试任务" class="headerlink" title="构建 Windows 测试任务"></a>构建 Windows 测试任务</h5><p>假设，有一个 Python 编写的测试脚本 py_tests.py ，其绝对路径为/root/py_tests.py，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"Hello world"</span></span><br></pre></td></tr></table></figure><p>在Linux下怎么执行这个测试用例，打开终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-7 ~]# cd</span><br><span class="line">[root@centos-7 ~]# ll py_tests.py</span><br><span class="line">-rw-r--r--. 1 root root 20 8月  16 16:07 py_tests.py</span><br><span class="line">[root@centos-7 ~]# python py_tests.py</span><br><span class="line">Hello world</span><br><span class="line">[root@centos-7 ~]#</span><br></pre></td></tr></table></figure><p>下面回到Jenkins的配置过程中</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/ab/46e2f5d22700eb539eac4128e19c85.jpg" alt></p><p>添加项目的描述：Python 测试项目，打印Hello world。</p><p>剩下的选项都不要管，拖到页面底部，构建 选项。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e0/dab0e9e3d049db8a84ee83f85582de.jpg" alt></p><p>选择<code>执行shell</code>选项，执行Linux shell命令。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c6/ef1db64d383033d03b465af7f3771d.jpg" alt></p><p>如上图，输入你在 Linux 终端下所输的命令<code>python /root/py_tests.py</code>。 点击<code>保存</code>。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/8f/6c232d4632eb024fa2cadcf0fbfc13.jpg" alt></p><p>一个极简的，基于 Linux 系统的 Python 脚本测试持续集成项目就创建完成了。</p><h4 id="节点添加"><a href="#节点添加" class="headerlink" title="节点添加"></a>节点添加</h4><p>Jenkins有个很强大的功能：分布式构建(在Jenkins的配置中叫做节点)，分布式构建能够让同一套代码在不同的环境(如：Windows和Linux系统)中编译、测试等。而且Jenkins构建的代码和产物最后自动拷贝到主节点。</p><p><strong>注意：如果节点主机上不存在JDK，Jenkins会去自动下载。</strong></p><p><strong>建议：所有Unix或者Windows机器的环境路径统一(如：JDK、Ant、Maven)，好处是便于管理、不容易出现奇葩问题。</strong></p><h5 id="新建节点"><a href="#新建节点" class="headerlink" title="新建节点"></a>新建节点</h5><p>系统管理 → 管理节点 → 新建节点(左上角)，如下图所示：</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/1e/067a4f7fa85272fa79f85208c937c0.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/eb/3eb8f07110c1e29abe65035fdc2b04.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/bb/e82fc1380ecf612e70e06bc156e17e.jpg" alt></p><p>&emsp;&emsp;节点名称：建议使用字母、数字或字母和数字的组合。最好见名知意。不建议使用标点符号和中文(中文命名没有问题，但Job中无法引用)。</p><h5 id="配置节点"><a href="#配置节点" class="headerlink" title="配置节点"></a>配置节点</h5><ul><li>Name(名称)：节点名称</li><li>Description(描述)：节点描述，支持中文</li><li>并发构建数：最大同时构建数量(根据机器的性能定，单颗四核cpu建议不要超过5) - 必须为数字</li><li>远程工作目录：节点的根目录(注意：如果目录不存在，会自动创建目录。你必须对该目录有读写权限，不然会报错)</li><li>标签：标记(又叫做标签)用来对多节点分组,标记之间用空格分隔.例如’refression java6’将会把一个节点标记上’regression’和’java6’.</li></ul><blockquote><p>例来说,如果你有多个Linux系统的构建节点并且你的Job也需要在Linux系统上运行,那么你可以配置所有的Linux系统节点都标记为’windows’, 然后把Job也标记为’Linux’.这样的话你的Job就不会运行在除了Linux节点以外的其它节点之上了.<br>Linux用法：尽可能的使用这个节点/只允许运行绑定到这台机器的Job(根据你的需求，二选一)</p></blockquote><ul><li>启动方式：<ul><li>Linux节点：推荐 – Launch slave agents via SSH， 在Unix(包括Linux)机器上通过SSH通道连接节点 (适用于Unix和Linux)</li><li>Host(主机)：节点主机的ip地址</li><li>Credentials：凭据(如果为空或者不可选择，请在系统管理→Manage Credentials中配置。Manage Credentials的配置非常简单，这里就不在描述了。Manage Credentials配置完成后，需刷新节点配置页面才会显示。)</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/35/d7416430314fd19e34a01ac59ff464.jpg" alt></p><h5 id="节点连接"><a href="#节点连接" class="headerlink" title="节点连接"></a>节点连接</h5><p>以Launch slave agents via SSH为例，选择Manually trusted key Verification Strategy，然后点击最下面的保存。</p><p>Jenkins -&gt; 系统管理 -&gt; 系统设置，设置SSH Server</p><ul><li>Name: 这个可以随意写</li><li>Hostname: 远程主机的IP地址</li><li>Username: 远程主机登录的用户名</li><li>Remote Directory: 远程目录</li></ul><p>如图设置好信息后，点击下面的保存</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/3f/b787c0c1b5bab76ad878fbb47542ad.jpg" alt></p><p>Jenkins -&gt; 系统管理 -&gt; 管理节点，点击刚刚配置好的节点，上线节点</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/1d/1f61d958c23269f4fcc4a7ae295b0b.jpg" alt></p><p>回到节点列表后发现节点就已经成功上线了</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a4/346c91e15903e43bc6759a7c566502.jpg" alt></p><h4 id="角色权限"><a href="#角色权限" class="headerlink" title="角色权限"></a>角色权限</h4><p>由于jenkins默认的权限管理体系不支持用户组或角色的配置，因此需要安装第三发插件来支持角色的配置，本文将使用Role Strategy Plugin，介绍页面：<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmplbmtpbnMtY2kub3JnL2Rpc3BsYXkvSkVOS0lOUy9Sb2xlK1N0cmF0ZWd5K1BsdWdpbuOAgg==" title="https://wiki.jenkins-ci.org/display/JENKINS/Role+Strategy+Plugin。">https://wiki.jenkins-ci.org/display/JENKINS/Role+Strategy+Plugin。<i class="fa fa-external-link"></i></span></p><h5 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h5><p>安装插件后，进入系统设置页面，配置如下：</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/89/a69327d3e04b1b57ff022132e9f5a5.jpg" alt></p><h5 id="配置权限"><a href="#配置权限" class="headerlink" title="配置权限"></a>配置权限</h5><p>在系统管理页面点击Manage and Assign Roles进入角色管理页面</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/90/a06f0b7e2eff8c0a9d81576497ff0c.jpg" alt></p><p>进入之后</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/be/1bbe3e8858dbac44ac5a1fa2451883.jpg" alt></p><ul><li>管理角色（Manage Roles）<br>选择该项可以创建全局角色、项目角色，并可以为角色分配权限。</li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b8/ea91c0ea7091dca3faf3c86356da16.jpg" alt></p><p>;如上图，分别创建了admin、anonymous两个全局角色，Online Program、test两个项目角色。</p><p>&emsp;&emsp;项目角色与全局角色的区别就是，项目角色只能管理项目，没有管理jenkins的权限配置。</p><p>&emsp;&emsp;添加项目角色时，需要指定匹配项目的模式，如上图中的Pattern，官方文档介绍该选项支持正则表达式，如”Roger-.”表示所有以Roger-开头的项目，<code>(?i)roger-.*</code>表示以roger-开头的项目并且不区分大小写，如以ABC开头的项目可以配置为”ABC|ABC.*”，也可以使用”abc|bcd|efg”直接匹配多个项目。</p><ul><li>创建用户<br>在分配角色之前需要先创建用户。<br>在系统管理页面，点击管理用户：</li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2e/6a8a273181a5357a4ca587a5c2ced9.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/60/d8fa2030fff834872c259f65720958.jpg" alt></p><p>&emsp;&emsp;点击新建使用者可以创建新用户，点击用户ID或名称都可以修改用户信息。</p><p>&emsp;&emsp;选择Assign Roles可以为用户分配所属角色，可以分配全局角色和项目角色。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/57/385c466d213dd9ead86034162d9029.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/93/ddef492ecd2995c5731ea8eb1e9ee1.jpg" alt></p><p>&emsp;&emsp;如上图，将不同的用户分别分配给不同的角色，这样用户就可以具有角色所拥有的权限。</p><h3 id="运行与维护"><a href="#运行与维护" class="headerlink" title="运行与维护"></a>运行与维护</h3><h4 id="Jenkins升级"><a href="#Jenkins升级" class="headerlink" title="Jenkins升级"></a>Jenkins升级</h4><ul><li>说明：Jenkins迭代更新很频繁，一般1周更新一次，半年一个大版本。</li><li>升级：下载新的war包，替换旧的war包，重启即可。下载地址为<span class="exturl" data-url="aHR0cDovL21pcnJvcnMuamVua2lucy1jaS5vcmcv44CC" title="http://mirrors.jenkins-ci.org/。">http://mirrors.jenkins-ci.org/。<i class="fa fa-external-link"></i></span></li></ul><p><strong>PS：升级前，请测试该版本和你本地数据的兼容性。如何测试：将JENKINS_HOME拷贝一份到新的机器，用新版的程序启动。测试对应的插件和配置。</strong></p><h4 id="Jenkins迁移和备份"><a href="#Jenkins迁移和备份" class="headerlink" title="Jenkins迁移和备份"></a>Jenkins迁移和备份</h4><p>首先找到JENKINS_HOME，一般在用户根目录下.jenkins目录，因为Jenkins的所有的数据都是以文件的形式存放在JENKINS_HOME目录中。所以不管是迁移还是备份，只需要操作JENKINS_HOME就行了。</p><ul><li><p>迁移：建议将JENKINS_HOME打包后再拷贝，Windows上可以用zip，rar等，Linux上有zip，tar等。然后将打包的文件解压到新的JENKINS_HOME目录就行了。</p></li><li><p>备份：如果是临时备份，整个压缩文件就行了。</p></li><li><p>恢复：恢复的时候需要先停止jenkins。</p></li></ul><h4 id="移动，删除或修改jobs"><a href="#移动，删除或修改jobs" class="headerlink" title="移动，删除或修改jobs"></a>移动，删除或修改jobs</h4><p>对于移动或删除jobs，只需要简单地移动或删除<code>$JENKINS_HOME/jobs</code>目录。<br>对于修改jobs的名字，只需要简单地修改<code>$JENKINS_HOME/jobs</code>下对应job的文件夹的名字。<br>对于不经常使用的job，只需要对<code>$JENKINS_HOME/jobs</code>下对应的jobs的目录zip或tar后存储到其他的地方。</p><h4 id="Jenkins-启动时的命令行参数"><a href="#Jenkins-启动时的命令行参数" class="headerlink" title="Jenkins 启动时的命令行参数"></a>Jenkins 启动时的命令行参数</h4><table><thead><tr><th><code>--httpPort=$HTTP_PORT</code></th><th>用来设置jenkins运行时的web端口。</th></tr></thead><tbody><tr><td><code>--httpsPort=$HTTP_PORT</code></td><td>表示使用https协议。</td></tr><tr><td>~~~~–httpListenAddress=$HTTP_HOST</td><td>用来指定jenkins监听的ip范围，默认为所有的ip都可以访问此jenkins server。</td></tr></tbody></table><h4 id="修改jenkins的timezone"><a href="#修改jenkins的timezone" class="headerlink" title="修改jenkins的timezone"></a>修改jenkins的timezone</h4><p>如果jenkins所在的server的timezone不同于用户的timezone，这时候需要修改jenkins的timezone，需要在jenkins启动的时候增加下列参数-Dorg.apache.commons.jelly.tags.fmt.timeZone=TZ。</p><h4 id="查看jenkins的系统信息"><a href="#查看jenkins的系统信息" class="headerlink" title="查看jenkins的系统信息"></a>查看jenkins的系统信息</h4><p>以在jenkins的管理页面下的系统信息中，查看所有的jenkins的信息，例如jenkins的启动配置，所依赖的系统的环境变量，所安装的plugins。</p><h4 id="Jenkins中执行batch和Python"><a href="#Jenkins中执行batch和Python" class="headerlink" title="Jenkins中执行batch和Python"></a>Jenkins中执行batch和Python</h4><p>Jenkins的job -&gt; build 支持Ant，maven，windows batch和Shell， 但是我们知道python，perl，ruby等脚本其实也是shell脚本，所以这里的Shell可以扩展为python，perl，ruby等。如图</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/99/04a1d6c847be966e185435823bb110.jpg" alt></p><h3 id="Jenkins-整合-LDAP-以及-CAS-单点登录"><a href="#Jenkins-整合-LDAP-以及-CAS-单点登录" class="headerlink" title="Jenkins 整合 LDAP 以及 CAS 单点登录"></a>Jenkins 整合 LDAP 以及 CAS 单点登录</h3><p>参考另外一篇博客<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmlhbXpobC50b3AvSmVua2lucy1pbnRlZ3JhdGUtd2l0aC1sZGFwLWFuZC1DQVMuaHRtbA==" title="https://blog.iamzhl.top/Jenkins-integrate-with-ldap-and-CAS.html">Jenkins 整合 LDAP 以及 CAS 单点登录<i class="fa fa-external-link"></i></span></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用；常用的版本管理系统有SVN、GIT，构建工具有Maven、Ant、Gradle。
    
    </summary>
    
      <category term="Linux" scheme="https://iamzhl.top/categories/Linux/"/>
    
      <category term="运维" scheme="https://iamzhl.top/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Jenkins" scheme="https://iamzhl.top/tags/Jenkins/"/>
    
      <category term="持续集成" scheme="https://iamzhl.top/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>SonarQube安装部署</title>
    <link href="https://iamzhl.top/SonarQube-install-and-deploy.html"/>
    <id>https://iamzhl.top/SonarQube-install-and-deploy.html</id>
    <published>2018-08-20T08:10:59.000Z</published>
    <updated>2019-03-11T16:21:49.901Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h1 id="SonarQube安装部署"><a href="#SonarQube安装部署" class="headerlink" title="SonarQube安装部署"></a><center>SonarQube安装部署</center></h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SonarQube是一个管理代码质量的开放平台，可以从七个维度检测代码质量：</p><ul><li>复杂度分布（complexity）：代码复杂度过高将难以理解、难以维护；</li><li>重复代码（duplications）：程序中包含大量复制粘度的代码是质量低下的表现；</li><li>单元测试（unit tests）：统计并展示单元测试覆盖率；</li><li>编码规范（coding rules）：通过Findbugs、PMD、CheckStyle等规范代码编写；</li><li>注释（commments）：少了可读性差，多了看起来费劲；</li><li>潜在的Bug（potential bugs）：通过Findbugs、PMD、CheckStyle等检测潜在bug；</li><li>结构与设计（architecture &amp; design）：依赖、耦合等。</li></ul><p>SonarQube 可以集成不同的测试工具（CppCheck、CheckStyle、Junit、CppUnit等），代码分析工具、持续集成工具（Jenkins）、IDE（VisualStudio）。</p><p>Sonar通过对代码质量分析结果数据进行在加工处理，通过量化的方式来度量代码的质量变化，从而可以方便的对工程进行代码质量管理。</p><p>支持语言：JAVA PHP C# C COBOL PL/SQL FLEX等20余种。</p><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p>SonarQube平台的组成：</p><ul><li>数据库：存放SonarQube的配置数据、代码质量的快照数据。</li><li>Web服务：用于查看SonarQube的配置数据、代码质量的快照数据。</li><li>分析器：对项目代码进行分析、生成质量结果数据并存入数据库中（分析器有多中，此处选择SonarQube Maven Plugin）。</li></ul><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>去官网下载<code>JDK</code>：<span class="exturl" data-url="aHR0cDovL3d3dy5vcmFjbGUuY29tL3RlY2huZXR3b3JrL2phdmEvamF2YXNlL2Rvd25sb2Fkcy9qYXZhLWFyY2hpdmUtamF2YXNlOC0yMTc3NjQ4Lmh0bWw=" title="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/81/1b33b7e9dbe92a1515154d0193194f.jpg" alt></p><p>安装<code>JDK</code><br>将下载得到的<code>jdk-8u161-linux-x64.rpm</code>包保存到<code>Linux</code>主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh jdk-8u161-linux-x64.rpm</span></span><br></pre></td></tr></table></figure><p>设置环境变量，编辑<code>~/.bashrc</code>，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bashrc</span></span><br></pre></td></tr></table></figure><p>在文件的末尾添加以下行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_161export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=$JAVA_HOME/libexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin:$CLASSPATH</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/49/6ac74e90a641e355b29b9c4d17deb9.jpg" alt></p><p>使环境配置生效<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><p></p><p>测试<code>Java</code>环境，在终端输入：<code>java -version</code>查看是否正常显示版本信息，若显示则安装成功</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/2f/49c7d622b298ae690db3c13754c1b1.jpg" alt></p><p><strong>Note:</strong><br>如果已经预装了openjdk，请先卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum list installed | grep openjdk # 根据执行结果进行卸载</span></span><br></pre></td></tr></table></figure><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum -y install mysql mysql-server mysql-devel</span></span><br></pre></td></tr></table></figure><p>启动MySQL服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><p>获取安装MySQL时的初始密码并登录MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep 'temporary password' /var/log/mysqld.log</span></span><br><span class="line"><span class="comment"># mysql -u root -p</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global validate_password_policy=0;</span><br><span class="line">mysql&gt; set global validate_password_length=1;</span><br><span class="line">mysql&gt; set password for root@localhost=password(&apos;root&apos;);</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt></p><p>设置sonar的用户名和数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># adduser sonar</span></span><br><span class="line"><span class="comment"># passwd sonar # 修改sonar用户密码</span></span><br><span class="line"><span class="comment"># su sonar # 切换为sonar用户安装</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user &apos;sonar&apos;@&apos;%&apos; identified by &apos;sonar&apos;;</span><br><span class="line">mysql&gt; CREATE DATABASE sonar CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">mysql&gt; grant all privileges on sonar.* to &apos;sonar&apos;@&apos;%&apos;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h3 id="安装SonarQube"><a href="#安装SonarQube" class="headerlink" title="安装SonarQube"></a>安装SonarQube</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-7.3.zip</span><br><span class="line">$ unzip sonarqube-7.3.zip  //若提示unzip命令找不到，用yum -y install unzip安装即可</span><br><span class="line">$ mv sonarqube-7.3 sonarqube </span><br><span class="line">$ mv sonarqube /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="comment"># chown -R sonar:sonar /usr/local/sonarqube</span></span><br></pre></td></tr></table></figure><h2 id="配置sonar"><a href="#配置sonar" class="headerlink" title="配置sonar"></a>配置sonar</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/<span class="built_in">local</span>/sonarqube/conf/sonar.properties</span><br></pre></td></tr></table></figure><p>如图设置以下选项</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/46/56cfe2c33866ab48ab8c9bdd402acc.jpg" alt></p><h2 id="启动sonar"><a href="#启动sonar" class="headerlink" title="启动sonar"></a>启动sonar</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/sonarqube/bin/linux-x86-64/sonar.sh start</span><br></pre></td></tr></table></figure><p>成功启动后，访问本地 <span class="exturl" data-url="aHR0cDovL0lQOjkwMDDvvIxTb25hclF1YmU=" title="http://IP:9000，SonarQube">http://IP:9000，SonarQube<i class="fa fa-external-link"></i></span> 初始管理员账号为 admin，默认密码为 admin，登录后可修改密码。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/25/5b9f14a21cdaf024ea8b3ce551dd7a.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/83/71e7da548917e52b08eb37f385e000.jpg" alt></p><p><strong>Note:</strong><br>如果遇到Sonar启动不起来，查看日志自动关闭的问题，可以采用以下方法解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo -e "vm.max_map_count=262144" &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line"><span class="comment"># sysctl -p</span></span><br><span class="line"><span class="comment"># echo -e "sonar hard nofile 65536" &gt;&gt; /etc/security/limits.conf </span></span><br><span class="line"><span class="comment"># echo -e "sonar soft nofile 65536" &gt;&gt; /etc/security/limits.conf</span></span><br></pre></td></tr></table></figure><p>然后注销sonar用户重新以sonar身份登录后再次启动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/sonarqube/bin/linux-x86-64/sonar.sh start</span><br></pre></td></tr></table></figure><p>插件安装：如果需要下载插件的话，各个版本不一样，如图所示，先点击Administration,再打开Marketplace就可以看到Plugins各种插件了。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/c6/cef3a943ab5d4347d4af8f3332a196.jpg" alt></p><p>SonarQube 支持分析的语言有很多，像Java、Python、Php、C/C++、C#、HTML、JavaScript、PL/SQL、Objective C等20+语言，当我们需要支持分析什么语言时，只需要去插件中心安装对应语言的插件即可，非常方便，可扩展性强，根据自己的需要去选择插件。</p><h2 id="实验验证"><a href="#实验验证" class="headerlink" title="实验验证"></a>实验验证</h2><blockquote><p>本次实验验证以Java工程为例</p></blockquote><h3 id="安装配置sonar-scanner"><a href="#安装配置sonar-scanner" class="headerlink" title="安装配置sonar-scanner"></a>安装配置sonar-scanner</h3><ul><li>获取sonar-scanner</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip</span></span><br><span class="line"><span class="comment"># unzip sonar-scanner-cli-3.2.0.1227-linux.zip</span></span><br><span class="line"><span class="comment"># mv sonar-scanner-3.2.0.1227-linux sonar-scanner</span></span><br><span class="line"><span class="comment"># mv sonar-scanner /usr/local/</span></span><br><span class="line"><span class="comment"># chown -R sonar:sonar sonar-scanner</span></span><br></pre></td></tr></table></figure><ul><li>配置sonar-scanner环境变量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bashrc</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/40/6ea5e9c0aee37c056f4583b32c048d.jpg" alt></p><ul><li>使配置生效</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/70/524b2333bbfb3e6a50b77f92eb201d.jpg" alt></p><ul><li>检查环境配置是否成功</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sonar-scanner -version</span><br></pre></td></tr></table></figure><ul><li>配置sonar-scanner.properties文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/<span class="built_in">local</span>/sonar-scanner/conf/sonar-scanner.properties</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/46/849b0c5cac635e91e9efcf07ba5fbd.jpg" alt></p><h3 id="验证过程"><a href="#验证过程" class="headerlink" title="验证过程"></a>验证过程</h3><ul><li>添加Java Maven测试工程</li></ul><p>编写测试工程</p><ul><li>添加sonar-project.properties文件</li></ul><p>在工程根目录中添加sonar-project.properties文件，格式如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sonar.projectKey=com.geovis         //项目的唯一标识</span><br><span class="line">sonar.projectName=helloworld        //项目的名字</span><br><span class="line">sonar.projectVersion=1.0            //项目的版本</span><br><span class="line">sonar.sources=/root/helloworld/src  //项目的源码目录，多目录以英文逗号分隔</span><br></pre></td></tr></table></figure><p>例如我的项目结构如下</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/6a/e62e31b74ec65b783f21f4d8cda98e.jpg" alt></p><p>那么此项目配置文件应为</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/98/4f0aa2e69db09a846cfd6da4a3442f.jpg" alt></p><ul><li>代码质量检查<br>设置完后，终端运行<code>sonar-scanner</code>命令，开始项目源代码的分析</li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/77/64ffb2ce43fdba046811cce438845c.jpg" alt></p><ul><li>查看结果<br>命令运行完成之后，访问<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo5MDAw77yM6L6T5YWl6LSm5Y+35a+G56CB5Y2z5Y+v5p+l55yL5YiG5p6Q57uT5p6c77yM5aaC5LiL5Zu+" title="http://localhost:9000，输入账号密码即可查看分析结果，如下图">http://localhost:9000，输入账号密码即可查看分析结果，如下图<i class="fa fa-external-link"></i></span></li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b4/92864641223d1537b6f4dfa27a6358.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/97/221636aa330d56dea8bb870957f29a.jpg" alt></p><h2 id="SonarQube-整合-LDAP-和-CAS-单点登录"><a href="#SonarQube-整合-LDAP-和-CAS-单点登录" class="headerlink" title="SonarQube 整合 LDAP 和 CAS 单点登录"></a>SonarQube 整合 LDAP 和 CAS 单点登录</h2><p><code>SonarQube</code>整合<code>LDAP</code>和<code>CAS</code>单点登录的过程请参考我的另一篇博客<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmlhbXpobC50b3AvU29uYXJRdWJlLWludGVncmF0ZS13aXRoLWxkYXAtYW5kLUNBUy5odG1s" title="https://blog.iamzhl.top/SonarQube-integrate-with-ldap-and-CAS.html">SonarQube 整合 LDAP 和 CAS 单点登录<i class="fa fa-external-link"></i></span></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      SonarQube安装部署以及代码分析实例过程小记
    
    </summary>
    
      <category term="Linux" scheme="https://iamzhl.top/categories/Linux/"/>
    
      <category term="运维" scheme="https://iamzhl.top/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="SonarQube" scheme="https://iamzhl.top/tags/SonarQube/"/>
    
      <category term="sonar-scanner" scheme="https://iamzhl.top/tags/sonar-scanner/"/>
    
  </entry>
  
  <entry>
    <title>MantisBT 安装部署过程</title>
    <link href="https://iamzhl.top/MantisBT-install-and-deploy.html"/>
    <id>https://iamzhl.top/MantisBT-install-and-deploy.html</id>
    <published>2018-08-18T05:53:09.000Z</published>
    <updated>2019-03-11T16:21:49.896Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h1 id="MantisBT软件安装部署过程"><a href="#MantisBT软件安装部署过程" class="headerlink" title="MantisBT软件安装部署过程"></a><strong><center>MantisBT软件安装部署过程</center></strong></h1><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>&#160;&#160;&#160;&#160;Mantis是一个基于PHP技术的轻量级的开源缺陷跟踪系统，以Web操作的形式提供项目管理及缺陷跟踪服务。在功能上、实用性上足以满足中小型项目的管理及跟踪。更重要的是其开源，不需要负担任何费用。</p><h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><p>Mantis安装部署环境如下：</p><table><thead><tr><th>名称</th><th>版本号</th><th>描述</th></tr></thead><tbody><tr><td>Mantisbt</td><td>2.16.0</td><td>BugTracing 软件</td></tr><tr><td>操作系统</td><td>CentOS 7</td><td>RedHat 社区发行版</td></tr><tr><td>PHP</td><td>7.2.8</td><td>PHP 环境</td></tr></tbody></table><h1 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br><span class="line"><span class="comment"># yum -y install libicu libicu-devel libicu-doc</span></span><br><span class="line"><span class="comment"># yum -y install php70w php70w-gd php70w-xml php70w-mysql php70w-mbstring php70w-ldap php70w-xmlrpc php70w-odbc php70w-pear php70w-soap php70w-snmp</span></span><br></pre></td></tr></table></figure><h3 id="安装PHPMailer"><a href="#安装PHPMailer" class="headerlink" title="安装PHPMailer"></a>安装PHPMailer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Synchro/PHPMailer/releases/tag/v5.2.13</span><br></pre></td></tr></table></figure><p>下载解压到/var/www/html/mantis/PHPMailer-5.2.13/</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/0b/f7ba2cdc89ecb4edee3d7c32861ad1.jpg" alt></p><h3 id="安装apache-mysql等必要软件"><a href="#安装apache-mysql等必要软件" class="headerlink" title="安装apache mysql等必要软件"></a>安装apache mysql等必要软件</h3><p>MySQL的Server在CentOS 7上从默认软件列表中被移除了，用MariaDB来代替，所以这导致我们必须要去官网上进行下载，找到链接，用wget打开，然后再安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># rpm -ivh mysql57-community-release-el7-9.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum -y install mysql mysql-server mysql-devel</span></span><br></pre></td></tr></table></figure><p>启动MySQL服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><p>获取安装MySQL时的初始密码并登录MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep 'temporary password' /var/log/mysqld.log</span></span><br><span class="line"><span class="comment"># mysql -u root -p</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/4a/a001ae2bae5a494c7329cd78a477a3.jpg" alt></p><p>登录成功后修改密码，首先修改安全策略为0，然后将密码长度限制修改为1，最后修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global validate_password_policy=0;</span><br><span class="line">mysql&gt; set global validate_password_length=1;</span><br><span class="line">mysql&gt; set password for root@localhost=password(&apos;root&apos;);</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a2/0f74ed53f3a426d1fe005228478d8f.jpg" alt></p><p>安装apache httpd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd</span></span><br><span class="line"><span class="comment"># systemctl enable httpd   //自启动</span></span><br><span class="line"><span class="comment"># systemctl start httpd    //启动</span></span><br></pre></td></tr></table></figure><h3 id="安装mantis"><a href="#安装mantis" class="headerlink" title="安装mantis"></a>安装mantis</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /var/www/html</span></span><br><span class="line"><span class="comment"># wget https://jaist.dl.sourceforge.net/project/mantisbt/mantis-stable/2.18.0/mantisbt-2.18.0.zip</span></span><br></pre></td></tr></table></figure><h4 id="解压重命名"><a href="#解压重命名" class="headerlink" title="解压重命名"></a>解压重命名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar zxvf mantisbt-2.16.0.tar.gz</span></span><br><span class="line"><span class="comment"># mv mantisbt-2.16.0 mantis</span></span><br><span class="line"><span class="comment"># mv mantis /var/www/html/</span></span><br></pre></td></tr></table></figure><h4 id="修改用户组"><a href="#修改用户组" class="headerlink" title="修改用户组"></a>修改用户组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R apache:apache /var/www/html/mantis</span></span><br></pre></td></tr></table></figure><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-7 html]<span class="comment"># mysql -u root -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 8</span><br><span class="line">Server version: 5.7.23 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; create database mantis;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all privileges on mantis.* to root@localhost identified by <span class="string">'123456'</span>;</span><br><span class="line">ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all privileges on mantis.* to root@localhost identified by <span class="string">'123456'</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line">[root@centos-7 html]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>打开浏览器在地址栏输入 <span class="exturl" data-url="aHR0cDovLzEwLjIxMS41NS4xNzo4Mi9tYW50aXM=" title="http://10.211.55.17:82/mantis">http://10.211.55.17:82/mantis<i class="fa fa-external-link"></i></span> – 格式为 <code>http://IP:端口/mantis文件夹名称</code>，这时就会自动跳转到php安装向导的页面:</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/13/430b174ae372e2c4854b5804123ab1.jpg" alt></p><p>&#160;&#160;&#160;&#160;填好主机、密码等信息之后点击 Install/Upgrade Database 安装数据库。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/86/f2dd1067427ccefb9829d5a3e2903e.jpg" alt></p><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p>进入Mantis登录界面，输入用户密码：administrator/root ，登陆即可看到mantis主界面。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b1/c3e84af9570ae5c9d61d788d482a69.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f4/2302c64875ae7556c732820ffe6c2f.jpg" alt></p><h2 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h2><p>修改MantisBT/config/config_inc.php文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$g_enable_email_notification = ON;</span><br><span class="line">$g_administrator_email = &apos;mailuser&apos;;    # 邮箱地址</span><br><span class="line">$g_webmaster_email = &apos;mailuser&apos;;        # 邮箱地址</span><br><span class="line">$g_from_email = &apos;mailuser&apos;;             # 邮箱地址</span><br><span class="line">$g_from_name = &apos;Mantis Bug Tracker&apos;;</span><br><span class="line">$g_phpMailer_method = PHPMAILER_METHOD_SMTP;</span><br><span class="line">$g_smtp_host = &apos;smtp.163.com&apos;;          # SMTP 服务器</span><br><span class="line">$g_smtp_username = &apos;mailuser&apos;;          # 邮箱地址</span><br><span class="line">$g_smtp_password = &apos;mailpwd&apos;;           # 邮箱密码</span><br><span class="line">$g_use_phpMailer = ON; </span><br><span class="line">$g_return_path_email = &apos;mailuser&apos;;      # 邮箱地址</span><br></pre></td></tr></table></figure><h2 id="中文配置"><a href="#中文配置" class="headerlink" title="中文配置"></a>中文配置</h2><p>修改/var/www/html/mantis/config_defaults_inc.php文件，在该文件中找到语言设置的地方，修改$g_default_language，将’english’改为’chinese_simplified’。懒得找的话直接复制下面的命令也可以。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sed -i -e "s/$g_default_language = 'auto'/$g_default_language = 'chinese_simplified'/g" /var/www/html/mantis/config_defaults_inc.php</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/17/52f55640c0580b49bb51e81728e32b.jpg" alt></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>问题描述：配置完成后，无法发送邮件。</p><p>解决方法：<br>邮箱配置问题，添加本地邮箱服务器，设置本地邮箱，对于本地测试邮箱，设置$g_smtp_host=本地IP地址。</p><h1 id="实例运行"><a href="#实例运行" class="headerlink" title="实例运行"></a>实例运行</h1><ul><li>为了便于理解，先给出BUG跟踪流程图：</li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b7/a17671861ee0f1c0ef2d34063c1f7e.png" alt></p><ul><li>Mantis使用流程图：</li></ul><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/36/e0cd2969561f3a3847f00064f10d86.jpg" alt></p><ul><li>新用户创建与登录</li></ul><p>目前本系统的访问地址为：<span class="exturl" data-url="aHR0cDovL0lQOnBvcnQvbWFudGlzL2xvZ2luX3BhZ2UucGhw77yM55So5oi35Y+v5Lul6YCa6L+H6aaW6aG15pi+56S655qEJnF1b3Q75rOo5YaM5LiA5Liq5paw5biQ5Y+3JnF1b3Q76L+b6KGM5paw55So5oi35rOo5YaM44CC" title="http://IP:port/mantis/login_page.php，用户可以通过首页显示的&quot;注册一个新帐号&quot;进行新用户注册。">http://IP:port/mantis/login_page.php，用户可以通过首页显示的&quot;注册一个新帐号&quot;进行新用户注册。<i class="fa fa-external-link"></i></span></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/7d/1aa6506c45bdc101125dbf0eb471cb.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/e0/c44b7bd62656a42effb30cbe072d8d.jpg" alt></p><p>然后点击邮箱内的激活邮件，进行用户名与密码的设置。也可以通过管理员创建新用户</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/f3/3984a7b93cb83f5018a886334554f3.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/38/81f16e90a837e3b2e4753481d53d49.jpg" alt></p><p>管理员可以对用户的角色、所属的项目以及一些其他的情况进行对应的配置。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/7e/8a3bf7d3b7d54549861c08cc2b8695.jpg" alt></p><p>各种具体的配置以及各种角色用户的权限可参见管理员的管理视图。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/64/fb372744682c06a5abf50d6d08e3c3.jpg" alt></p><p><strong>操作流程</strong><br>首先，说明一下系统中的角色和一般所对应的人员：观察者（复查员）、报告者（测试员）、升级者（审核员）、开发人员（开发员）、经理（项目经理）、管理员（系统管理员）。还要简单说明一下问题状态及相关含义（以上的两点只是中文理解和中文翻译的问题，可以在mantisbt-2.15.0/lang/strings_chinese_simplified.txt中修改）：</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/32/a9311c413f72019f384eb9fdb64e91.jpg" alt></p><ul><li>新建：新提交的报告，默认状态为新建</li><li>反馈：修正的问题经过测试后仍不完善</li><li>认可：报告的问题确实存在</li><li>已确认：通常为项目经理确认时使用</li><li>已分配：分派给具体开发人员</li><li>已解决：修改后的问题，可以进行测试</li><li>已关闭：测试通过的问题，或者在报告周期内判定为无需修改的问题。</li></ul><p>下面介绍一下简单的操作流程，这里以管理员和报告者作为示例，这里为了方便示例，示例中管理员包含了其他角色属性。观察者、升级者以及经理可以根据具体情况进行添加。</p><ul><li>提交问题</li></ul><p><strong>权限：</strong>全部角色<br><strong>必填信息：</strong>分类、摘要、描述、查看权限<br><strong>选填信息：</strong>出现频率、严重性、优先级、选择平台设置、重现步骤、辅助、标签、上传文件。<br><strong>问题单状态：</strong>新建</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/7a/b1f51f397d2700ccd2ae21cc7edbc7.jpg" alt></p><ul><li>审核问题</li></ul><p><strong>权限：</strong>审核员、项目经理、（开发员）<br><strong>可进行操作：</strong>添加附件、添加注释<br><strong>问题单状态：</strong>新建 -&gt; 已审核（认可），审核员对问题进行审核，并确认此问题；新建 -&gt; 已关闭，审核员认为报告的问题不存在或无需修改。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/cc/cf2fa843e333b7b168418e13720f06.jpg" alt></p><ul><li>确认问题</li></ul><p><strong>权限：</strong>项目经理<br><strong>问题单状态：</strong>认可 -&gt; 已确认，项目经理确认问题，确认后进入修改流程；认可 -&gt; 反馈，项目经理对问题存在异议，反馈给审核者。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/61/b450cb7f3eb6af3ce04b1e071dd25e.jpg" alt></p><ul><li>分派问题</li></ul><p><strong>权限：</strong>项目经理、开发员<br><strong>问题单状态：</strong>已确认 -&gt; 已分派，项目经理分派问题给相应的开发人员；已分派 -&gt; 已分派，开发组长也可以给组员分派问题。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/97/1e02d524da8f78c447a2fae2b0ceb3.jpg" alt></p><ul><li>修复问题</li></ul><p><strong>权限：</strong>开发员<br><strong>问题单状态：</strong>已分派 -&gt; 已解决，分派给开发员的问题已修复及内部测试，可以提交业务测试时。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/46/f8d53110204d554fe1339fa16d4d98.jpg" alt></p><ul><li>测试问题</li></ul><p><strong>权限：</strong>报告者<br><strong>问题单状态：</strong>已解决 -&gt; 已关闭，报告者对已解决的问题测试且测试通过；已解决 -&gt; 反馈，报告者对已解决的问题测试，而测试未通过，开发员可对反馈的问题继续修复，再进入后续环节。</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/93/d945f5412b7aece0c5595564633ad6.jpg" alt></p><p>到此，整个流程结束。<br><strong>说明：整个流程中，问题处于不同的状态，标记的颜色不同。</strong></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      MantisBT是一个基于PHP技术的轻量级的开源缺陷跟踪系统，以Web操作的形式提供项目管理及缺陷跟踪服务。在功能上、实用性上足以满足中小型项目的管理及跟踪。更重要的是其开源，不需要负担任何费用。本文简介MantisBT的安装部署过程。
    
    </summary>
    
      <category term="Linux" scheme="https://iamzhl.top/categories/Linux/"/>
    
      <category term="运维" scheme="https://iamzhl.top/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="MantisBT" scheme="https://iamzhl.top/tags/MantisBT/"/>
    
      <category term="Bug追踪" scheme="https://iamzhl.top/tags/Bug%E8%BF%BD%E8%B8%AA/"/>
    
  </entry>
  
  <entry>
    <title>awk to use</title>
    <link href="https://iamzhl.top/awk-to-use.html"/>
    <id>https://iamzhl.top/awk-to-use.html</id>
    <published>2018-08-05T10:01:00.000Z</published>
    <updated>2019-03-11T16:21:49.905Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>awk</code>是<code>Linux</code>最常用的字符串处理工具</p><h1 id="awk-内置参数"><a href="#awk-内置参数" class="headerlink" title="awk 内置参数"></a>awk 内置参数</h1><ul><li>NR – 行号</li><li>NF – 列总数</li><li>FILENAME – 当前文件名</li></ul><blockquote><p>实例</p></blockquote><ul><li><p>打印<code>/etc/passwd</code>每行的行号，每行的字符总数以及第一行(即每行的用户名)</p><p><code>print</code>实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F <span class="string">':'</span> <span class="string">'&#123;print "Line:"NR,"Col:"NF,"User:"$1&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><code>printf</code>实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F <span class="string">':'</span> <span class="string">'&#123;printf "Line:%s,Col:%s,User:%s\n",NR,NF,$1&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>打印<code>/etc/passwd</code>中<code>UID(即第三列)</code>大于100的行的行号，字符总数以及第一列(即每行的用户名)</p><p><code>print</code>实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F <span class="string">':'</span> <span class="string">'&#123;if ($3&gt;100) print "Line:"NR,"Col:"NF,"User:",$1&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure></li></ul><p><code>printf</code>实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F <span class="string">':'</span> <span class="string">'&#123;if ($3&gt;100) printf("Line:%s,Col:%s,User:%s\n",NR,NF,$1)&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>提取服务器日志<code>fresh.log</code>中<code>ERROR</code>行发生的时间</li></ul><p><code>fresh.log</code>内容格式如下图</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/7b/0fc81ccb4783036209f7ed10c01128.jpg" alt></p><p>利用<code>sed</code>和<code>awk</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed <span class="string">'/ERROR/p'</span> fresh.log | awk <span class="string">'&#123;print $1&#125;'</span></span><br></pre></td></tr></table></figure><p>只利用<code>awk</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk <span class="string">'/ERROR/&#123;print $1&#125;'</span> fresh.log</span><br></pre></td></tr></table></figure><h1 id="START-END"><a href="#START-END" class="headerlink" title="START END"></a><code>START</code> <code>END</code></h1><blockquote><p><code>awk</code>提供了一个简单的方式在利用<code>awk</code>处理编程需求时的问题，例如制表时需在表前打印表头、表后打印表尾。</p></blockquote><blockquote><p>举一个案例，制表显示<code>/etc/passwd</code>的行号、列号和用户名</p></blockquote><blockquote><p>思路是首先在开头打印”Line Col User”，然后依次打印<code>/etc/passwd</code>每一行的行号、列号和用户名，最后另起一行打印<code>--------</code>并在中间加入<code>awk</code>操作的文件名以结束制表</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F <span class="string">':'</span> <span class="string">'BEGIN&#123;print "Line    Col    User"&#125;&#123;print NR,NF,$1&#125;END&#123;print "------",FILENAME,"------"&#125;'</span> /etc/passwd | grep -v <span class="string">"#"</span></span><br></pre></td></tr></table></figure><blockquote><p>其中的<code>grep -v &quot;#&quot;</code>用以过滤掉<code>/etc/passwd</code>中开头的无用说明信息</p></blockquote><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><blockquote><p>为截图方便这里只截了前面的一些行和最后的一些行</p></blockquote><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/93/04d33ecfbe22a469a95806f4d7e33f.jpg" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/6a/599d7e553eddcb04e05d87118fe358.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      awk 使用小记
    
    </summary>
    
      <category term="Linux" scheme="https://iamzhl.top/categories/Linux/"/>
    
      <category term="学习" scheme="https://iamzhl.top/categories/Linux/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="https://iamzhl.top/tags/Linux/"/>
    
      <category term="学习" scheme="https://iamzhl.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>quicksort</title>
    <link href="https://iamzhl.top/quicksort.html"/>
    <id>https://iamzhl.top/quicksort.html</id>
    <published>2018-07-20T04:53:01.000Z</published>
    <updated>2019-03-11T16:21:49.905Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:05 GMT+0800 (中国标准时间) --><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">int</span> i, j, t, temp; </span><br><span class="line"><span class="keyword">if</span>(left &gt; right) </span><br><span class="line">   <span class="keyword">return</span>; </span><br><span class="line"></span><br><span class="line">temp = a[left];</span><br><span class="line">i = left; </span><br><span class="line">j = right; </span><br><span class="line"><span class="keyword">while</span>(i != j) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">while</span>(a[j] &gt;= temp &amp;&amp; i &lt; j) </span><br><span class="line">j --; </span><br><span class="line"><span class="keyword">while</span>(a[i] &lt;= temp &amp;&amp; i &lt; j) </span><br><span class="line">i ++; </span><br><span class="line"><span class="keyword">if</span>(i &lt; j) </span><br><span class="line">&#123; </span><br><span class="line">t = a[i]; </span><br><span class="line">a[i] = a[j]; </span><br><span class="line">a[j] = t; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">a[left] = a[i]; </span><br><span class="line">a[i] = temp; </span><br><span class="line"> </span><br><span class="line">quicksort(a, left, i<span class="number">-1</span>);</span><br><span class="line">quicksort(a, i+<span class="number">1</span>, right);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, t; </span><br><span class="line"><span class="keyword">int</span> n = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>;i &lt;= n; i++) </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]); </span><br><span class="line"></span><br><span class="line">quicksort(a, <span class="number">1</span>, n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]); </span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/b8/847de187a667d431036df4a77966d9.jpg" alt></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      快速排序算法实现
    
    </summary>
    
      <category term="算法" scheme="https://iamzhl.top/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="快速排序" scheme="https://iamzhl.top/tags/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>High Sierra 和 Mojave 镜像大全</title>
    <link href="https://iamzhl.top/High-Sierra-and-Mojave-Images-update.html"/>
    <id>https://iamzhl.top/High-Sierra-and-Mojave-Images-update.html</id>
    <published>2018-07-15T07:58:04.000Z</published>
    <updated>2019-03-30T13:15:13.490Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本人所有镜像均采用<code>Applestore</code>官方商店下载整包制作，适用于<code>gpt</code>分区表，加入了各个版本刚推送时的<code>Clover</code>源码最新引导，后续的测试版推送之后我会尽早做出供坛友使用，希望大家多多支持给楼主加个分，你们的支持就是我的动力</p><hr><p>楼主所做的镜像全部集成多驱动，多<code>config</code>，镜像所集成的这些东西只是方便大家用，坛友写入之后请适当删减使用，有能力的或者本身自己有一套适合自己的<code>EFI</code>的朋友请用自己的，望周知。</p><p><strong><em>PS: 镜像内驱动和config是为新手准备，老鸟勿喷<br>镜像内有文件详细说明，新手请按说明自行配置引导。</em></strong></p><h2 id="最近一次更新内容"><a href="#最近一次更新内容" class="headerlink" title="最近一次更新内容"></a>最近一次更新内容</h2><p>新款<code>MacBook Pro</code>上市之后，<code>Apple</code>推出特供版本以支持八代<code>CPU</code>，依然是<code>10.13.6</code>，此次版本号为<code>17G2208</code>，经测试，已原生支持八代机器</p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/35/a6f93b4a09ab4880e7b5736b6e87e7.jpg" alt></p><p>此外,<code>Clover</code>也及时跟新了<code>mbp15,1</code>以及<code>mbp15,2</code>的<code>SMBIOS</code>，推荐大家使用，低压本用<code>mbp15,2</code>，其他<code>mbp15,1</code>，下面是<code>SMBIOS</code>，大家可以直接套用，记得修改<code>BoardSerialNumber</code>为自己之前正在用的。</p><blockquote><p>MacBook Pro 15,1</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;SMBIOS&lt;/key&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;BiosReleaseDate&lt;/key&gt;</span><br><span class="line">&lt;string&gt;06/26/2018&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BiosVendor&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BiosVersion&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MBP151.88Z.0178.B00.1806260902&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Board-ID&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Mac-937A206F2EE63C01&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BoardManufacturer&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BoardSerialNumber&lt;/key&gt;</span><br><span class="line">&lt;string&gt;C02418108QXF64WCB&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BoardType&lt;/key&gt;</span><br><span class="line">&lt;integer&gt;11&lt;/integer&gt;</span><br><span class="line">&lt;key&gt;BoardVersion&lt;/key&gt;</span><br><span class="line">&lt;string&gt;1.0&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ChassisAssetTag&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MacBook-Aluminum&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ChassisManufacturer&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ChassisType&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0x09&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Family&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MacBook Pro&lt;/string&gt;</span><br><span class="line">&lt;key&gt;FirmwareFeatures&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0xFC0FE137&lt;/string&gt;</span><br><span class="line">&lt;key&gt;FirmwareFeaturesMask&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0xFF1FFF3F&lt;/string&gt;</span><br><span class="line">&lt;key&gt;LocationInChassis&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Part Component&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Manufacturer&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Mobile&lt;/key&gt;</span><br><span class="line">&lt;true/&gt;</span><br><span class="line">&lt;key&gt;PlatformFeature&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0x1A&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ProductName&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MacBookPro15,1&lt;/string&gt;</span><br><span class="line">&lt;key&gt;SerialNumber&lt;/key&gt;</span><br><span class="line">&lt;string&gt;C02X1HACKGYG&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Version&lt;/key&gt;</span><br><span class="line">&lt;string&gt;1.0&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br></pre></td></tr></table></figure><blockquote><p>MacBook Pro 15,2</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;SMBIOS&lt;/key&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;BiosReleaseDate&lt;/key&gt;</span><br><span class="line">&lt;string&gt;06/26/2018&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BiosVendor&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BiosVersion&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MBP152.88Z.0178.B00.1806260902&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Board-ID&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Mac-827FB448E656EC26&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BoardManufacturer&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BoardSerialNumber&lt;/key&gt;</span><br><span class="line">&lt;string&gt;C02418108QXF64WCB&lt;/string&gt;</span><br><span class="line">&lt;key&gt;BoardType&lt;/key&gt;</span><br><span class="line">&lt;integer&gt;11&lt;/integer&gt;</span><br><span class="line">&lt;key&gt;BoardVersion&lt;/key&gt;</span><br><span class="line">&lt;string&gt;1.0&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ChassisAssetTag&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MacBook-Aluminum&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ChassisManufacturer&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ChassisType&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0x09&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Family&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MacBook Pro&lt;/string&gt;</span><br><span class="line">&lt;key&gt;FirmwareFeatures&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0xFC0FE137&lt;/string&gt;</span><br><span class="line">&lt;key&gt;FirmwareFeaturesMask&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0xFF1FFF3F&lt;/string&gt;</span><br><span class="line">&lt;key&gt;LocationInChassis&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Part Component&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Manufacturer&lt;/key&gt;</span><br><span class="line">&lt;string&gt;Apple Inc.&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Mobile&lt;/key&gt;</span><br><span class="line">&lt;true/&gt;</span><br><span class="line">&lt;key&gt;PlatformFeature&lt;/key&gt;</span><br><span class="line">&lt;string&gt;0x1A&lt;/string&gt;</span><br><span class="line">&lt;key&gt;ProductName&lt;/key&gt;</span><br><span class="line">&lt;string&gt;MacBookPro15,2&lt;/string&gt;</span><br><span class="line">&lt;key&gt;SerialNumber&lt;/key&gt;</span><br><span class="line">&lt;string&gt;C02X1HACJHCD&lt;/string&gt;</span><br><span class="line">&lt;key&gt;Version&lt;/key&gt;</span><br><span class="line">&lt;string&gt;1.0&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br></pre></td></tr></table></figure><h2 id="镜像内容"><a href="#镜像内容" class="headerlink" title="镜像内容"></a>镜像内容</h2><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/88/e3735f1df7c1698869bc4700b0e34f.png" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/48/99a6d0d9094d41acc455008be82109.png" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/48/87d2b0ec6f40a3df7347148b03d196.png" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/04/9fa489977f2fc21eccce5b795eddb6.png" alt></p><p><img src="https://raw.githubusercontent.com/athlonreg/BlogImages/master/Images/a6/ba1d85d46d0523daf0d539579bcbbd.png" alt></p><h2 id="镜像地址"><a href="#镜像地址" class="headerlink" title="镜像地址"></a>镜像地址</h2><p>每出一个版本都写一个帖子的话太麻烦，所以决定直接写一个镜像的集合贴，下面是各个版本的链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链接:https://pan.baidu.com/s/1ymm0dm2R3dlFGyCH88fbmA  密码:vvon</span><br></pre></td></tr></table></figure><h2 id="镜像校验"><a href="#镜像校验" class="headerlink" title="镜像校验"></a>镜像校验</h2><p>为防止下载文件损坏，请尽量进行<code>MD5</code>、<code>SHA1</code>、<code>SHA256</code>校验，校验文件以图片的形式存在于各个镜像文件夹内。</p><h2 id="镜像列表"><a href="#镜像列表" class="headerlink" title="镜像列表"></a>镜像列表</h2><ul><li><p>OS X EI Capitan</p><ul><li>OS X EI Capitan 10.11.6 15G31</li></ul></li><li><p>macOS Sierra</p><ul><li>macOS Sierra 10.12.5 16F73</li><li>macOS Sierra 10.12.6 16G29</li></ul></li><li><p>macOS High Sierra</p><ul><li>macOS High Sierra DP1 17A264c</li><li>macOS High Sierra DP1 17A291m</li><li>macOS High Sierra DP1 17A306F</li><li>macOS High Sierra DP1 17A315i</li><li>macOS High Sierra DP1 17A330h</li><li>macOS High Sierra DP1 17A344b</li><li>macOS High Sierra DP1 17A352a</li><li>macOS High Sierra DP1 17A358a</li><li>macOS High Sierra DP1 17A360a</li><li>macOS High Sierra Golden Master 17A362a</li><li>macOS High Sierra 10.13.0 17A365</li><li>macOS High Sierra 10.13.0 17A405</li><li>macOS High Sierra 10.13.1 17B48</li><li>macOS High Sierra 10.13.2 17C88</li><li>macOS High Sierra 10.13.2 17C88 光 - 暗影精灵 II 专用</li><li>macOS High Sierra 10.13.3 17D47</li><li>macOS High Sierra 10.13.4 17E199</li><li>macOS High Sierra 10.13.5 17F77</li><li>macOS High Sierra 10.13.6 17G65</li><li>macOS High Sierra 10.13.6 17G2112</li><li>macOS High Sierra 10.13.6 17G2208</li></ul></li><li><p>macOS Mojave</p><ul><li>macOS Mojave 10.14 DP1 18A293u</li><li>macOS Mojave 10.14 DP2 18A324h</li><li>macOS Mojave 10.14 DP3 18A326h</li><li>macOS Mojave 10.14 DP4 18A336e</li><li>macOS Mojave 10.14 DP5 18A347e</li><li>macOS Mojave 10.14 DP6 18A353d</li><li>macOS Mojave 10.14 DP7 18A365a</li><li>macOS Mojave 10.14 DP8 18A371a</li><li>macOS Mojave 10.14 DP9 18A377a</li><li>macOS Mojave 10.14 DP10 18A384a</li><li>macOS Mojave 10.14 Golden Master 18A389</li><li>macOS Mojave 10.14.0 18A389</li><li>macOS Mojave 10.14.1 18B75</li><li>macOS Mojave 10.14.1 18B2107</li><li>macOS Mojave 10.14.1 18B3094</li><li>macOS Mojave 10.14.2 18C54</li><li>macOS Mojave 10.14.3 18D42</li><li>macOS Mojave 10.14.4 18E226</li><li>macOS Mojave 10.14.4 18E2034 (iMac 19 特供版)</li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      macOS High Sierra 以及 macOS Mojave 镜像大全(持续更新)
    
    </summary>
    
      <category term="黑苹果" scheme="https://iamzhl.top/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="原版镜像" scheme="https://iamzhl.top/tags/%E5%8E%9F%E7%89%88%E9%95%9C%E5%83%8F/"/>
    
      <category term="黑苹果镜像" scheme="https://iamzhl.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>mac 上使用字符串处理神器 sed 的正确姿势</title>
    <link href="https://iamzhl.top/Command-sed-on-mac.html"/>
    <id>https://iamzhl.top/Command-sed-on-mac.html</id>
    <published>2018-07-07T14:04:34.000Z</published>
    <updated>2019-03-11T16:21:49.886Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Fri May 17 2019 10:33:04 GMT+0800 (中国标准时间) --><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>sed</code>是<code>shell</code>中字符串处理的三大神器之一，利用<code>sed</code>进行字符串处理对从事<code>Linux</code>相关职业的人来说是必不可少的，但是在<code>mac</code>上的<code>sed</code>与<code>Linux</code>的<code>sed</code>是有一定区别的，为什么呢，因为<code>mac</code>实质上和<code>Linux</code>就是不一样的，尽管其中很多基本命令是通用的，例如<code>ls</code>、<code>cd</code>、<code>pwd</code>等。<code>mac</code>是<code>unix</code>内核，是基于<code>FreeBSD</code>的，而我们常用的<code>Linux</code>如<code>Ubuntu</code>、<code>CentOS</code>等是<code>Linux</code>内核。</p><h2 id="sed的不同"><a href="#sed的不同" class="headerlink" title="sed的不同"></a><code>sed</code>的不同</h2><p>非常大的一个坑就是<code>sed</code>命令的不统一，<code>Linux</code>的<code>sed</code>是基于<code>GNU</code>的<code>sed</code>，而<code>FreeBSD</code>中的<code>sed</code>则是基于<code>XNU</code>的，其用法有些不同，下面会做对比简要说明。</p><p>拿最常用的追加行来说，我们假设一个场景，我需要对<code>test.txt</code>文件实时写入，在文件第二行添加<code>1234</code>，文件初始内容如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.txt</span><br><span class="line">3333</span><br><span class="line">1112</span><br><span class="line">3333</span><br><span class="line"><span class="built_in">test</span></span><br><span class="line">4444</span><br><span class="line">5555</span><br></pre></td></tr></table></figure><p>在<code>Linux</code>下，我们只需要执行下面的命令即可实现追加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed -i -e <span class="string">'1a\1234'</span> test.txt</span><br></pre></td></tr></table></figure><p>但是在<code>mac</code>下这条命令会报错如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed: 1: &quot;1a\1234&quot;: extra characters after \ at the end of a command</span><br></pre></td></tr></table></figure><p>这是因为<code>xnu</code>的<code>sed</code>命令用法不同于<code>gnu</code>，具体可以通过下面的命令查看<code>sed</code>命令手册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man sed</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006dLY5Ily1fypvvrfr68j31p818kn8n.jpg" alt></p><p>那么我想用我习惯的<code>Linux</code>的<code>GNU-sed</code>怎么解决呢，我们可以安装<code>gnu-sed</code>来代替系统内的<code>sed</code>，具体方法如下</p><p>首先我们需要<code>Homebrew</code>包管理器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><p>然后，通过<code>brew</code>来安装<code>gnu-sed</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install gnu-sed</span><br></pre></td></tr></table></figure><p>默认<code>brew</code>会将<code>gnu-sed</code>安装到<code>/usr/local/Cellar/</code>目录下，这时我们就可以利用<code>gsed</code>来执行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gsed -i -e <span class="string">'1a\1234'</span> test.txt</span><br></pre></td></tr></table></figure><p>如果提示命令找不到的话，只需要将下面的路径添加到<code>PATH</code>环境变量就可以了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/Cellar/gnu-sed/4.5/bin/</span><br></pre></td></tr></table></figure><p>或者将<code>/usr/local/Cellar/gnu-sed/4.5/bin/gsed</code>添加别名都可以。</p><p>网上也有人用下面的命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install gnu-sed --with-default-names</span><br></pre></td></tr></table></figure><p>貌似这种方式直接替代了系统内的<code>sed</code>，我个人不是很推荐这种方式，不是说不好，而是当我们的机器不只是一个人用，是做服务器用的，或者有一些我们正在用的脚本里面有<code>xnu</code>的<code>sed</code>调用，那么这种方式就会造成一些问题，所以我个人认为安装了<code>gnu-sed</code>后，利用别名、环境变量、配置文件等方式调用是更好的一种方法，当然，这个根据个人需求决定就好了。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      mac上使用字符串处理神器sed的正确姿势
    
    </summary>
    
      <category term="学习" scheme="https://iamzhl.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="sed" scheme="https://iamzhl.top/tags/sed/"/>
    
      <category term="gnu-sed" scheme="https://iamzhl.top/tags/gnu-sed/"/>
    
      <category term="xnu-sed" scheme="https://iamzhl.top/tags/xnu-sed/"/>
    
  </entry>
  
</feed>
